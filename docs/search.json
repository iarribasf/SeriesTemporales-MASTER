[
  {
    "objectID": "04-08-Series_interrumpidas.html#uso-de-modelos-muy-adaptativos",
    "href": "04-08-Series_interrumpidas.html#uso-de-modelos-muy-adaptativos",
    "title": "Prediciendo series temporales interrumpidas",
    "section": "Uso de modelos muy adaptativos",
    "text": "Uso de modelos muy adaptativos\nAlgunos modelos, por su naturaleza, reaccionan muy rápidamente ante cambios en la estructura de la serie, adaptándose a ellos. Uno de estos modelos es el Alisado exponencial.\nCuando los parámetros de un modelo de Alisado están próximos a 1, el modelo usa preferentemente la información más reciente de la serie para ajustarse y predecir. De esta forma, ante una perturbación en la serie, estos modelos pueden ajustarse a ella con sencillez y rapidez.\nLa ventaja de esta estrategia es que simplemente hay que usar un modelo conocido, que es muy sencillo y muy rápido computacionalmente. Además, el ajuste y predicción con estos modelos es automático. La desventaja principal de los modelos de Alisado es que tardan algunos periodos en adaptarse, así que si los cambios se producen de forma constante, el modelo estará constantemente inadaptado."
  },
  {
    "objectID": "04-08-Series_interrumpidas.html#uso-de-intervención",
    "href": "04-08-Series_interrumpidas.html#uso-de-intervención",
    "title": "Prediciendo series temporales interrumpidas",
    "section": "Uso de intervención",
    "text": "Uso de intervención\nSi la perturbación no es excesivamente compleja, puede incluirse en el proceso de ajuste como intervención de un modelo Arima.\nEsta estrategia implica que tenemos un buen entendimiento de la perturbación: punto de inicio y final, efecto sobre la serie temporal, etc.\nSu ventaja de nuevo es que trabajamos con modelos ya conocidos y, además, que podremos estimar la estructura de la tendencia y la estacionalidad pasadas y sus cambios con la perturbación. Ahora bien, el modelo asumirá que el comportamiento de la serie tras la perturbación es similar al observado antes de la perturbación. Si esto no es cierto, las predicciones serán del todo incorrectas. Pero incluso si el supuesto es cierto y las previsiones son acertadas, su intervalo de confianza será más estrecho de lo correcto."
  },
  {
    "objectID": "04-08-Series_interrumpidas.html#fijar-las-observaciones-durante-la-perturbacion-como-valores-perdidos",
    "href": "04-08-Series_interrumpidas.html#fijar-las-observaciones-durante-la-perturbacion-como-valores-perdidos",
    "title": "Prediciendo series temporales interrumpidas",
    "section": "Fijar las observaciones durante la perturbacion como valores perdidos",
    "text": "Fijar las observaciones durante la perturbacion como valores perdidos\nUna aproximación más radical consiste en fijar como valores perdidos todas las observaciones de la serie temporal durante el periodo de la perturbación y ajustar un modelo a la serie resultante. Las predicciones que se realicen con este modelo serían las correspondientes a una realidad donde la perturbación no ha tenido lugar.\nUna ventaja de esta aproximación es que no se usa información durante el periodo de la perturbación, por lo que el intervalo de confianza de las predicciones será amplio durante la perturbación y tras ella, y no se irá estrechando hasta que haya suficientes datos como para estimar la distribución de las predicciones con más precisión.\nEntre las desventajas de este método están que solo se pueden usar modelos que permitan estimar con datos perdidos, por ejemplo modelos Arima, y que es necesario identificar en que periodo se inicia y termina la perturbación."
  },
  {
    "objectID": "04-08-Series_interrumpidas.html#trabajar-bajo-el-escenario-qué-hubiera-pasado-si",
    "href": "04-08-Series_interrumpidas.html#trabajar-bajo-el-escenario-qué-hubiera-pasado-si",
    "title": "Prediciendo series temporales interrumpidas",
    "section": "Trabajar bajo el escenario qué hubiera pasado si",
    "text": "Trabajar bajo el escenario qué hubiera pasado si\nEsta estrategia en un poco más elaborada que las ya mencionadas dado que toma elementos de varias de ellas. La idea básica es obtener la serie temporal que correspondería a un escenario donde la perturbación no ha tenido lugar y usar esta serie para predecir.\nPara el primer paso, obtener una serie completa donde la perturbación no ha tenido lugar tenemos dos alternativas:\n\nTerminamos la serie justo antes de la perturbación, la ajustamos a un modelo y hacemos predicciones durante todo el periodo de la perturbación. Estas predicciones sustituirán los valores reales de la serie, las que han tenido lugar durante a la perturbación.\nAsignamos como valores perdidos los datos de la serie durante la perturbación y ajustamos un modelo. Luego sustituimos los valores reales de la serie durante el periodo de la perturbación por los valores estimados por el modelo durante este mismo periodo.\n\nEn cualquiera de los dos casos, el resultado es una nueva serie que coincide con la original fuera de los periodos de la perturbación y durante la perturbación toma valores que hubieran podido tener lugar en un escenario donde esta no ha ocurrido.\nEsta nueva serie se ajusta por un modelo que, posteriormente, se usa para obtener las predicciones.\nLógicamente, esta estrategia comparte las ventajas y desventajas de las estrategias que usa para su implementación."
  },
  {
    "objectID": "04-08-Series_interrumpidas.html#uso-de-modelos-muy-adaptativos-1",
    "href": "04-08-Series_interrumpidas.html#uso-de-modelos-muy-adaptativos-1",
    "title": "Prediciendo series temporales interrumpidas",
    "section": "Uso de modelos muy adaptativos",
    "text": "Uso de modelos muy adaptativos\nObserva que esta aproximación básicamente consiste en no hacer nada más allá de elegir un método muy adaptativo. Por este motivo compararemos los resultados obtenidos con Alisado, un modelo muy adaptativo, y con Arima, un modelo muy poco adaptativo.\nLa Figura 2 muestra el resultado de aplicar Alisado y Arima a los datos. Las predicciones para 2020 se han realizado antes de que el efecto de la Covid-19 tenga lugar y siguen el patrón de pernoctaciones observado en el pasado. Ambos métodos ofrecen prácticamente las mismas predicciones y ambos sobrestiman la realidad.\nLas predicciones para 2021 se realizan después de observar 9 meses de fuerte caída de las pernoctaciones como efecto de la Covid-19 y ambos modelos se ajustan a esta caída. Sin embargo, ninguno es capaz de captar la recuperación ocurrida en las pernoctaciones en 2021, de forma que las previsiones de ese año se quedan por debajo de la realidad. Para el año 2022 ambos modelos son capaces de reconocer el incremento en la pernoctaciones ocurrida en los pasados meses, pero de nuevo no captan que las pernoctaciones seguirán creciendo y vuelven a realizar previsiones por debajo de la realidad. Si en 2021 las predicciones mejores son las obtenidas con Arima, en el año siguiente son la de Alisado.\nPara 2023 Alisado se ha adaptado plenamente a la casi completa recuperación ocurrida en 2022 y sus predicciones son razonablemente buenas. Por el contrario Arima realiza unas predicciones muy bajas debido a que el modelo identificado usa datos no solo de 2022 sino de años pasados. Por este mismo motivo las predicciones con Arima de 2024 vuelven a ser muy bajas. Además, sorprende lo elevadas de las predicciones de Alisado, que por lo demás repiten razonablemente bien el patrón observado en los dos años previos.\nEn general, ninguno de los dos métodos lo hace especialmente bien, aunque con el método de Alisado se obtienen mejores predicciones una vez la perturbación ha pasado.\n\n\n\n\n\n\n\n\n\n\n\n(a) Predicciones para 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Predicciones para 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Predicciones para 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n(d) Predicciones para 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n(e) Predicciones para 2024\n\n\n\n\n\n\n\nFigura 2: Modelos adaptativos. Cada panel muestra las predicciones de los doce meses de un año para la serie Pernoctaciones usando modelos de Alisado y Arima."
  },
  {
    "objectID": "04-08-Series_interrumpidas.html#uso-de-intervención-1",
    "href": "04-08-Series_interrumpidas.html#uso-de-intervención-1",
    "title": "Prediciendo series temporales interrumpidas",
    "section": "Uso de intervención",
    "text": "Uso de intervención\nAplicaremos la estrategia de la intervención usando el modelo Arima. Con tal fin vamos a crear dos variables de intervención: un primer cambio de nivel asociado al año de la pandemia, que empieza en marzo de 2020 y termina en diciembre de 2020; y un segundo cambio de nivel para el año 2021, desde enero hasta diciembre.\n\n\n\n\n\n\n\n\n\n\n\n(a) Predicciones para 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Predicciones para 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Predicciones para 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n(d) Predicciones para 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n(e) Predicciones para 2024\n\n\n\n\n\n\n\nFigura 3: Intervención. Cada panel muestra las predicciones de los doce meses de un año para la serie Pernoctaciones usando el modelo Arima.\n\n\n\nLa Figura 3 muestra las predicciones y el intervalo de confianza al 90%. Las predicciones para 2020, realizadas sin conocimiento de la próxima pandemia, siguen el patrón observado en el pasado. Como hasta 2019 la serie era muy regular, el ajuste es muy bueno y el intervalo de confianza de las predicciones estrecho.\nLas predicciones para 2021 se realizan tras casi un año de caída en las pernoctaciones con un modelo que estima la magnitud de esta caída a partir de la variable de intervención cambio de nivel en 2020. La predicción para 2021 se corrige a la baja por la mitad de esta magnitud estimada, porque asumimos que habrá una recuperación en el turismo, pero aun así en general se subestima fuertemente la realidad. Además, se observa un intervalo de predicción mucho más ancho debido al aumento de la incertidumbre en el comportamiento de la serie. Para las predicciones del año 2022 de nuevo se aplica la mitad de la caída en las pernoctaciones estimada con la variable de intervención cambio de nivel de 2021 porque otra vez asumimos que la recuperación del turismo continua. En este caso las previsiones a veces se quedan por debajo y otras por encima de la realidad. Además, los dos años de perturbación y cambios en el patrón de la serie se reflejan en un intervalo de confianza para las predicciones aun más amplio.\nDurante 2022 la serie ha regresado casi a la normalidad. Además, para las predicciones de 2023 ya no se aplican ninguno de los cambios de nivel estimados. El resultado son unas predicciones mucho mejores que las obtenidas previamente aunque su amplio intervalo de confianza evidencia que todavía pesa mucho la incertidumbre observada en el pasado, con tres años consecutivos de cambios en la estructura de la serie.\nLa predicciones de 2024 reproducen de forma imperfecta el patrón observado en la pernoctaciones los dos últimos años. Se observa que la variación estacional de las predicciones es mucho más suave que la real. La amplitud del intervalo de confianza es menor que el observado para las predicciones de 2023 debido a que la regularidad en la serie de los dos últimos años ha reducido la incertidumbre."
  },
  {
    "objectID": "04-08-Series_interrumpidas.html#fijar-las-observaciones-durante-la-perturbacion-como-valores-perdidos-1",
    "href": "04-08-Series_interrumpidas.html#fijar-las-observaciones-durante-la-perturbacion-como-valores-perdidos-1",
    "title": "Prediciendo series temporales interrumpidas",
    "section": "Fijar las observaciones durante la perturbacion como valores perdidos",
    "text": "Fijar las observaciones durante la perturbacion como valores perdidos\nAsignar a valores perdidos las observaciones durante el periodo de la perturbación es una forma radical de resolver el problema, pero muy sencilla de implementar. Asumiremos que el efecto de la pandemia se inició en marzo de 2020 y terminó en febrero de 2022. Las 24 observaciones de este periodo se asignarán como NA y la serie resultante se ajustará a un modelo Arima, sin necesidad de incluir intervención.\n\n\n\n\n\n\n\n\n\n\n\n(a) Predicciones para 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Predicciones para 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Predicciones para 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n(d) Predicciones para 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n(e) Predicciones para 2024\n\n\n\n\n\n\n\nFigura 4: Valores perdidos. Cada panel muestra las predicciones de los doce meses de un año para la serie Pernoctaciones usando el modelo Arima.\n\n\n\nLa Figura 4 muestra las predicciones y el intervalo de confianza al 90%. Para los cuatro primeros años la predicción muestra lo que hubiera pasado sin la pandemia de la Covid-19, basándose en el comportamiento de las pernoctaciones hasta 2019. Para los años 2020 y 2021 las predicciones sobrestiman tremendamente la realidad. Pero para el año 2022, cuando el efecto de la pandemia casi había pasado, las predicciones se ajustan mucho más a la serie, aunque la siguen sobrestimando ligeramente. Además, cuanto más alejado es el horizonte temporal de las predicciones, mayor es la incertidumbre y, por tanto, más amplio es el intervalo de confianza.\nFinalmente, en 2023 las predicciones se ajustan muy bien a la realidad, y para el año 2024 las predicciones, similares a la obtenidas para el año previo, posiblemente sigan siendo muy precisas."
  },
  {
    "objectID": "04-08-Series_interrumpidas.html#trabajar-bajo-el-escenario-qué-hubiera-pasado-si-1",
    "href": "04-08-Series_interrumpidas.html#trabajar-bajo-el-escenario-qué-hubiera-pasado-si-1",
    "title": "Prediciendo series temporales interrumpidas",
    "section": "Trabajar bajo el escenario qué hubiera pasado si",
    "text": "Trabajar bajo el escenario qué hubiera pasado si\nPara el escenario qué hubiera pasado si vamos a estimar un modelo Arima bajo el escenario previo (asignar a valores perdidos las observaciones durante el periodo de la perturbación), y usarlo para estimar que podría haber pasado durante la pandemia. Después, estimamos un segundo modelo Arima con toda la nueva serie y lo usamos para obtener las predicciones.\n\n\n\n\n\n\n\n\n\n\n\n(a) Predicciones para 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Predicciones para 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Predicciones para 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n(d) Predicciones para 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n(e) Predicciones para 2024\n\n\n\n\n\n\n\nFigura 5: Qué hubiera pasado si. Cada panel muestra las predicciones de los doce meses de un año para la serie Pernoctaciones usando el modelo Arima.\n\n\n\nBajo este escenario las predicciones resultan similares a las obtenidas bajo el supuesto previo con asignación de valores perdidos (véase Figura 5). Sin embargo, los intervalos de confianza son más estrechos. Al sustituir los valores perdidos por valores ajustados, el modelo estimado posteriormente trabaja con una serie muy regular sin incertidumbre y esto se refleja en la amplitud del intervalo de confianza."
  },
  {
    "objectID": "03-01-Tema1.html#qué-se-puede-predecir",
    "href": "03-01-Tema1.html#qué-se-puede-predecir",
    "title": "Series Temporales. Definición y componentes",
    "section": "1.1 ¿Qué se puede predecir?",
    "text": "1.1 ¿Qué se puede predecir?\nAlgunos datos son más fáciles de prever que otros. Puedes consultar múltiples páginas web con la hora en que sale el Sol en Valencia desde mañana hasta dentro de un año y todas ellas coinciden. Sin embargo, no encontrarás ninguna con la valoración exacta de las acciones en bolsa de INDRA para los próximos días. En medio están las múltiples páginas que predicen el consumo eléctrico en el largo plazo (dentro de varios años); todas ofrecen valores similares, pero no coincidentes.\nLa calidad de una predicción depende de varios factores, entre ellos:\n\nnuestro conocimiento sobre los determinantes del acontecimiento\nla cantidad de información pasada disponible\nla semejanza del pasado con el futuro\nsi las previsiones afectan a lo que estamos prediciendo."
  },
  {
    "objectID": "03-01-Tema1.html#para-qué-predecir",
    "href": "03-01-Tema1.html#para-qué-predecir",
    "title": "Series Temporales. Definición y componentes",
    "section": "1.2 ¿Para qué predecir?",
    "text": "1.2 ¿Para qué predecir?\nAlgunas de las razones por las que empresas y organismos necesitan hacer predicciones son:\n\nTomar decisiones en el presente sobre el futuro con más información reduciendo la incertidumbre.\nRed eléctrica española predice la demanda de electricidad de los próximos días para gestionar el complejo sistema producción de electricidad y ajustar la demanda a la oferta.\nUn supermercado predice la demanda de sus productos para evitar tanto rupturas de stock en el lineal como pérdidas por caducidad.\nUna aerolínea predice la demanda asientos en sus vuelos para gestionar su flota de aviones y ajustar los precios de los billetes.\nMedir el efecto de un shock en el mercado, un cambio en la regulación o una política empresarial.\n¿La Covid-19 ha producido un cambio en la decisión de las parejas de tener hijos? ¿Se ha reducido o aumentado la natalidad tras la Covid-19?\nLa nueva regulación de apartamentos turísticos en la ciudad, ¿cómo afecta la ocupación hotelera?\n¿En que medida un cambio en los parámetros o características de un juego de ordenador aumenta el tiempo de juego?\nEvaluar un efecto calendario.\nLa variación en el número de turistas en marzo y abril, según como caiga la Semana Santa.\nEl efecto de un febrero bisiesto sobre las ventas.\nEl efecto de la temperatura sobre un enfermedad respiratoria o el consumo de electricidad."
  },
  {
    "objectID": "03-01-Tema1.html#qué-haremos-y-qué-no-haremos-en-este-curso",
    "href": "03-01-Tema1.html#qué-haremos-y-qué-no-haremos-en-este-curso",
    "title": "Series Temporales. Definición y componentes",
    "section": "1.3 ¿Qué haremos y qué no haremos en este curso?",
    "text": "1.3 ¿Qué haremos y qué no haremos en este curso?\nEn este curso nos vamos a centrar en los métodos objetivos más fiables para obtener predicciones. Métodos que son replicables, cuyos resultados –las predicciones– son verificables y que son usados ampliamente por parte de organizaciones y empresas.\nNo podremos ver todos los métodos existentes, ¡ni aunque hubiera un grado solo para predicciones! Pero los que veremos te darán la base para aprender otros métodos de previsión: alisado exponencial con doble estacionalidad, el vecino más próximo, vectores autorregresivos, redes neuronales; y para aprender otros enfoques a la hora de hacer previsiones: modelos jerárquicos de series, boostrapping, bagging…\nNo vamos a aprender a predecir cotizaciones de bolsa, relaciones entre divisas o ratios financieros. La metodología para predecir estas series es completamente diferente y muy poco exitosa. Si fuera fácil, estaríamos todos invirtiendo, no dando clases (yo) o recibiéndolas (vosotros).\nPredeciremos las series de una en una, asumiendo que son independientes. Este supuesto no siempre se da, pero simplifica enormemente el análisis de una serie. Por ejemplo, predeciremos la serie de pernoctaciones en España en hoteles usando solo datos de esta serie. Sin embargo, seria de ayuda predecir de forma simultánea la serie de turistas llegados a España porque el volumen de pernoctaciones depende del número de turistas. Otra estrategia sería predecir las pernoctaciones en cada comunidad autónoma y luego sumarlas para obtener el total nacional."
  },
  {
    "objectID": "03-01-Tema1.html#definición",
    "href": "03-01-Tema1.html#definición",
    "title": "Series Temporales. Definición y componentes",
    "section": "2.1 Definición",
    "text": "2.1 Definición\nUna serie temporal es una variable medida secuencialmente en el tiempo a intervalos equiespaciados.\nLa representaremos por,\n\\[\\{y_t\\}_{t=1}^T=\\{y_1,y_2,\\ldots,y_T\\}.\\]\nLa serie aparece indexada por su fechado \\(t\\) y el valor \\(T\\) hará siempre referencia a la fecha del último dato.\nEl fechado varía en su frecuencia, que puede ser anual (baja frecuencia), trimestral, mensual, semanal, diario (alta frecuencia) o disponer casi de un continuo de datos."
  },
  {
    "objectID": "03-01-Tema1.html#proceso-generador-de-datos",
    "href": "03-01-Tema1.html#proceso-generador-de-datos",
    "title": "Series Temporales. Definición y componentes",
    "section": "2.2 Proceso generador de datos",
    "text": "2.2 Proceso generador de datos\nEl proceso generador de los datos de una serie temporal es en general desconocido, pero se puede aproximar por un modelo estadístico. Estos modelos se pueden clasificar en tres grandes familias según su naturaleza: deterministas, estocásticos y mixtos\nEn ocasiones las series temporales pueden ser modeladas de forma determinista ajustando los datos a funciones matemáticas: \\[y_t=f(t)+\\varepsilon_t.\\]\nSi las observaciones cercanas en el tiempo tienden a estar (cor)relacionadas, se puede aprovechar esta dependencia para entender la serie y predecirla con un modelo estocástico: \\[y_t=f(y_{t-1},y_{t-2},\\ldots)+\\varepsilon_t.\\]\nA veces, ambas situaciones se dan simultáneamente (modelos mixtos): \\[y_t=f(t,y_{t-1},y_{t-2},\\ldots)+\\varepsilon_t.\\]\nLa Figura 1 muestra un ejemplo gráfico de estos tres modelos estadísticos. La complejidad de la serie es mayor en los modelos con parte estocástica.\n\n\n\n\n\n\n\n\nFigura 1: Ejemplos de procesos generadores\n\n\n\n\n\nEn este curso se asumirá en todo momento que la serie temporal tiene una componente estocástica. Para series deterministas puedes usar los modelos de regresión verás en Modelos lineales."
  },
  {
    "objectID": "03-01-Tema1.html#lectura-de-datos-y-representación-gráfica",
    "href": "03-01-Tema1.html#lectura-de-datos-y-representación-gráfica",
    "title": "Series Temporales. Definición y componentes",
    "section": "2.3 Lectura de datos y representación gráfica",
    "text": "2.3 Lectura de datos y representación gráfica\nAntes de continuar vamos a importar con R tres de las series que usaremos de ejemplo en este tema: generación anual de residuos municipales per cápita (kg per cápita), los nacimientos mensuales y la demanda eléctrica diaria (GWh). Las tres series se refieren a España y servirán de ejemplo para el análisis de series con diferente fechado: anual, mensual y diario, respectivamente.\n\nGeneración de residuos municipales per cápita\nResiduos es una serie anual de 1995 a 2022 (fuente Instituto Nacional de Estadística) que muestra los residuos recogidos por o en nombre de las autoridades municipales y eliminados a través del sistema de gestión de residuos. Los datos están disponibles en el fichero Residuos.csv, que contiene dos variables o columnas de datos. La primera columna corresponde al año de la serie y la segunda contiene los residuos recogidos en kg per cápita. En la primera fila del fichero aparece el nombre de cada columna. Los valores no tienen decimales y los datos de cada fila vienen separados por un punto y coma.\n\nresiduos &lt;- read.csv2(\"./series/Residuos.csv\", \n                      header = TRUE)\n\nresiduos &lt;- ts(residuos[, 2], \n               start = 1995, \n               frequency  = 1)\n\n\n\n\n\n\n\nOjo con la lectura de datos\n\n\n\nUsamos para leer los datos read.csv2, indicando que la primera línea tiene el nombre de las variables. Esta función asume que el separador decimal es la coma “,” y que el separador entre variables es el punto y coma “;”.\nSi el separador decimal es el punto “.” y el separador de variables es la coma “,”, debes usar read.csv.\nEn cualquiera de estas funciones puedes modificar el separador decimal por medio del argumento dec; también puedes usar el argumento sep para indicar el carácter usado como separador de variables.\n\n\nLa función ts, de la librería stats, convierte un objeto (vector o matriz) en la clase serie temporal. En este caso seleccionamos solo la segunda columna, la que contiene el número de residuos generados.\n\nCon start indicamos el fechado del primer dato.\nCon frequency indicamos la frecuencia, que en este caso es un dato por año.\n\nUsa help(ts) para obtener más información y str(residuos) para ver qué contiene un objeto serie temporal.\n\n\n\n\n\n\nNombre del fichero y nombre de la serie\n\n\n\n\n\nPor comodidad (o pereza), muchas veces el nombre del fichero con los datos, el nombre del data.frame con su contenido en R y el nombre de la serie es el mismo. No tiene por que ser así, aunque en estos apuntes es lo más habitual.\nEn este caso, observa que primero creamos “residuos”, una base de datos (data.frame) con el contenido del fichero “Residuos.csv” que tiene dos variables (fechado y valores de la serie). Luego creamos la serie temporal “residuos” extrayendo de la base de datos la segunda columna (valores de la serie) y fechándola. Por tanto, estamos machacando la base de datos al poner a la serie el mismo nombre.\n\n\n\nPodemos dibujar la serie Residuos con la función plot o mejor con autoplot. Esta última está en el paquete forecast.\nEn general, las funciones gráficas que vamos a usar pertenecen a la librería forecast, pero en ocasiones las ampliaremos con funciones de la librería ggplot2. Te recomiendo cargar estas dos librerías desde el inicio. En casi todos los casos existe una versión de la función gráfica usada en la librería stats.\n\nlibrary(forecast)\nlibrary(ggplot2)\n\n\nautoplot(residuos,\n         xlab = \"\",\n         ylab = \"Kg per cápita\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 2: Residuos generados\n\n\n\n\n\n\n\nNacimientos en España\nNacimientos es una serie mensual de enero de 1975 a diciembre de 2023 (fuente: Instituto Nacional de Estadística). Los datos están disponibles en el fichero Nacimientos.csv. La primera columna del fichero tiene la fecha y la segunda la serie propiamente. En la primera fila aparece el nombre de cada columna. De nuevo seleccionamos solo la columna con los datos de nacimientos.\n\nnacimientos &lt;- read.csv2(\"./series/Nacimientos.csv\", \n                         header = TRUE)\n\nnacimientos &lt;- ts(nacimientos[, 2],\n                  start = c(1975, 1),\n                  frequency = 12)\n\n\n\n\n\n\n\n¿Sobrías responder a estas preguntas?\n\n\n\n¿Por qué se usa el argumento “header = TRUE”?\n¿Por qué la serie corresponde a la segunda columna de la base de datos “nacimientos”?\n\n\nEn este caso:\n\nCon start indicamos que el primer dato es enero de 1975. También sería correcto start = 1975. Si el primer dato fuera, por ejemplo, marzo de 1975, podríamos poner start = c(1975, 3) o start = 1975 + 2/12.\nCon frequency indicamos que se tienen 12 datos (meses) por año. Si la serie fuera trimestral pondríamos frequency = 4.\n\n\nautoplot(nacimientos,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 3: Nacimientos mensuales\n\n\n\n\n\n\n\nDemanda eléctrica\nDemanda eléctrica es una serie diaria desde el 1 enero de 2023 hasta el 31 diciembre de 2023 (fuente: Red Electrica de España). Los datos están disponibles en el fichero Consumo electrico.csv. El fichero solo tiene una columna, encabezada con un nombre, con los datos de la serie y el carácter decimal es el punto.\n\nelectricidad &lt;- read.csv(\"./series/Consumo electrico.csv\", \n                         header = TRUE)\n\nelectricidad &lt;- ts(electricidad[, 1],\n                   start = c(1, 7),\n                   frequency = 7)\n\nEn este caso:\n\nCon start indicamos que el primer dato es un domingo (día 7 de la semana) de la primera semana. Como ves no hay referencia al año. También sería correcto start = 1 + 6/7.\nCon frequency indicamos que se tienen 7 datos (días) por semana. Si la serie fuera de lunes a viernes pondríamos frequency = 5.\n\n\nautoplot(electricidad,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 4: Consumo diario de electricidad"
  },
  {
    "objectID": "03-01-Tema1.html#funciones-útiles-para-objetos-de-clase-ts",
    "href": "03-01-Tema1.html#funciones-útiles-para-objetos-de-clase-ts",
    "title": "Series Temporales. Definición y componentes",
    "section": "2.4 Funciones útiles para objetos de clase ts",
    "text": "2.4 Funciones útiles para objetos de clase ts\nOtras funciones relacionadas con los objetos de clase serie temporal que pueden ser útiles son:\n\nstart da el fechado del primer dato, y end da el fechado del último dato.\n\n\nstart(nacimientos); end(nacimientos)\n\n[1] 1975    1\n\n\n[1] 2023   12\n\nstart(electricidad); end(electricidad)\n\n[1] 1 7\n\n\n[1] 53  7\n\n\n\nfrequency da la frecuencia de los datos.\n\n\nfrequency(nacimientos)\n\n[1] 12\n\nfrequency(electricidad)\n\n[1] 7\n\n\n\ntime crea un vector con el fechado de una serie. Observa como guarda internamente R el fechado de una serie temporal. Esta es una función que usaremos constantemente.\n\n\nhead(time(nacimientos), n = 48)  #Mostramos sólo los 4 primeros años\n\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n1975 1975.000 1975.083 1975.167 1975.250 1975.333 1975.417 1975.500 1975.583\n1976 1976.000 1976.083 1976.167 1976.250 1976.333 1976.417 1976.500 1976.583\n1977 1977.000 1977.083 1977.167 1977.250 1977.333 1977.417 1977.500 1977.583\n1978 1978.000 1978.083 1978.167 1978.250 1978.333 1978.417 1978.500 1978.583\n          Sep      Oct      Nov      Dec\n1975 1975.667 1975.750 1975.833 1975.917\n1976 1976.667 1976.750 1976.833 1976.917\n1977 1977.667 1977.750 1977.833 1977.917\n1978 1978.667 1978.750 1978.833 1978.917\n\nhead(time(electricidad), n = 28)  #Mostramos sólo las 4 primeras semanas\n\nTime Series:\nStart = c(1, 7) \nEnd = c(5, 6) \nFrequency = 7 \n [1] 1.857143 2.000000 2.142857 2.285714 2.428571 2.571429 2.714286 2.857143\n [9] 3.000000 3.142857 3.285714 3.428571 3.571429 3.714286 3.857143 4.000000\n[17] 4.142857 4.285714 4.428571 4.571429 4.714286 4.857143 5.000000 5.142857\n[25] 5.285714 5.428571 5.571429 5.714286\n\n\n\n\n\n\n\n\nFechado de la serie\n\n\n\n¿Tienes claro cómo R guarda internamente el fechado de una serie? ¿Qué indican los valores decimales?\n\n\n\ncycle, crea un vector con la posición en el ciclo de cada observación. Para una serie mensual sus valores van de 1 a 12, para una serie diaria sus valores irían 1 a 7. También usaremos esta función de forma regular.\n\n\nhead(cycle(nacimientos), n = 48) #Mostramos sólo los 4 primeros años\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n1975   1   2   3   4   5   6   7   8   9  10  11  12\n1976   1   2   3   4   5   6   7   8   9  10  11  12\n1977   1   2   3   4   5   6   7   8   9  10  11  12\n1978   1   2   3   4   5   6   7   8   9  10  11  12\n\nhead(cycle(electricidad), n = 28) #Mostramos sólo las 4 primeras semanas\n\nTime Series:\nStart = c(1, 7) \nEnd = c(5, 6) \nFrequency = 7 \n [1] 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6"
  },
  {
    "objectID": "03-01-Tema1.html#tendencia-t_t",
    "href": "03-01-Tema1.html#tendencia-t_t",
    "title": "Series Temporales. Definición y componentes",
    "section": "3.1 Tendencia, \\(T_t\\)",
    "text": "3.1 Tendencia, \\(T_t\\)\nDefinición: la tendencia de una serie es su comportamiento a largo plazo (varios años). Describe los cambios sistemáticos de la serie temporal que no aparentan ser periódicos.\nRespecto a la dirección del movimiento la tendencia puede ser:\n\nCreciente: a largo plazo la serie aumenta su valor\nDecreciente: a largo plazo la serie disminuye su valor\nEstacionaria: a largo plazo la serie mantiene su valor\n\nRespecto del proceso generador de la tendencia, puede ser:\n\nDeterminista: \\(T_t = f(t)\\)\nEstocástica: \\(T_t = f(T_{t-1}, T_{t-2},\\ldots)\\)\nMixta: \\(T_t = f(t,T_{t-1}, T_{t-2},\\ldots)\\)\n\nEn la Figura 5 se muestran ejemplos de series temporales según dirección del movimiento y pendiente de la tendencia.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Estacionaria\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Creciente (lineal)\n\n\n\n\n\n\n\n\n\n\n\n(c) Creciente (exponencial)\n\n\n\n\n\n\n\n\n\n\n\n(d) Creciente (logarítmica)\n\n\n\n\n\n\n\n\n\n\n\n\n\n(e) Decreciente (lineal)\n\n\n\n\n\n\n\n\n\n\n\n(f) Decreciente (exponencial)\n\n\n\n\n\n\n\n\n\n\n\n(g) Decreciente (logarítmica)\n\n\n\n\n\n\n\nFigura 5: Ejemplos de tendencia\n\n\n\n\n\n\nSi la serie temporal es suficientemente larga es posible observar cambios en la dirección del movimiento de la tendencia que definen los ciclos."
  },
  {
    "objectID": "03-01-Tema1.html#ciclo-c_t",
    "href": "03-01-Tema1.html#ciclo-c_t",
    "title": "Series Temporales. Definición y componentes",
    "section": "3.2 Ciclo, \\(C_t\\)",
    "text": "3.2 Ciclo, \\(C_t\\)\nDefinición: Son patrones sin periodicidad fija que abarcan varios años.\nPor ejemplo, los ciclos económicos, los cambios climáticos asociados al fenómeno El Niño, o las manchas solares (véase Figura 6).\n\n\n\n\n\n\nFigura 6: Ciclos solares. Imagen tomada de Courtillot, Lopes, and Mouël (2021)\n\n\n\n\n\nLa serie de Nacimientos es lo suficientemente larga como para observarse un ciclo completo, que queda identificado por dos cambios de tendencia consecutivos de signo opuesto (véase Figura 7):\n\nA finales de la década de los 90 la tendencia decreciente en los nacimientos pasa a creciente por la llegada de inmigrantes con una mayor tasa de natalidad.\nA finales de la primera década del 2000 la tendencia creciente pasa a decreciente porque la Gran Recesión provoca el regreso a sus países de origen de muchos de estos inmigrantes.\n\nDe esta forma, observamos un ciclo completo desde 1975 hasta poco antes de 2010 (periodo entre dos cambios de tendencia), y el inicio del siguiente ciclo, en el que aun estamos.\n\n\n\n\n\n\n\n\nFigura 7: Ciclos en la serie Nacimientos"
  },
  {
    "objectID": "03-01-Tema1.html#estacionalidad-s_t",
    "href": "03-01-Tema1.html#estacionalidad-s_t",
    "title": "Series Temporales. Definición y componentes",
    "section": "3.3 Estacionalidad, \\(S_t\\)",
    "text": "3.3 Estacionalidad, \\(S_t\\)\nDefinición: Son patrones repetitivos de periodicidad fija e inferior al año.\nEl orden de la periodicidad lo denominaremos \\(m\\), por tanto el patrón estacional se repite cada \\(m\\) periodos. Lógicamente, \\(m\\) toma el valor 12 para datos mensuales, el valor 4 para datos trimestrales, 7 para datos diarios de lunes a domingo, etc.\nLa componente estacional surge por factores climatológicos, institucionales o sociales.\nEn ocasiones no es fácil determinar la existencia de estacionalidad o su orden. En este caso, se puede usar el análisis espectral, que no veremos en este curso, para analizar esta componente. La librería forecast dispone de la función findfrequency que devuelve la frecuencia dominante de una serie usando el análisis espectral.\nLa serie Nacimientos tiene una estacionalidad de orden 12, causada principalmente por el número de días del mes (véase la Figura 8). Cada año se repite una misma pauta: los meses de febrero, por tener 28 (o 29 días en años bisiestos), presentan el menor número de nacimientos y son los valles en la Figura 8; y, en general, en los meses de 31 días hay más nacimientos que en los demás meses del año.\n\n\n\n\n\n\n\n\nFigura 8: Nacimientos\n\n\n\n\n\n\n\nLa Figura 9 muestra la demanda eléctrica diariamente para cuatro semanas, desde el lunes 30 de enero hasta el domingo 26 de febrero (semanas 6 a 9 del año). Tiene, por tanto, una estacionalidad de orden 7. En el eje OX aparecen etiquetados los lunes de cada semana que permiten identificar el siguiente patrón semanal: de lunes a viernes un consumo similar, seguido de una caída en el consumo el sábado, y el domingo como el día de menor consumo\n\n\n\n\n\n\n\n\nFigura 9: Demanda diaria de electricidad\n\n\n\n\n\nSi el fechado de la serie es de muy alta frecuencia, puede ocurrir que se superponga más de una componente estacional. La Figura 10 muestra la serie corresponde a la demanda eléctrica (GW) recogida cada hora durante el mes de febrero de 2021. El eje OX señala el consumo de la primera hora de cada día del mes (desde media noche hasta la una de la madrugada). Se aprecia una estacionalidad diaria de orden \\(24\\), otra semanal de orden \\(168 =7 \\times 24\\) y si mostráramos varios años de consumo, también se observaría otra mensual.\n\n\n\n\n\n\n\n\nFigura 10: Estacionalidad múltiple para el consumo de electricidad por hora\n\n\n\n\n\n\n\n\n\n\n\nSeries con más de una componente estacional\n\n\n\nEn este curso no analizaremos series con más de una componente estacional. Si quieres tener una primera aproximación de como se hace, puedes ir a la píldora Múltiples componentes estacionales."
  },
  {
    "objectID": "03-01-Tema1.html#intervención-i_t",
    "href": "03-01-Tema1.html#intervención-i_t",
    "title": "Series Temporales. Definición y componentes",
    "section": "3.4 Intervención, \\(I_t\\)",
    "text": "3.4 Intervención, \\(I_t\\)\nDefinición: Es un factor sistemático no periódico, o irregular, que vendría determinado por fenómenos ocasionales que provocan observaciones anómalas y valores atípicos en la serie temporal.\nPor su relación con fechas concretas, podemos distinguir dos tipos:\n\nEfectos calendario: irregularidades específicas en la serie temporal que se producen durante determinados periodos de tiempo. Por ejemplos los días festivos en series diarias; o la Semana Santa, días laborales y febrero bisiesto en series mensuales.\nOtros efectos no sujetos a calendario: irregularidades no específicas ni sujetas a fechas concretas. Por ejemplo, pandemias, catástrofes naturales, huelgas, caída del sistema eléctrico o de los servidores de una red social, etc.\n\nEn la serie mensual Nacimientos, los meses de febrero bisiestos (puntos rojos) presentan un número de nacimientos mayor que los meses de febrero no bisiestos (efecto calendario). Para algunos años este hecho es mas claro (véase Figura 11). Además, a finales del año 2020 y principios del 2021 se observa una caída inusual en el número de nacimientos (puntos verdes) debido a que la pandemia causada por la Covid-19 retrasó la decisión de tener hijos de muchas parejas. Este es un ejemplo de intervención no sujeta a calendario.\n\n\n\n\n\n\n\n\nFigura 11: Efecto de los febreros bisiestos y de la Covid-19 en Nacimientos\n\n\n\n\n\nEn la serie diaria Electricidad cuando un día entre semana es festivo, el consumo se reduce notablemente, apareciendo un efecto calendario. Si se trata de un día aislado, el efecto es muy fácil de identificar y analizar. Un ejemplo, observable en la Figura 12, es el miércoles 1 de noviembre de 2023, día de Todos los Santos, identificado con un punto rojo en la figura. Se aprecia que el consumo fue muy inferior al observado el miércoles precedente y posterior (puntos verdes). Si los festivos abarcan varios días, el efecto sigue siendo perfectamente identificable, pero es más complejo de analizar. Un ejemplo es la última semana de diciembre donde el consumo es muy inferior al observado en las semanas previas debido, por un lado, al efecto del día festivo de Navidad (punto azul) y, por otro lado, al periodo semi-vacacional que estas festividades supone en España. También se aprecia la intervención asociada a la semana que contiene los festivos de la Constitución y la Inmaculada (martes 6 y jueves 8 de diciembre).\n\n\n\n\n\n\n\n\nFigura 12: Efectos calendario en Electricidad\n\n\n\n\n\nPor su naturaleza, podemos distinguir tres tipos básicos de intervención (aunque hay más):\n\nPulso (Additive Outlier, AO)\n\nEn un periodo aislado la serie toma un valor anómalo (véase Figura 13, panel izquierdo). Por ejemplo, un día entre semana es festivo y la demanda eléctrica es inferior a la usual; o el mes de agosto de 2024 la olimpiadas de París incrementan significativamente el turismo y la ocupación hotelera en la ciudad respecto de agostos precedentes.\n\nCambio transitorio (Transitory Change, TC)\n\nEn un periodo un shock genera un valor anómalo en la serie y el efecto del shock va desapareciendo poco a poco (véase Figura 13, panel central). Por ejemplo, las redes sociales ponen de moda un producto que temporalmente aumenta sus ventas. Pero, conforme pasa el tiempo, los consumidores se olvidan del producto y sus ventas vuelven poco a poco a su nivel previo.\n\nCambio permanente (Level Shift, LS)\n\nEn un periodo la serie cambia de nivel y permanece de forma permanente en este nuevo nivel (véase Figura 13, panel derecho). Por ejemplo, enfrente de un supermercado abre la competencia, de forma que sus ventas descienden bruscamente de forma permanente. La apertura en una ciudad de una nueva línea de tranvía incrementa de forma permanente los usuarios del transporte público en esa ciudad.\n\n\n\n\n\n\n\n\n\n\nFigura 13: Tipos de intervención"
  },
  {
    "objectID": "03-01-Tema1.html#residuo-r_t",
    "href": "03-01-Tema1.html#residuo-r_t",
    "title": "Series Temporales. Definición y componentes",
    "section": "3.5 Residuo, \\(R_t\\)",
    "text": "3.5 Residuo, \\(R_t\\)\nDefinición: No presenta un comportamiento sistemático a corto, medio o largo plazo por lo que no se puede predecir de modo alguno. Es la parte de la serie que se debe a puro azar.\nAunque inicialmente no se hará ningún supuesto sobre el residuo, se espera que sea ruido blanco: media cero, incorrelado y homocedástico. Es decir \\(R_t \\sim iid(0, \\sigma^2\\))."
  },
  {
    "objectID": "03-01-Tema1.html#esquema-aditivo-y-multiplicativo",
    "href": "03-01-Tema1.html#esquema-aditivo-y-multiplicativo",
    "title": "Series Temporales. Definición y componentes",
    "section": "3.6 Esquema aditivo y multiplicativo",
    "text": "3.6 Esquema aditivo y multiplicativo\nUna serie temporal siempre tiene tendencia y residuo. La presencia de estacionalidad, ciclo e intervención depende de la naturaleza de la serie. Por ejemplo, una serie anual no tendrá nunca estacionalidad y en una serie corta no se podrá observar el ciclo.\nLas componentes de una serie temporal se pueden combinar de múltiples formas.\nEn el esquema aditivo cada componente suma su efecto sobre las demás, \\[y_t = T_t + S_t + C_t + I_t + R_t.\\] La demanda diaria de electricidad es un ejemplo de este tipo de esquema (Figura 14). El panel superior muestra la serie en el tiempo e identificamos el esquema aditivo porque la amplitud estacional (para cada semana la diferencia entre el día de más consumo y el de menos consumo) se mantiene constante en el tiempo. En el panel inferior tenemos una gráfica media-varianza, donde cada punto corresponde a una semana, la coordenada X es el consumo de esa semana y la coordenada Y la desviación típica del consumo para los días de esa semana (variabilidad intrasemanal). Este segundo panel revela el esquema aditivo de la serie porque no se observa un patrón creciente en los puntos: más consumo no implica una mayor desviación típica.\n\n\n\n\n\n\n\n\n\n\n\n(a) Consumo electrico diario\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Gráfica media-varianza\n\n\n\n\n\n\n\nFigura 14: Ejemplo de esquema aditivo\n\n\n\nEn el esquema multiplicativo cada componente supone un incremento porcentual respecto de las demás, \\[y_t = T_t \\cdot S_t \\cdot C_t \\cdot I_t \\cdot R_t.\\] La serie Nacimientos es un ejemplo de esquema multiplicativo. En el panel superior de la Figura 15, que muestra la serie, se observa que según decrece el número de nacimientos, también decrece la amplitud estacional. Además, en el panel inferior cada punto corresponde a un año: en el eje X los nacimientos de ese año y en el eje Y la desviación típica de los nacimientos mensuales de ese año (variación intraanual). En este panel se observa un patrón creciente en los puntos, revelando el esquema multiplicativo de la serie.\n\n\n\n\n\n\n\n\n\n\n\n(a) Nacimientos mensuales\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Gráfica media-desviación anual\n\n\n\n\n\n\n\nFigura 15: Ejemplo de esquema multiplicativo\n\n\n\nSi una serie presenta un esquema multiplicativo, su logaritmo lo presentará aditivo. A lo largo del curso se verán otras razones por las que puede ser aconsejable analizar el logaritmo de una serie temporal.\nEn principio, cualquier combinación entre las componentes es posible:\n\n\\(y_t = (T_t + C_t) \\cdot S_t + I_t + R_t\\)\n\\(y_t = (T_t + S_t + C_t + I_t)R_t\\)\n\\(y_t = T_t \\cdot S_t \\cdot C_t \\cdot I_t + R_t\\)\n…"
  },
  {
    "objectID": "03-01-Tema1.html#idea-general",
    "href": "03-01-Tema1.html#idea-general",
    "title": "Series Temporales. Definición y componentes",
    "section": "4.1 Idea general",
    "text": "4.1 Idea general\nPodemos manipular una serie temporal con diferentes fines:\n\nextraer la tendencia (eliminando la estacionalidad), por ejemplo, pasando de una serie mensual a una anual, o de una serie diaria a una semanal.\nextraer la estacionalidad (eliminando la tendencia) de forma sencilla, aunque no muy precisa.\nrecortar una serie para obtener una submuestra.\nextraer una subserie correspondiente a un único periodo estacional. Por ejemplo, los nacimientos en febrero o el consumo de electricidad de los domingos.\n\nEstas operaciones nos permitirán mejorar nuestra capacidad descriptiva de la serie, identificar mejor el tipo de esquema entre las componentes, facilitar la estimación del proceso generador o ampliar las herramientas de análisis y predicción de una serie temporal."
  },
  {
    "objectID": "03-01-Tema1.html#extracción-de-la-tendencia",
    "href": "03-01-Tema1.html#extracción-de-la-tendencia",
    "title": "Series Temporales. Definición y componentes",
    "section": "4.2 Extracción de la tendencia",
    "text": "4.2 Extracción de la tendencia\nSi tenemos una serie con estacionalidad y agregamos la serie –obteniendo un dato por año, si la serie es mensual, o un dato por semana, si es diaria– obtenemos una nueva serie sin estacionalidad, solo con tendencia.\nDependiendo de la naturaleza de la serie, convendrá agregar sumando los datos (consumo eléctrico, residuos generados, viajeros transportados, nacimientos) o sacando la media (temperatura, número de parados, ocupación hotelera).\nVeamos como extraer la tendencia de la serie Nacimientos usando la función aggregate con el argumento FUN = sum.\n\nnacimientosAnual &lt;- aggregate(nacimientos, FUN = sum)\nautoplot(nacimientosAnual/1000,\n         xlab = \"\",\n         ylab = \"Nacimientos (miles)\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 16: Nacimientos por año\n\n\n\n\n\nAhora para la demanda de electricidad.\n\nelectricidadSemanal &lt;- aggregate(electricidad, FUN = sum)\nautoplot(electricidadSemanal,\n       xlab = \"\",\n       ylab = \"GWh\",\n       main = \"\")\n\n\n\n\n\n\n\nFigura 17: Consumo de electricidad por semana\n\n\n\n\n\nLa función aggregate aplicada a una serie temporal agrega los datos de cada periodo estacional completo aplicando la función especificada en FUN.\n\nUna serie trimestral o mensual la transforma en anual, una serie diaria en semanal.\nLa función a usar dependerá de la naturaleza de los datos y del objetivo perseguido (FUN=sum, FUN=mean, FUN=sd…)\nEsta función tiene un uso más amplio en R. Usa la función help para aprenderlo.\n\n\n\n\n\n\n\nAtención\n\n\n\nLa agregación no tiene por que empezar en el primera componente estacional. Por ejemplo, la serie Demanda eléctrica se inicia el domingo 1 de enero, así que el primer dato de la serie agregada irá del domingo 1 de enero al sábado 7 de enero, un periodo estacional completo; el segundo dato de la serie agregada ira del domingo 8 al sábado 14 de enero; y así sucesivamente. El último dato de la serie agregada será del domingo 24 al sábado 30 de diciembre. El 31 de diciembre no formará parte de la serie agregada."
  },
  {
    "objectID": "03-01-Tema1.html#extracción-de-la-estacionalidad",
    "href": "03-01-Tema1.html#extracción-de-la-estacionalidad",
    "title": "Series Temporales. Definición y componentes",
    "section": "4.3 Extracción de la estacionalidad",
    "text": "4.3 Extracción de la estacionalidad\nTenemos varias alternativas gráficas para visualizar la estacionalidad y numéricas para calcular la estacionalidad de una serie.\nVisualización de la estacionalidad\nPodemos hacer una gráfico de la serie contra cada periodo estacional. Este gráfico permite identificar el patrón estacional de la serie y su evolución en el tiempo. Existen varias opciones para este tipo de gráficos, veremos dos de ellas: gráfico de subseries y gráfico de líneas.\nVeamos primero un ejemplo de gráfico de subseries que muestra para cada periodo estacional la subserie de valores de ese periodo y el valor medio de la subserie (líneas horizontales).\nPara la serie Nacimientos, recortada desde el año 2000 para facilitar la interpretación, la Figura 18 muestra como el mes de febrero es el que presenta menor número de nacimientos. Por contra, los meses de 31 días presentan en media un número de nacimientos mayor que los meses de 30 días. La excepción es septiembre, un mes de 30 días pero donde el número de nacimientos supera el del mes de agosto de 31 días. Una explicación posible es que muchos nacimientos por cesárea que corresponderían a finales de agosto se programen en septiembre para esquivar este mes festivo.\n\nnacimientosb &lt;- window(nacimientos, start = 2000)\nggsubseriesplot(nacimientosb) +\n  ylab(\"Nacimientos\") +\n  xlab(\"\") +\n  ggtitle(\"\")\n\n\n\n\n\n\n\nFigura 18: Gráfico estacional de subseries para Nacimientos\n\n\n\n\n\nPara las series con tendencia o esquema multiplicativo, el valor medio de las subseries puede llevarnos a una interpretación incorrecta de la estacionalidad. La función monthplot de stats realiza un gráfico similar.\nUna alternativa es el gráfico de líneas, donde cada linea muestra la evolución de un periodo estacional. Para Nacimientos la Figura 19 muestra los nacimientos desde 2018 a 2023, donde cada año es una línea. Se observa perfectamente el efecto de la pandemia sobre el número de nacimientos desde noviembre de 2020. Si se incluye el argumento polar=TRUE, se obtiene una versión tipo tela de araña de este gráfico.\n\nggseasonplot(window(nacimientos, start = 2018),\n             year.labels = TRUE, \n             xlab = \"\",\n             ylab = \"Nacimientos\",\n             main = \"\")\n\n\n\n\n\n\n\nFigura 19: Gráfico estacional de lineas para Nacimientos\n\n\n\n\n\nCálculo de la componente estacionalidad\nLas gráficas ayudan a describir y entender un poco mejor el patrón estacional. Sin embargo, si deseamos estimar la componente estacional, debemos proceder de otra forma.\nLa siguiente sintaxis usa la función tapply para estimar numéricamente la componente estacional bajo un esquema multiplicativo. Básicamente, calcula para cada mes (argumento cycle(nacimientosb)) la media (FUN = mean) del cociente nacimientosb / mean(nacimientosb).\n\ncomponenteEstacional &lt;- tapply(nacimientosb/mean(nacimientosb), \n                               cycle(nacimientosb), \n                               FUN = mean)\nround(componenteEstacional, 2)\n\n   1    2    3    4    5    6    7    8    9   10   11   12 \n1.00 0.91 1.00 0.96 1.01 0.97 1.03 1.03 1.04 1.05 1.00 1.00 \n\n\nLos valores de la tabla previa indican que en febrero nacen un 9% menos de bebés respecto de la media anual y que, en general, los meses de 30 días están en la media o debajo de la media general. Por contra, los meses de 31 días están en o encima de la media general, destacando julio un 3% por encima y octubre un 5%. La anomalia es septiembre que, siendo un mes de 30 días, tiene un 4% más de nacimientos de la media anual.\nLos cambios necesarios para estimar la componente estacional bajo un esquema aditivo son mínimos. Veámoslo para la serie Demanda eléctrica.\n\ncomponenteEstacional &lt;- tapply(electricidad - mean(electricidad), \n                               cycle(electricidad), \n                               FUN = mean)\nround(componenteEstacional, 2)\n\n     1      2      3      4      5      6      7 \n 10.29  32.74  36.77  35.67  23.17 -47.56 -89.37 \n\n\nDe lunes a viernes la demanda eléctrica está por encima de la media semanal, especialmente de martes a jueves con un consumo más de 30 GWh por encima de la media. El sábado la demanda cae 48 GWh y el domingo se da la menor demanda, 89 GWh por debajo de la media semanal."
  },
  {
    "objectID": "03-01-Tema1.html#recorte-de-una-serie-y-extracción-de-una-subserie",
    "href": "03-01-Tema1.html#recorte-de-una-serie-y-extracción-de-una-subserie",
    "title": "Series Temporales. Definición y componentes",
    "section": "4.4 Recorte de una serie y extracción de una subserie",
    "text": "4.4 Recorte de una serie y extracción de una subserie\nR proporciona varias funciones que permiten extraer una submuestra de la serie original. Podemos:\n\nseleccionar una submuestra especificando los puntos temporales de inicio y fin.\nseleccionar una submuestra seleccionando un periodo estacional determinado.\nquitar fácilmente un conjunto de datos usando índices.\n\nVeamos algunos ejemplos de extracción con la serie Nacimientos y las funciones window y subset:\nFunción window, que recorta especificando fechados exactos.\n\nwindow(nacimientos, start = c(2000, 1), end = c(2009, 12)) selecciona de la serie original los datos desde enero de 2000 a diciembre de 2009.\nwindow(nacimientos, start = c(2010, 3)) selecciona de la serie original los datos desde marzo de 2010 hasta el último dato (diciembre de 2023).\nwindow(nacimientos, end = c(1999, 12)) selecciona de la serie original los datos desde el primero (enero de 1975) hasta diciembre de 1999.\nwindow(nacimientos, start = c(2000, 3), freq = TRUE) selecciona de la serie original solo los meses de marzo desde 2000.\n\nFunción subset, que recorta especificando posiciones de las observaciones.\n\nsubset(nacimientos, start = 10, end = 34) selecciona de la serie las observaciones que van desde la 10 a la 34, ambas inclusive.\nsubset(nacimientos, start = 121) selecciona de la serie las observaciones que van desde la 121 hasta la última.\nsubset(nacimientos, start = length(nacimientos) - 47) selecciona de la serie los últimos 4 años (2020 a 2023).\nsubset(nacimientos, end = length(nacimientos) - 48) selecciona de la serie todo menos los últimos 4 años. Es decir, el último dato es diciembre de 2019.\nsubset(nacimientos, season  = 5) selecciona de la serie todos los meses de mayo.\n\n\n\n\n\n\n\nwindow y subset\n\n\n\nDurante el curso haremos un uso contante de la funciones window y subset. Practícalas para familiarizarte con su uso.\n\n\nAdemás, puedes usar las funciones head y tail para extraer las primeras o las últimas observaciones."
  },
  {
    "objectID": "03-01-Tema1.html#concepto",
    "href": "03-01-Tema1.html#concepto",
    "title": "Series Temporales. Definición y componentes",
    "section": "5.1 Concepto",
    "text": "5.1 Concepto\nLos métodos que hemos visto para la descripción de la tendencia y la componente estacional son muy sencillos, pero no son ni rigurosos ni precisos. Veamos métodos más adecuados para extraer de una serie sus componentes.\nSi la serie es demasiado corta para poder extraer el ciclo, entonces el ciclo queda recogido dentro de la tendencia. Por otro lado, las técnicas de identificación de la intervención son complejas por lo que esta componente queda incorporada al residuo. Por tanto, asumiremos que una serie tiene sólo Tendencia, Estacionalidad y Residuo:\n\nEsquema aditivo \\(y_t = T_t + C_t + S_t + I_t + R_t = (T_t + C_t) + S_t +(I_t + R_t) = T'_t + S_t + R'_t\\)\nEsquema multiplicativo \\(y_t = T_t \\cdot C_t \\cdot S_t \\cdot I_t \\cdot R_t = (T_t \\cdot C_t) \\cdot S_t \\cdot (I_t \\cdot R_t) = T'_t \\cdot S_t \\cdot R'_t\\)\n\nVeremos a continuación como extraer estas tres componentes a partir de una serie original. Este proceso se denomina descomposición.\nHay múltiples formas de realizar una descomposición. Aquí veremos dos de ellas, la más sencilla, basada en el concepto de medias móviles (decompose), y otra más versátil y compleja a partir de regresiones locales ponderadas (stl).\nAdemás, R proporciona (a través de paquetes específicos) el método de descomposición que utiliza el US Census Bureau and Statistics Canada, denominado X11, y el método que utiliza el Banco de España, denominado SEATS (Seasonal Extraction in ARIMA Time Series), aunque estos métodos solo son válidos para series mensuales y trimestrales.\nEn origen, los métodos de descomposición no sirven para realizar predicciones, pero actualmente se usan también con este fin (véase las funciones stlm y stlf del paquete forecast)."
  },
  {
    "objectID": "03-01-Tema1.html#descomposición-por-medias-móviles",
    "href": "03-01-Tema1.html#descomposición-por-medias-móviles",
    "title": "Series Temporales. Definición y componentes",
    "section": "5.2 Descomposición por medias móviles",
    "text": "5.2 Descomposición por medias móviles\n\nIdeas generales\nLa función decompose estima las componentes de tendencia, estacionalidad y residuo usando el método de medias móviles. En concreto decompose sigue los siguientes pasos para obtener cada componente:\nPaso 1: Se estima la tendencia de una serie a partir de una media móvil centrada. Si el orden estacional es par, la media móvil es ponderada de orden \\(m + 1\\); y si el orden estacional es impar, la media móvil es de orden \\(m\\). En concreto,\n\nSi \\(m=2k\\): \\(\\hat{T}_t = \\frac{\\frac{1}{2}y_{t-k} + y_{t-k+1} + \\ldots + y_t + \\ldots + y_{t+k-1} + \\frac{1}{2} y_{t+k}}{m}\\),\nSi \\(m=2k+1\\): \\(\\hat{T}_t = \\frac{y_{t-k} + y_{t-k+1} + \\ldots + y_t + \\ldots + y_{t+k-1} + y_{t+k}}{m}\\).\n\nPaso 2: Para un modelo con esquema aditivo calculamos la serie sin tendencia como \\(y_t - \\hat{T}_t\\) y para un esquema multiplicativo como \\(y_t/ \\hat{T}_t\\).\nPaso 3: Para estimar la componente estacional para cada periodo estacional, calculamos el valor medio de la serie sin tendencia (paso 2) de forma independiente para los datos de cada estación. Así, obtenemos un vector con la estimación de las \\(m\\) componentes estacionales.\nDespués estos valores se ajustan para que sumen 0 (esquema aditivo) o para que sumen \\(m\\) (esquema multiplicativo). La componente estacional se obtiene repitiendo el vector de \\(m\\) componentes ajustadas hasta alcanzar la longitud de la serie original. Esto da \\(\\hat{S}_t\\)\nPaso 4: El residuo se obtiene como \\(\\hat{R}_t = y_t - \\hat{T}_t - \\hat{S}_t\\) (esquema aditivo) o \\(\\hat{R}_t = y_t / (\\hat{T}_t \\cdot \\hat{S}_t)\\) (esquema multiplicativo)\nLa Tabla 1 muestra un ejemplo de descomposición aditiva por medias móviles para una serie simulada de orden estacional 5.\n\nLa dos primeras columnas indican la estación de cada dato y el valor de la serie, para un total de 25 datos. La columna Ten ha sido obtenida siguiendo el paso 1 como una media móvil de orden 5: \\[Ten_t = (Serie_{t-2} + Serie_{t-1} + Serie_{t} + Serie_{t+1} + Serie_{t+2})/5.\\]\nLa serie sin tendencia, columna Est + Res, se obtiene restando a la columna Serie la columna Ten, tal y como se indica en el paso 2.\nPara el cálculo de la columna Est, que repite de forma periódica la primera estimación de las 5 componentes estacionales, se sigue el paso 3. Para cada estación se promedian los valores de la columna Est + Res correspondientes a dicha estación.\nPuedes comprobar que la suma de los cinco valores de la componente estacional obtenidos en la columna Est vale 1.1. Para ajustar la componente estacional para que sume 0, a cada valor de la componente estacional se le resta su suma actual 1.1 dividida por 5, el número de estaciones. El resultado de este ajuste aparece en la columna Est corregida que será la componente estacional final.\nSiguiendo el paso 4, la columna Res se calcula restando a la serie original (columna Serie) la tendencia y la estacionalidad (columnas Ten y Est corregida).\n\nObserva que en el proceso de descomposición se han perdido 4 datos para la tendencia y el residuo, dos al inicio de la serie y dos al final.\n\n\n\n\nTabla 1: Ejemplo de descomposición por medias móviles\n\n\n\n\n\n\nEstacion\nSerie\nTen\nEst + Res\nEst\nEst corregida\nRes\n\n\n\n\n1\n17.00\nNA\nNA\n9.14\n8.92\nNA\n\n\n2\n6.72\nNA\nNA\n-10.89\n-11.11\nNA\n\n\n3\n5.08\n20.62\n-15.54\n-10.06\n-10.28\n-5.48\n\n\n4\n8.79\n27.89\n-19.10\n-9.46\n-9.68\n-9.64\n\n\n5\n65.53\n28.00\n37.53\n22.37\n22.15\n15.16\n\n\n1\n53.31\n28.58\n24.73\n9.14\n8.92\n15.59\n\n\n2\n7.28\n29.79\n-22.51\n-10.89\n-11.11\n-11.62\n\n\n3\n8.00\n25.62\n-17.62\n-10.06\n-10.28\n-7.56\n\n\n4\n14.84\n19.13\n-4.29\n-9.46\n-9.68\n5.17\n\n\n5\n44.67\n20.08\n24.59\n22.37\n22.15\n2.22\n\n\n1\n20.85\n21.78\n-0.93\n9.14\n8.92\n-10.07\n\n\n2\n12.02\n21.64\n-9.62\n-10.89\n-11.11\n1.27\n\n\n3\n16.51\n18.97\n-2.46\n-10.06\n-10.28\n7.60\n\n\n4\n14.14\n22.07\n-7.93\n-9.46\n-9.68\n1.53\n\n\n5\n31.31\n23.08\n8.23\n22.37\n22.15\n-14.14\n\n\n1\n36.37\n24.68\n11.69\n9.14\n8.92\n2.55\n\n\n2\n17.06\n26.66\n-9.60\n-10.89\n-11.11\n1.29\n\n\n3\n24.53\n30.92\n-6.39\n-10.06\n-10.28\n3.67\n\n\n4\n24.02\n30.56\n-6.54\n-9.46\n-9.68\n2.92\n\n\n5\n52.62\n33.48\n19.14\n22.37\n22.15\n-3.23\n\n\n1\n34.59\n33.51\n1.08\n9.14\n8.92\n-8.06\n\n\n2\n31.66\n33.51\n-1.85\n-10.89\n-11.11\n9.04\n\n\n3\n24.65\n32.95\n-8.30\n-10.06\n-10.28\n1.76\n\n\n4\n24.01\nNA\nNA\n-9.46\n-9.68\nNA\n\n\n5\n49.86\nNA\nNA\n22.37\n22.15\nNA\n\n\n\n\n\n\n\n\n\n\nLos principales inconvenientes de este método de descomposición son: i) se perderán datos al inicio y final de la serie –por ejemplo, si la serie es mensual se perderán seis datos al inicio y seis al final; ii) asume que la componente estacional no ha variado en el tiempo, cuando sabemos que para muchas series sociales y de consumo la componente estacional se ha suavizando con el tiempo; y iii) el cálculo de las componentes de tendencia y estacionalidad puede verse muy afectado por la presencia de datos muy anómalos.\nPor el contrario, una de las ventajas de este método, además de su sencillez de cálculo, es que se puede usar tanto para esquemas aditivos (type=\"addi\") como multiplicativos (type=\"multi\").\nLa función decompose genera un objeto con las siguientes componentes:\n\n$x para la serie original,\n$trend para la tendencia,\n$seasonal para la estacionalidad,\n$random para el residuo, y\n$figure que contiene las estimaciones de los m efectos estacionales ajustados. Es una extracción para un único año o semana de $seasonal.\n\nSiempre que generes nuevos objetos en R a partir de funciones te recomiendo que con names y str mires qué hay en su interior.\nEn los métodos de descomposición que vamos a ver, para extraer las componentes individualmente puedes usar la función seasonal para la componente estacional, trendcycle para el componente de tendencia, y remainder para el residuo.\n\n\nEjemplo de esquema aditivo\nVamos a descomponer la serie Demanda eléctrica asumiendo un esquema aditivo (type = \"addi).\n\neleDesAdi &lt;- decompose(electricidad, \n                       type = \"addi\")\n\nautoplot(eleDesAdi,\n         xlab = \"\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 20: Descomposición aditiva de la Demanda eléctrica por medias móviles\n\n\n\n\n\nLa Figura 20 muestra la serie original (panel superior) y sus tres componentes: tendencia (segundo panel), estacionalidad (tercer panel) y el residuo (panel inferior). Por tratarse de un esquema aditivo, la estacionalidad y el residuo se mueven en torno al valor de 0.\nEs fácil verificar que si se suma para cada fecha la tendencia, la estacionalidad y el residuo se obtiene exactamente el valor de la serie:\n\ntmp &lt;- trendcycle(eleDesAdi) + seasonal(eleDesAdi) + remainder(eleDesAdi)\nsummary(electricidad - tmp)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n      0       0       0       0       0       0       6 \n\n\nA continuación, tienes un ejemplo del manejo de las componentes extraídas para hacer una gráfica (véase la Figura 21).\n\nautoplot(electricidad, \n         series=\"Demanda eléctrica\",\n         xlab = \"\",\n         ylab = \"MWh\",\n         main = \"\") +\n  autolayer(trendcycle(eleDesAdi), \n            series=\"Tendencia\") +\n  scale_colour_manual(values=c(\"Demanda eléctrica\"=\"black\",\"Tendencia\"=\"red\"),\n                      breaks=c(\"Demanda eléctrica\",\"Tendencia\"))\n\n\n\n\n\n\n\nFigura 21: Demanda eléctrica: serie y tendencia\n\n\n\n\n\nTambién podemos ver la componente estacional y verificar que suma 0. Ojo, como la serie empieza un domingo, el valor de la primera componente que se muestra es la del domingo y el valor de la última es la del sábado\n\neleDesAdi$figure\n\n[1] -88.89633  10.71022  32.18633  36.60378  35.23633  22.42286 -48.26319\n\nsum(eleDesAdi$figure)\n\n[1] -8.881784e-15\n\n\nPor último, podemos realizar una gráfica de la componente estacional (véase la Figura 22). Como la primera componente estacional es la del domingo, tenemos primero que ordenar las componentes. Esto es lo que hace la primera línea del siguiente código.\n\ncompEstacional &lt;- eleDesAdi$figure[c(2:7, 1)]\nggplot() +\n  geom_line(aes(x = 1:7, y = compEstacional)) + \n  geom_hline(yintercept = 0, colour = \"blue\", lty = 2) +\n  ggtitle(\"\") +\n  xlab(\"\") +\n  ylab(\"GWh\") +\n  scale_x_continuous(breaks= 1:7, \n                     labels = c(\"Lunes\", \"Martes\", \"Miércoles\", \"Jueves\", \n                                \"Viernes\", \"Sábado\", \"Domingo\")) \n\n\n\n\n\n\n\nFigura 22: Componente estacional de Electricidad (esquema aditivo)\n\n\n\n\n\n\n\nEjemplo de Esquema Multiplicativo\nVeamos ahora la descomposición de Nacimientos bajo un esquema multiplicativo (type = \"mult\").\n\nnacDesMul &lt;- decompose(nacimientos, \n                       type = \"mult\")\n\nautoplot(nacDesMul,\n         xlab = \"\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 23: Descomposición multiplicativa de Nacimientos por medias móviles\n\n\n\n\n\nObserva que por tratarse de un esquema multiplicativo en la Figura 23 la componente estacional se mueve alrededor del valor 1 y debe interpretarse como una variación porcentual. Igualmente, el residuo también gira en torno al valor 1.\nLos valores de la componente estacional se deben interpretar como variaciones porcentuales: en febrero nacen un 9.2% menos de niños y en octubre un 3.6% más, respecto de la media anual. Además, la suma de los valores de la componente estacional será 12.\n\nnacDesMul$figure\n\n [1] 0.9960154 0.9083329 1.0061351 0.9806906 1.0299231 0.9824611 1.0372353\n [8] 1.0197587 1.0324610 1.0361829 0.9802669 0.9905370\n\nsum(nacDesMul$figure)\n\n[1] 12"
  },
  {
    "objectID": "03-01-Tema1.html#descomposición-por-regresiones-locales-ponderadas",
    "href": "03-01-Tema1.html#descomposición-por-regresiones-locales-ponderadas",
    "title": "Series Temporales. Definición y componentes",
    "section": "5.3 Descomposición por regresiones locales ponderadas",
    "text": "5.3 Descomposición por regresiones locales ponderadas\n\nIdeas generales\nLa función stl estima las componentes de tendencia y estacionalidad a partir de regresiones locales ponderadas (técnica conocida como loess)\nSus ventajas son:\n\nNo se perderán datos al inicio o al final de la serie.\nAsume que tanto la tendencia como la estacionalidad pueden cambiar con el tiempo y posibilita controlar este cambio a partir de parámetros.\nEs bastante robusta frente a valores atípicos.\n\nSu principal desventaja es que esta técnica de descomposición solo es válida para esquemas aditivos. Es posible obtener con stl una descomposición multiplicativa descomponiendo primero el logaritmo de la serie, para después calcular la exponencial de las componentes.\nLa función stl genera un objeto con la componente $time.series que contiene en columna tres series temporales: seasonal, trend y remainder (de nuevo usa names y str para aprender más).\nLos dos parámetros principales que debes elegir cuando utilices stl son la ventana de tendencia (t.window) y la ventana estacional (s.window). Estos parámetros controlan la rapidez con la que pueden cambiar las componentes de tendencia y estacionalidad con el tiempo. Valores pequeños permiten cambios más rápidos, valores grandes implican que no hay cambios. Ambos parámetros deben ser números impares:\n\nt.window es el número de observaciones consecutivas que se deben utilizar al estimar la tendencia. Consulta la ayuda para ver el valor por defecto.\ns.window está relacionado con el número observaciones que se deben utilizar al estimar cada valor de la componente estacional. No hay ningún valor por defecto para este parámetro. Establecerlo como periodic equivale a que la componente estacional sea periódica (es decir, idéntica a lo largo de los años). Si es un valor numérico, debe ser impar y mayor o igual a 7.\n\n\n\nEjemplo\nVeamos un ejemplo de su uso para la serie Demanda eléctrica (Figura 24). Se ha usado el valor por defecto para t.window y se ha indicado que la estacionalidad es constante en el tiempo (s.window = \"periodic\"). Además, se ha especificado que se tenga en cuenta la posible existencia de valores atípicos (robust = TRUE).\n\neleStl &lt;- stl(electricidad, \n              s.window = \"periodic\",\n              robust = TRUE)\n\nhead(eleStl$time.series, n = 7)\n\nTime Series:\nStart = c(1, 7) \nEnd = c(2, 6) \nFrequency = 7 \n          seasonal    trend   remainder\n1.857143 -91.43206 597.5375   -4.275429\n2.000000  13.80810 610.2002   -6.288319\n2.142857  32.33979 622.8630   17.517258\n2.285714  35.70651 635.4299   13.673593\n2.428571  35.28141 647.9968  -16.168242\n2.571429  26.55179 658.5280 -109.769821\n2.714286 -52.25554 669.0592    3.736320\n\n\n\nautoplot(eleStl,\n         xlab = \"\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 24: Descomposición de Electricidad por regresiones locales ponderadas\n\n\n\n\n\nPodemos comprobar que los valores de la componente estacional suman cero.\n\nsum(head(seasonal(eleStl), 7))\n\n[1] -9.616439e-08\n\n\n\n\nPara Demanda eléctrica hemos obtenido tres estimaciones de la componente estacional: la primera obtenida con tapply, la segunda obtenida con decompose y la tercera con stl. Se puede observar que las tres estimaciones son muy similares, pero no coincidentes, y aunque los métodos de descomposición son preferibles a tapply, ninguna estimación es a priori mejor que otra.\n\n# tapply\nround(as.numeric(componenteEstacional), 2)\n# decompose\nround(seasonal(eleDesAdi)[c(2:7, 1)], 2)\n# stl\nround(seasonal(eleStl)[c(2:7, 1)], 2)\n\n\n\n              L     M     X     J     V      S      D\ntapply    10.29 32.74 36.77 35.67 23.17 -47.56 -89.37\ndecompose 10.71 32.19 36.60 35.24 22.42 -48.26 -88.90\nstl       13.81 32.34 35.71 35.28 26.55 -52.26 -91.43\n\n\n\n\nSi en lugar de periodic, fijamos el parámetro s.window a, por ejemplo, 11 (siempre un valor impar), estaremos permitiendo que la estacionalidad cambien en el tiempo. La Figura 25 muestra la componente estacional estimada previamente (bajo el supuesto de componente estacional constante) y la que se obtiene con el argumento s.window = 11. Para el periodo mostrado se observa que la componente estacional ha variando con el tiempo. Cuanto mayor es el valor (impar) de s.window más constante en el tiempo es la componente estacional.\n\n\n\n\n\n\n\n\nFigura 25: Componente estacional para Demanda eléctrica"
  },
  {
    "objectID": "04-01-Bootstrapping.html#idea-general",
    "href": "04-01-Bootstrapping.html#idea-general",
    "title": "Bootstrapping para obtener intervalos de predicción",
    "section": "Idea general",
    "text": "Idea general\nVeamos primero la idea general y luego los detalles:\n\nPartimos de una serie temporal \\(\\{y_t\\}_{t=1}^T\\) y un horizonte de predicción \\(h\\).\nA partir de la serie original vamos a generar una nueva serie que es similar a la original. Luego veremos como.\nAjustamos nuestro modelo a la nueva serie y obtenemos una predicción \\(h\\) periodos hacia adelante, que llamaremos \\(\\hat y_{T+h|T}^1\\).\nRepetimos los pasos 2 y 3 un numero \\(n\\) de veces (típicamente \\(n=5000\\)), de forma que al final del proceso tenemos \\(n\\) predicciones \\(h\\) periodos hacia adelante, \\(\\hat y_{T+h|T}^1,\\; \\hat y_{T+h|T}^2,\\; \\ldots,\\; \\hat y_{T+h|T}^n\\), obtenidas a partir de \\(n\\) series similares a la original.\nPor último, obtenemos el intervalo de predicción calculando los percentiles correspondientes a partir de estas \\(n\\) predicciones.\n\nEste proceso hay que repetirlo para cada horizonte de predicción en que estemos interesados."
  },
  {
    "objectID": "04-01-Bootstrapping.html#detalles",
    "href": "04-01-Bootstrapping.html#detalles",
    "title": "Bootstrapping para obtener intervalos de predicción",
    "section": "Detalles",
    "text": "Detalles\nLa clave del proceso es el paso 2, donde se obtiene una nueva serie similar a la original. También vale la pena aclarar un poco más el paso 5.\nPaso 2: nueva serie\nEn lo que viene a continuación no voy a ser riguroso para no perdernos en cuestiones matemáticas, pero sí suficientemente preciso para entender bien el proceso.\n\nDada la serie original, la descomponemos en sus tres componentes: tendencia, estacionalidad y error.\nA continuación, obtenemos una versión barajada de la componente del error. (Aquí es donde no estoy siendo preciso porque el proceso de barajado se tiene que hacer por bloques y es con reemplazamiento.)\nAhora se combinan –sumando o multiplicando, según el esquema– la tendencia, la estacionalidad y el error barajado para obtener una nueva serie que se parecerá a la original porque tiene la misma tendencia y estacionalidad, pero diferente error.\n\nVeamos un ejemplo muy sencillo para una serie simulada de orden estacional 5.\n\nLa dos primeras columnas indican la estación de cada dato y el valor de la serie, para un total de 15 observaciones.\nLas columnas Tendencia, Estacionalidad y Error han sido obtenidas aplicando el método de descomposición por regresiones locales ponderadas. Observa que cada dato de la serie es la suma de estas tres componentes.\nLa columna ErrorBootstrapping se ha obtenido como un muestreo con reemplazamiento de los datos de la columna Error. Como es una muestra con reemplazamiento, hay algunos errores repetidos.\nPor último, la nueva serie (columna NuevaSerie) se ha obtenido sumando las columnas Tendencia, Estacionalidad y ErrorBootstrapping. Esta serie tiene la misma tendencia y estacionalidad que la serie original y solo se diferencia en el error, así que la nueva serie debería parecerse a la serie original.\n\n\n\n   Estacion Serie Tendencia Estacionalidad  Error ErrorBootstrapping NuevaSerie\n1         1 27.00     19.96           9.60  -2.56              -2.96      26.59\n2         2 16.72     25.12         -13.33   4.93               9.43      21.22\n3         3 15.08     30.14         -12.09  -2.96              -2.56      15.49\n4         4 18.79     34.77          -9.11  -6.87               3.10      28.76\n5         5 75.53     38.58          24.94  12.01              12.01      75.53\n6         1 63.31     39.24           9.60  14.47               3.10      51.94\n7         2 17.28     38.48         -13.33  -7.87               9.43      34.58\n8         3 18.00     34.84         -12.09  -4.75              -6.87      15.88\n9         4 24.84     30.85          -9.11   3.10              -0.40      21.34\n10        5 54.67     30.13          24.94  -0.40              -6.87      48.21\n11        1 30.85     31.11           9.60  -9.86              12.01      52.72\n12        2 22.02     30.52         -13.33   4.84              -9.86       7.32\n13        3 26.51     29.17         -12.09   9.43               3.10      20.18\n14        4 24.14     27.94          -9.11   5.31              -7.87      10.96\n15        5 41.31     26.54          24.94 -10.17              12.01      63.49\n\n\nPaso 5: Predicción por intervalos\nPartimos de \\(n\\) predicciones a \\(h\\) periodos vista (\\(\\hat y_{T+h|T}^1,\\; \\hat y_{T+h|T}^2,\\; \\ldots,\\; \\hat y_{T+h|T}^n\\)) y queremos obtener a partir de ellas el intervalo de confianza.\nSupongamos que el nivel de confianza deseado es del 95%. Entonces, debemos calcular para las predicciones el percentil 2.5% y 97.5%. Recuerda que el percentil 2.5% es el valor numérico que deja un 2.5% de las predicciones por debajo de él; y que el percentil 97.5% es el valor numérico que deja un 97.5% de las predicciones por debajo de él. La función de R quantile() permite obtener estos valores.\nSi denominamos \\(l_h\\) al percentil 2.5% y \\(u_h\\) al percentil 97.5%, el intervalo de confianza de la predicción a \\(h\\) periodos vista es \\([l_h,\\; u_h]\\).\n¿Y la prediccion puntual?\nPara la predicción puntual tenemos dos opciones: obtener la predicción a partir de la serie original (como hemos visto en clase); u obtenerla como media de las \\(n\\) predicciones obtenidas\n\\[\\frac{1}{n}\\sum_{j=1}^n \\hat y_{T+h|T}^j\\]\nEste segundo método es el usual y se denomina bagging de bootstrap aggregating."
  },
  {
    "objectID": "03-07-Ejemplo2.html",
    "href": "03-07-Ejemplo2.html",
    "title": "Defunciones por Enfermedades Cerebrovasculares",
    "section": "",
    "text": "1 Introducción\nConsideremos la serie temporal correspondiente al número de defunciones causadas por enfermedades cerebrovasculares, Esta serie está disponible en el Instituto Nacional de Estadística desde enero de 1980 hasta diciembre de 2023, un total de 44 años o 528 meses.\nEn la descriptiva vimos que la descomposición revelaba la presencia de varios valores atípicos concentrados al inicio de la serie. Por este motivo, para el análisis por técnicas de Alisado Exponencial vamos a recortar la serie y considerarla solo desde enero de 1990, 34 años o 408 meses.\nLa serie presenta tendencia decreciente y estacionalidad de orden 12 en un claro esquema multiplicativo (véase Figura 1). Ya vimos que el determinante principal del patrón estacional es la temperatura.\n\nDefEnfCer &lt;- read.csv2(\"./series/Enfermedades cerebrovasculares.csv\", \n                       header = TRUE)\n\nDefEnfCer &lt;- ts(DefEnfCer[,2], \n                start = 1980, \n                frequency = 12)\n\nDefEnfCer &lt;- window(DefEnfCer, \n                    start = 1990)\n\nautoplot(DefEnfCer,\n         xlab = \"\",\n         ylab = \"Defunciones\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1990, 2024, 2)) \n\n\n\n\n\n\n\nFigura 1: Defunciones causadas por enfermedades cerebrovasculares\n\n\n\n\n\n\n\n\n\n\n2 Ajuste por alisado exponencial e interpretación\nVamos a aplicar la metodología de Alisado Exponencial a la serie de defunciones. Si se estima el modelo sin imponer ninguna restricción ets identifica como modelo óptimo ETS(M,Ad,M), con un valor de \\(\\phi = 0.98\\), en su valor máximo. Por tanto, se opta por solicitar de nuevo el mejor modelo excluyendo aquellos con amortiguamiento.\n\nDefEnfCerEts &lt;- ets(DefEnfCer, \n                    damped = FALSE)\n\nsummary(DefEnfCerEts) \n\nETS(M,N,M) \n\nCall:\nets(y = DefEnfCer, damped = FALSE)\n\n  Smoothing parameters:\n    alpha = 0.3033 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 3627.815 \n    s = 1.1257 0.9906 0.95 0.847 0.9137 0.9491\n           0.8957 0.9587 0.9676 1.089 1.0796 1.2334\n\n  sigma:  0.0518\n\n     AIC     AICc      BIC \n6504.585 6505.809 6564.754 \n\nTraining set error measures:\n                   ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -13.7002 149.8581 109.4664 -0.7373514 3.879379 0.6820121\n                   ACF1\nTraining set 0.08377251\n\n\nEl modelo estimado no tiene pendiente y tiene estacionalidad y error multiplicativos: \\[y_{t+1} = l_t \\cdot s_{t+1-m} \\cdot (1 + \\varepsilon_{t+1}).\\]\nEl valor de \\(\\alpha\\) indica que el nivel de la serie ha ido variando en el tiempo. El valor de \\(\\gamma\\) es prácticamente cero e indica que la estacionalidad se mantienen constante en el tiempo (véase Figura 2).\n\nautoplot(DefEnfCerEts,\n         xlab = \"\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 2: Descomposición por Alisado Exponencial para defunciones por enfermedades cerebrovasculares\n\n\n\n\n\nLa calidad del ajuste es bastante buena, con un MAPE de 3.9% y un RMSE de 150 defunciones (o 109 si usamos el MAE). Además, según el MASE, el modelo de Alisado supone una mejora del 32% respecto del método ingenuo con estacionalidad, el más sencillo que podríamos aplicar. La ACF1 indica que las estimaciones por intervalo de las previsiones serán correctas, y no hay sesgo.\nLos últimos valores estimados del nivel y la estacionalidad, que corresponden a diciembre de 2023, nos permiten mostrar gráficamente la componente estacional (Figura 3).\n\ntail(DefEnfCerEts$states, 1)\n\n\n\n               l   s1   s2   s3   s4   s5   s6  s7   s8   s9  s10  s11  s12\nDec 2023 1906.82 1.13 0.99 0.95 0.85 0.91 0.95 0.9 0.96 0.97 1.09 1.08 1.23\n\n\n\ncomponenteEstacional &lt;- tail(DefEnfCerEts$states, 1)[13:2]\n\nggplot() +\n  geom_line(aes(x = 1:12, y = componenteEstacional)) + \n  geom_hline(yintercept = 1, colour = \"blue\", lty = 2) +\n  ggtitle(\"\") +\n  xlab(\"\") +\n  ylab(\"Efecto estacional\") +\n  scale_x_continuous(breaks= 1:12, \n                     labels = c(\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\", \"Jun\", \n                                \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\")) \n\n\n\n\n\n\n\nFigura 3: Componente estacional\n\n\n\n\n\nEl nivel de las defunciones por enfermedades cerebrovasculares en diciembre de 2023 (última observación) es de 1907 casos. La mayor incidencia de las defunciones por enfermedades cerebrovasculares tiene lugar en invierno, en los meses de diciembre a marzo. En concreto, destaca el mes enero con un incremento del 23% (s12) en las defunciones por enfermedades cerebrovasculares respecto de la media anual. La incidencia en verano es menor que la media anual, observándose en septiembre un 15% menos de casos (s4). El efecto estacional estimado por el método de Alisado es más acusado que el estimado durante la descriptiva de la serie.\n\n\n\n\n\n3 Predicción\nSi pedimos los valores de predicción y su intervalo de confianza al 95% para los próximos tres años, tenemos (numéricamente sólo se muestra el primer año):\n\nDefEnfCerEtsPre &lt;- forecast(DefEnfCerEts, \n                            h = 36, \n                            level = 95)\nDefEnfCerEtsPre\n\nRecuerda que las fórmulas usadas para el cálculo del intervalo de confianza de las predicciones no son adecuadas.\n\n\n         Point Forecast    Lo 95    Hi 95\nJan 2024       2351.793 2112.967 2590.619\nFeb 2024       2058.506 1840.037 2276.976\nMar 2024       2076.463 1846.971 2305.956\nApr 2024       1845.134 1633.414 2056.853\nMay 2024       1828.058 1610.849 2045.267\nJun 2024       1707.885 1498.224 1917.545\nJul 2024       1809.615 1580.556 2038.675\nAug 2024       1742.180 1515.196 1969.164\nSep 2024       1615.118 1398.864 1831.372\nOct 2024       1811.504 1562.593 2060.415\nNov 2024       1888.845 1622.836 2154.854\nDec 2024       2146.398 1836.937 2455.858\n\n\n\nautoplot(DefEnfCerEtsPre,\n         xlab = \"\",\n         ylab = \"Casos\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 4: Muertes por enf. cerebrovasculares (1990-2023) y predicción (2024-2026)\n\n\n\n\n\nLas predicciones, acordes con el modelo estimado, no muestran tendencia y su nivel es constante en los tres años de predicción. (véase Figura 4).\n\n\n\n\n\n4 Análisis del error\nLa Figura 5 muestra el residuo del modelo. Se aprecian cuatro meses en los que el residuo supera las tres desviaciones típicas porque el número de muertes por enfermedades cerebrovasculares fue muy superior al estimado por el modelo: febrero de 1999, junio 2003, enero de 2005 y febrero de 2012. El error en este último mes, febrero de 2012, es especialmente acusado —supera las 5 desviaciones típicas y es el único identificado por la prueba de Tukey. Durante ese mes se registraron temperaturas muy bajas en muchas partes del país, incluso algunas nevadas inusuales en zonas donde no era común ver nieve, y se reportaron mínimas récord en varias ciudades españolas. Estas temperaturas extremas causaron un incremento significativo en el número de defunciones por enfermedades cerebrovasculares.\n\nerror &lt;- residuals(DefEnfCerEts)\nsderror &lt;- sd(error)\n\nautoplot(error,\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\",\n         colour = \"black\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"blue\", \"blue\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(1990, 2024, 2)) \n\nfechas &lt;- format(seq(as.Date(\"1990-01-01\"), as.Date(\"2023-12-01\"), \"month\"), \"%Y-%m\")\nfechas[abs(error) &gt; 3 * sderror]\n\n[1] \"1999-02\" \"2003-06\" \"2005-01\" \"2012-02\"\n\natipicos &lt;- tsoutliers(error)\nfechas[atipicos$index]\n\n[1] \"2012-02\"\n\n\n\n\n\n\n\n\nFigura 5: Error + Intervención\n\n\n\n\n\n\n\n\n\n\n5 Validación: origen de predicción móvil\nAsumimos que se precisan diez años para hacer una buena estimación, \\(k=120\\), y que el horizonte temporal es un año, \\(h = 12\\) meses. La siguiente rutina permite obtener el MAPE para previsiones con un horizonte temporal desde 1 mes hasta 12 meses.\n\nk &lt;- 120                 \nh &lt;- 12                  \nTT &lt;- length(DefEnfCer)  \ns &lt;- TT - k - h          \n\nmapeAlisado &lt;- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set &lt;- subset(DefEnfCer, start = i + 1, end = i + k)\n  test.set &lt;-  subset(DefEnfCer, start = i + k + 1, end = i + k + h)\n  \n  fit &lt;- ets(train.set, model = \"MAM\", damped = FALSE)\n  fcast&lt;-forecast(fit, h = h)\n  mapeAlisado[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n}\n\nerrorAlisado &lt;- colMeans(mapeAlisado)\nerrorAlisado\n\n [1] 4.152597 4.364142 4.503068 4.432977 4.526099 4.607606 4.668964 4.605134\n [9] 4.567620 4.452289 4.496088 4.348938\n\nggplot() +\n  geom_line(aes(x = 1:12, y = errorAlisado)) +\n  ggtitle(\"Error de predicción según horizonte temporal\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"MAPE\") +\n  scale_x_continuous(breaks= 1:12)\n\n\n\n\n\n\n\nFigura 6: Error de predicción según horizonte temporal\n\n\n\n\n\nLa Figura 6 muestra que aunque el error depende del horizonte temporal de previsión, se mueve en una banda muy estrecha: entre el 4.1% para previsiones a un mes vista y el 4.7% para previsiones a siete meses vista.\n\n\n\n\n\n6 Modelos alternativos\n¿Podemos reducir el error extramuestral de previsión si cambiamos las opciones por defecto de ets o la serie a analizar? La Figura 7 muestra el error de previsión extramuestral según el horizonte de previsión para los siguientes modelos (todos sin amortiguamiento y en caso de transformación logarítmica, sin ajuste para insesgadez):\n\n\n\nId\nTransformación\nModelo\n\n\n\n\n1\nNinguna\nMNM\n\n\n2\nNinguna\nMAM\n\n\n3\nLogaritmo\nANA\n\n\n4\nLogaritmo\nAAA\n\n\n5\nDefunciones por día\nMNM\n\n\n6\nDefunciones por día\nMAM\n\n\n\nEn concreto, los comandos utilizados han sido:\n\nModelo 1: ets(x, model = \"MNM\", damped = FALSE)\nModelo 2: ets(x, model = \"MAM\", damped = FALSE)\nModelo 3: ets(x, model = \"ANA\", lambda = 0, damped = FALSE)\nModelo 4: ets(x, model = \"AAA\", lambda = 0, damped = FALSE)\nModelo 5: ets(x/monthdays(x), model = \"MNM\", damped = FALSE)\nModelo 6: ets(x/monthdays(x), model = \"MAM\", damped = FALSE)\n\n\n\n\n\n\n\n\n\n\n\nFigura 7: Errores de previsión extramuestral. Varios modelos\n\n\n\n\n\nDe la Figura 7 deducimos que aunque todos los métodos resultan similares en la precisión de las predicciones extramuestrales en el corto plazo, al pasar al medio y largo plazo las diferencias pueden ser significativas: la mayor diferencia entre los modelos se da para la previsión a ocho y nueve meses vista y es de 0.75 puntos porcentuales.\nSi queremos entrar en matices:\n\nGlobalmente el modelo que ofrece previsiones más precisas es el modelo 6, donde se ha forzado a que haya pendiente (model = \"MAM) y se trabaja sobre las defunciones por día. El segundo mejor modelo, el modelo 2, sigue el mismo esquema que el modelo 6 pero sobre la serie original.\nLos modelos que tienen tendencia (modelos 2, 4 y 6) resultan mejores que sus homólogos sin tendencia (modelos 1, 3 y 5, respectivamente).\nEl uso de logaritmo no mejora la precisión en las predicciones.\n\nEs decir, tanto la estrategia de predecir la serie de defunciones medias por día (en lugar de la serie original) como la de forzar a que el modelo tenga tendencia, que es lo que se observa gráficamente, mejoran la calidad de las previsiones extramuestrales. La combinación de estas dos estrategias es la óptima."
  },
  {
    "objectID": "03-06-Ejemplo1.html#tendencia",
    "href": "03-06-Ejemplo1.html#tendencia",
    "title": "Defunciones por Enfermedades Cerebrovasculares",
    "section": "3.1 Tendencia",
    "text": "3.1 Tendencia\nHemos obtenido la serie anual de casos de defunciones causadas por enfermedades cerebrovasculares, que se muestra en la Figura 3 y que permite analizar mejor la tendencia decreciente. A primeros de los 80 el número de defunciones prácticamente alcanzaba las 50,000 al año, mientras que actualmente están por debajo de las 25,000. Esto supone una caída media anual de 1.6% en el número de defunciones. Parece que la Covid-19 no ha tenido ningún efecto sobre el número de defunciones.\n\nautoplot(CasosAnual,\n         xlab = \"\",\n         ylab = \"Casos\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1980, 2024, 4)) \n\n\n\n\n\n\n\nFigura 3: Tendencia de las defunciones anuales causadas por enfermedades cerebrovasculares"
  },
  {
    "objectID": "03-06-Ejemplo1.html#estacionalidad",
    "href": "03-06-Ejemplo1.html#estacionalidad",
    "title": "Defunciones por Enfermedades Cerebrovasculares",
    "section": "3.2 Estacionalidad",
    "text": "3.2 Estacionalidad\nVeamos ahora como varía la incidencia de las muertes causadas por enfermedades cerebrovasculares según el mes del año.\n\nggsubseriesplot(DefEnfCer, \n             xlab = \"\",\n             ylab = \"\",\n             main = \"\") +\n  guides(colour=FALSE)\n\n\n\n\n\n\n\nFigura 4: Gráfico estacional: defunciones por enfermedades cerebrovasculares\n\n\n\n\n\nCada subserie en la Figura 4 vuelve a mostrar la reducción en las defunciones causadas por enfermedades cerebrovasculares durante el periodo de análisis. Respecto de la estacionalidad, se aprecia que el principal determinante es la temperatura puesto que la incidencia de la enfermedad es mayor en los meses de invierno y menor en los de verano. También cabría esperar un efecto días del mes y observar más incidencia en los meses de 31 días que en los de 30, pero el efecto de la temperatura es tan dominante que camufla cualquier otro efecto. Sin embargo, para el mes de febrero se ve muy claramente el efecto días de mes. Por temperatura febrero debería situarse a medio camino entre enero y marzo, pero por ser un mes con solo 28 días (29 los años bisiestos) la media de defunciones es menor y se sitúa al mismo nivel que marzo."
  },
  {
    "objectID": "04-06-Covid_Nacimientos.html#ajuste-a-un-modelo-y-predicción",
    "href": "04-06-Covid_Nacimientos.html#ajuste-a-un-modelo-y-predicción",
    "title": "Efecto de la Covid-19 sobre la serie Nacimientos",
    "section": "Ajuste a un modelo y predicción",
    "text": "Ajuste a un modelo y predicción\nVamos a considerar la serie de nacimientos desde enero de 2000 hasta octubre de 2020, ajustarla a un modelo ARIMA y predecir hasta diciembre de 2022.\nEl siguiente código estima el mismo modelo visto en el tema de ARIMA con estacionalidad para la serie nacimientos. La única diferencia es que en esta ocasión la serie alcanza hasta septiembre de 2020. El ajuste, con un error porcentual del 1.5% es muy bueno.\n\nnacimientos2 &lt;- window(nacimientos, \n                       end = c(2020, 10))\n\nDiasMes &lt;- monthdays(nacimientos2)\nSemanaSanta &lt;- easter(nacimientos2)\n\nd1206 &lt;- 1*(cycle(nacimientos2) == 12 & trunc(time(nacimientos2)) == 2006)\nd1210 &lt;- 1*(cycle(nacimientos2) == 12 & trunc(time(nacimientos2)) == 2010)\nd0111 &lt;- 1*(cycle(nacimientos2) == 1 & trunc(time(nacimientos2)) == 2011)\nd0416 &lt;- 1*(cycle(nacimientos2) == 4 & trunc(time(nacimientos2)) == 2016)\n\nd12100111 &lt;- d1210 - d0111\n\nmodelo &lt;- Arima(nacimientos2, \n                 order = c(0, 1, 1),\n                 seasonal = c(0, 1, 1),\n                 lambda = 0,\n                 xreg = cbind(DiasMes, SemanaSanta, \n                              d1206, d12100111, d0416))\n\nsummary(modelo)\n\nSeries: nacimientos2 \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasMes  SemanaSanta    d1206  d12100111    d0416\n      -0.4952  -0.7600   0.0291      -0.0218  -0.0464     0.0587  -0.0548\ns.e.   0.0577   0.0452   0.0072       0.0050   0.0158     0.0099   0.0166\n\nsigma^2 = 0.0003897:  log likelihood = 593.76\nAIC=-1171.52   AICc=-1170.89   BIC=-1143.78\n\nTraining set error measures:\n                   ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -76.3823 703.4119 566.7356 -0.2259197 1.546594 0.4148193\n                   ACF1\nTraining set 0.01576144\n\n\nAhora vamos a predecir la serie desde noviembre de 2020 hasta diciembre de 2022 (26 meses).\n\ntmp &lt;- ts(rep(0, 26), start = c(2020, 11), freq = 12)\npdm &lt;- monthdays(tmp)\npss &lt;- easter(tmp)\nprediccion &lt;- forecast(modelo, \n                       h = 26,\n                       xreg = cbind(pdm, pss, \n                                    rep(0, 26), rep(0, 26), rep(0, 26)))\n\nLa Figura 2 muestra la serie original de nacimientos desde 2018 y la predicción. Por la metodología seguida, desde noviembre de 2020 disponemos para cada mes de dos datos: los nacimientos en el mundo real con Covid (observaciones) y los nacimientos en un mundo sin Covid (previsiones).\n\nautoplot(nacimientos,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\", \n         series = \"Con Covid\") + \n  xlim(2018, 2023) +\n  ylim(20000, 35000) + \n  autolayer(prediccion, series = \"Sin Covid\", PI = FALSE) + \n  labs(colour = \"Nacimientos\") + \n  theme(legend.position=c(0.9,0.85)) \n\n\n\n\n\n\n\nFigura 2: Nacimientos mensuales (enero 2018 - diciembre 2022) y previsiones (noviembre 2020 - diciembre 2022)\n\n\n\n\n\nUna lectura rápida de la Figura 2 muestra que efectivamente, el número observado de nacimientos entre noviembre de 2020 y febrero de 2021 (en rojo) fue muy inferior a los valores esperados (en azul). Sin embargo, el resto del año 2021 el número de nacimientos fue superior al esperado, apuntando a un ligero efecto rebote. En 2022 el efecto de la pandemia no parece haber desaparecido totalmente, observándose que el número de nacimientos real superaba la mayoría de los meses el valor predicho. Veamos estas observaciones en detalle.\nEfecto del confinamiento sobre los nacimientos {-}\nEn primer lugar veamos cuál ha sido la caída en el número de nacimientos entre noviembre de 2020 y febrero de 2021.\n\nCon_covid &lt;- as.numeric(window(nacimientos, \n                               start = c(2020, 11), \n                               end = c(2021, 2)))\nSin_covid &lt;- as.numeric(window(prediccion$mean, \n                               start = c(2020, 11), \n                               end = c(2021, 2)))\n\n# Caida porcentual\nround(100 * (Con_covid - Sin_covid)/Con_covid, 1)\n\n[1]  -6.9 -20.8 -19.6  -3.6\n\n#Caida en el total de nacidos\nsum(Con_covid - Sin_covid)\n\n[1] -12294.93\n\n\nLa mayor caída porcentual en el número de nacimientos tuvo lugar en los meses de diciembre de 2020 y enero de 2021 (20.8% y 19.6%, respectivamente) y nuestras estimaciones coinciden con las aportadas en González (2021) y Blanes, Domingo, and Esteve (2021). Respecto del número de nacimientos, nosotros estimamos una reducción de 12300 nacidos, un valor algo inferior a la estimación en González (2021) y muy superior a la estimación en Blanes, Domingo, and Esteve (2021)."
  },
  {
    "objectID": "04-06-Covid_Nacimientos.html#efecto-rebote",
    "href": "04-06-Covid_Nacimientos.html#efecto-rebote",
    "title": "Efecto de la Covid-19 sobre la serie Nacimientos",
    "section": "Efecto rebote",
    "text": "Efecto rebote\nUna posibilidad es que el confinamiento no hizo que las parejas decidieran no tener hijos de forma permanente, sino que simplemente retrasó la decisión de tenerlos. Si esto es así, cabria esperar a mediados o finales de 2021 un número de nacimientos superior al esperado: por una lado tendríamos los nacimientos de las parejas que tenían pensado tener hijos en ese momento y por otro los de las parejas que habían retrasado el momento de la maternidad. Si es así, la Covid no habría reducido de forma permanente el número de nacimientos y el acumulado en el medio/largo plazo seria el mismo que si no hubiera habido Covid.\nPara poder responder mejor a esta pregunta, vamos a calcular la diferencia acumulada entre el número de nacimientos esperado y el real desde noviembre de 2020 hasta diciembre de 2022. La diferencia acumulada crece hasta los 12300 bebés en febrero de 2021. Esta diferencia máxima se va reduciendo lentamente hasta los 3900 bebés en diciembre de 2021. Es decir, efectivamente parece que hay un efecto rebote que ha compensado a lo largo del año 2021 en un total de 8400 bebés la caída hasta febrero de ese año.\nDurante el año 2022 la diferencia acumulada ha seguido reduciéndose hasta desaparecer hacia agosto de 2022. Sin embargo, en los siguientes meses esta diferencia se hace negativa, alcanzado los -2800 bebes en diciembre de 2022. Este último resultado apunta a que durante 2022 el número de nacimientos ha sido inferior al esperado. Es aun difícil identificar la causa, que puede ir desde el error propio de nuestras previsiones para 2022, al efecto que la inestabilidad política y económica pueda tener sobre la decisión de las parejas de tener hijos (guerra ruso-ucraniana, incremento de los precios energéticos, inflación…).\n\nCon_covid &lt;- window(nacimientos, start = c(2020, 11))\nSin_covid &lt;- window(prediccion$mean, start = c(2020, 11))\n\nDiferencia &lt;- cumsum(Sin_covid - Con_covid)\nDiferencia &lt;- ts(Diferencia, \n                 start = c(2020, 11),\n                 frequency = 12)\n\n\nautoplot(Diferencia,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\") + \n  geom_hline(yintercept = 0, col = \"red\") + \n  xlim(2020.7, 2023) +\n   scale_x_continuous(breaks= seq(2020 + 11/12, 2022 + 11/12, 3/12),\n                     label = c(\"Dic-20\", \n                               \"Mar-21\", \"Jun-21\", \"Sep-21\", \"Dic-21\", \n                               \"Mar-22\", \"Jun-22\", \"Sep-22\", \"Dic-22\"))\n\n\n\n\n\n\n\nFigura 3: Déficit acumulado de nacimientos desde noviembre de 2020"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Series Temporales",
    "section": "",
    "text": "Series Temporales (42229 Modelización estadística). Máster de Bioestadística\n\n\nHola a tod@s y bienvenid@s a la página web del curso.\n\nEsta es la página web de la edición 2024-25 el curso de Series Temporales (Máster en Bioestadística) de la Universitat de València. El repositorio para crear esta web lo tenéis aquí en Github.\nResumen del curso: la idea principal es aprender a manejarse con datos con estructura temporal (en contraposición a datos de corte transversal o espacial, que veréis en Modelos lineales y Estadística espacial). Veremos cómo describir una serie temporal, como ajustarla a un modelo, cómo hacer predicciones y, lo que es más importante, a valorar la calidad de las predicciones.\nPara más información de este módulo, visita la sección Guía del curso de esta página web.\n\n– Iván Arribas"
  },
  {
    "objectID": "06-Practica.html",
    "href": "06-Practica.html",
    "title": "Prácticas de evaluación",
    "section": "",
    "text": "Durante todo el módulo realizarás una serie de ejercicios que aplicarán las técnicas vistas en cada tema. Lee con atención las siguientes instrucciones generales.\nTu primera tarea es descargarte tu serie temporal. Descárgate aquí el fichero .pdf con la descripción de las series y localiza en él el nombre de tu serie. El este fichero encontrarás también una descripción detallada de la serie que vas a analizar: nombre, definición, unidades, fuente, fechado…\nPor otro lado, descárgate aquí el fichero comprimido con todas las series, descomprímelo y localiza el fichero ‘’csv’’ con tu serie.\n\n\n\n\n\nCaracterísticas generales de las entregas\n\n\n\nLa siguiente descripción de las prácticas es provisional e incompleta. El contenido final se indicará en clase al finalizar cada tema.\nLa fecha máxima de entrega de cada trabajo se indicará al finalizar cada tema. Procura no retrasarte. Si el retraso supera la semana, tu nota en la práctica será de cero.\nEn Aulavirtual, en la tarea “Practica evaluación n” debes subir un fichero .pdf con los resultados de la práctica n-ésima. Sólo se admite un único fichero en formato .pdf.\nPiensa que además de los contenidos también su ordenación, estructura, sintaxis, comentarios, etc. son parte de la evaluación. Aquí tienes qué aspectos voy a valorar y la puntuación de cada uno.\nIncluye siempre todo el código en R utilizado en el trabajo. Si utilizas Markdown (o similar), haz que el código sea visible; en otro caso, añádelo como un apéndice al final del documento.\n\n\n\n\n\n\nPráctica 1: Descripción de la serie temporal\n\n\n\nHaz una descripción detallada de tu serie (tendencia, estacionalidad, intervención, tipo de esquema…).\nAyúdate para ello de todos los elementos numéricos y gráficos que hemos visto: gráfica de tu serie original, gráfica de su agregación anual, gráfica localización/dispersión, descomposición…\n\nSi el análisis realizado así lo aconseja, indica si vas a recortar tu serie para posteriores análisis.\n\n\n\n\n\nPráctica 2: Alisado exponencial\n\n\n\nAjusta el modelo de alisado más adecuado a tus datos.\n\nDescribe el modelo obtenido.\nObtén los indicadores de la calidad del modelo y coméntalos.\nRealiza un predicción a tres años vista y muestra los resultados de la predicción gráficamente.\nObtén la calidad de las previsiones con origen de previsión móvil.\nObtén el residuo e identifica la presencia de valores extremos.\nCompara el modelo ajustado por Alisado Exponencial con el método ingenuo con estacionalidad\n\n\n\n\n\n\n\nPráctica 3: Procesos ARIMA sin estacionalidad\nA grandes rasgos el ejercicio consistirá en analizar tu serie temporal sin estacionalidad (agregación anual), siguiendo la metodología de Box y Jenkins. Por tanto, para esta práctica debes considerar solo tu serie con fechado anual.\nA continuación se indican los contenidos mínimos que se deben presentar. Eres libre de elegir el orden de la presentación de los contenidos, así como la información finalmente presentada.\n\nTransforma la serie para que sea estacionaria y ergódica\n\nObtén su gráfica de la serie y de su primera diferencia.\nRealiza el contraste de raíces unitarias.\nDiferencia la serie para obtener otra que sea estacionaria y ergódica.\nValor el uso de la transformación logarítmica.\n\nIdentificación del modelo ARIMA\n\nIdentificación de la parte estructural, análisis de intervención y valores atípicos.\n\nEstimación del modelo definitivo\n\nEstimación de los coeficientes del modelo.\nDesarrollo de la ecuación estimada.\nInterpretación de los parámetros y de la ecuación estimada.\n\nValidación completa del modelo\n\nSignificatividad de los coeficientes (contraste de Wald).\nHipótesis de homocedasticidad e incorrelación.\nValores extremos.\nCálculo de la calidad del ajuste y de las predicciones.\n\nPrevisión de la serie (al menos tres años)\nValoración crítica del modelo ARIMA respecto de un modelo de alisado\n\nComparación del modelo estimado en esta práctica el mejor modelo de alisado para la serie anual.\nComparación de la calidad de los modelos.\nComparación de las previsiones.\n\n\n\n\n\n\n\nPráctica 4: Procesos ARIMA con estacionalidad\nLos objetivos de esta práctica son idénticos a los de la práctica previa, pero considerando tu serie original con estacionalidad.\n\nTransforma la serie para que sea estacionaria y ergódica.\n\nValor el uso de la transformación logarítmica.\nObtén la gráfica de la serie y de su primera diferencia (regular y/o estacional)\nAdemás, calcula la FAC de la serie y de su primera diferencia (regular y/o estacional).\nDiferencia la serie para obtener otra que sea estacionaria y ergódica.\n\nIdentificación del modelo ARIMA\n\nParte de la trasformación de la serie identificada en la práctica 3.\nIdentificación de la parte estructural, análisis de intervención y valores atípicos.\n\nEstimación del modelo definitivo\n\nEstimación de los coeficientes del modelo.\nDesarrollo de la ecuación estimada.\nInterpretación de la ecuación estimada.\n\nValidación completa del modelo\n\nSignificatividad de los coeficientes (contraste de Wald).\nHipótesis de homocedasticidad e incorrelación.\nValores extremos.\nCálculo de la calidad del ajuste y de las predicciones.\n\nPrevisión de la serie (al menos tres años, 36 meses)\nValoración crítica del modelo ARIMA respecto de un modelo de alisado:\n\nComparación del modelo estimado en esta práctica con el modelo de la práctica 2\nComparación de la calidad de los modelos.\nComparación de las previsiones."
  },
  {
    "objectID": "03-05-Tema5.html",
    "href": "03-05-Tema5.html",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "",
    "text": "En general, la capacidad de toma de datos posibilita que el fechado de las series sea inferior al año, apareciendo la componente estacional. No es difícil disponer de series mensuales, trimestrales, diarias o incluso con frecuencia superior.\nEn este tema se revisan los conocimientos del tema previo, ampliándolos a fin de contemplar la presencia de estacionalidad en las series temporales\nSe mantienen las hipótesis sobre el proceso generador de datos (estacionario y ergódico) y el vector de residuos (ruido blanco).\nRecuerda que \\(m\\) es el orden estacional."
  },
  {
    "objectID": "03-05-Tema5.html#procesos-autorregresivos-ar_mp",
    "href": "03-05-Tema5.html#procesos-autorregresivos-ar_mp",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "2.1 Procesos autorregresivos \\(AR_m(P)\\)",
    "text": "2.1 Procesos autorregresivos \\(AR_m(P)\\)\n\nDefinición\nEl modelo general autorregresivo estacional de orden P, \\(y_t \\sim AR_m(P)\\) viene definido por \\[y_t=c + \\phi_m y_{t-m} + \\phi_{2m} y_{t-2m} + \\ldots + \\phi_{Pm} y_{t-Pm} + \\varepsilon_t,\\] que usando el operador retardo queda \\[(1 - \\phi_m L^m - \\phi_{2m} L^{2m} - \\ldots - \\phi_{Pm} L^{Pm})y_t = c + \\varepsilon_t.\\]\n\n\nPropiedades\nEl proceso es estacionario si quedan fuera del círculo de radio unidad todas las raíces del polinomio \\[\\Phi_P(z) = 1 - \\phi_m z^m - \\phi_{2m} z^{2m} - \\ldots - \\phi_{Pm} z^{Pm}.\\]\nEs invertible siempre.\nSobre todo,\n\nEn la FAC las autocorrelaciones de orden múltiplo de m \\((m,2m,\\ldots)\\) decaen exponencialmente a partir del orden P.\nEn la FACP las autocorrelaciones parciales de orden múltiplo de m verifican que los P primeros valores son no nulos y todos los demás valen cero.\n\n\n\nEjemplos\n\n\\(y_t \\sim AR_{12}(1):\\;\\;y_t = c + \\phi_{12} y_{t-12} + \\varepsilon_t\\) o \\((1 - \\phi_{12} L^{12})y_t = c + \\varepsilon_t\\)\n\\(y_t \\sim AR_7(2):\\;\\;y_t = c + \\phi_7 y_{t-7} + \\phi_{14} y_{t-14} + \\varepsilon_t\\) o \\((1 - \\phi_7 L^7 - \\phi_{14} L^{14})y_t = c + \\varepsilon_t\\)\n\n\n\nSimulaciones de procesos autorregresivos \\(AR_m(P)\\)\nLa Figura 1 muestra una simulación del proceso \\(AR_{4}(2)\\) \\(y_t = 0.7y_{t-4} - 0.7y_{t-8} + \\varepsilon_t\\) (panel superior), y del proceso \\(AR_{12}(1)\\) \\(y_t = 0.6y_{t-12} + \\varepsilon_t\\) (panel inferior). En ambos casos la muestra es de tamaño 500 y \\(\\varepsilon_t\\) se distribuye como una normal con media cero y varianza la unidad. (Todas las simulaciones se han realizado con la función arima.sim de la librería stats.)\n\n\n\n\n\n\n\n\n\n\n\n\n(a) AR(2) - m = 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) AR(1) - m = 12\n\n\n\n\n\n\n\nFigura 1: Simulación de dos procesos AR estacionales con diferente orden estacional"
  },
  {
    "objectID": "03-05-Tema5.html#procesos-en-medias-móviles-ma_mq",
    "href": "03-05-Tema5.html#procesos-en-medias-móviles-ma_mq",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "2.2 Procesos en medias móviles \\(MA_m(Q)\\)",
    "text": "2.2 Procesos en medias móviles \\(MA_m(Q)\\)\n\nDefinición\nEl modelo general en medias móviles estacional de orden Q, \\(y_t \\sim MA_m(Q)\\) viene definido por \\[y_t=c + \\varepsilon_t + \\theta_m \\varepsilon_{t-m} + \\theta_{2m} \\varepsilon_{t-2m} + \\ldots +\n  \\theta_{Qm} \\varepsilon_{t-Qm},\\] que usando el operador retardo queda \\[y_t = c + (1 + \\theta_m L^m + \\theta_{2m} L^{2m} + \\ldots + \\theta_{Qm} L^{Qm}) \\varepsilon_t.\\]\n\n\nPropiedades\nEl proceso es invertible si quedan fuera del círculo de radio unidad todas las raíces del polinomio \\[\\Theta_Q(z) = 1 + \\theta_m z^m + \\theta_{2m} z^{2m} + \\ldots + \\theta_{Qm} z^{Qm}.\\]\nEs estacionario siempre.\nSobre todo,\n\nEn la FAC las autocorrelaciones de orden múltiplo de m verifican que los Q primeros valores son no nulos y todos los demás valen cero.\nEn la FACP las autocorrelaciones parciales de orden múltiplo de m decaen exponencialmente a partir del orden Q.\n\n\n\nEjemplos\n\n\\(y_t \\sim MA_7(1):\\;\\;y_t = c + \\varepsilon_t + \\theta_7 \\varepsilon_{t-7}\\) o \\(y_t = c + (1 + \\theta_7 L^7)\\varepsilon_t\\)\n\\(y_t \\sim MA_{12}(2):\\;\\;y_t=c + \\varepsilon_t + \\theta_{12} \\varepsilon_{t-12} + \\theta_{24} \\varepsilon_{t-24}\\) o \\(y_t = c + (1 + \\theta_{12} L^{12} + \\theta_{24} L^{24})\\varepsilon_t\\)\n\n\n\nSimulaciones de procesos en medias móviles \\(MA_m(Q)\\)\nLa Figura 2 muestra una simulación del proceso \\(MA_{4}(2)\\) \\(y_t = 0.7\\varepsilon_{t-4} - 0.7\\varepsilon_{t-8} + \\varepsilon_t\\) (panel superior), y del proceso \\(MA_{12}(1)\\) \\(y_t = 0.6\\varepsilon_{t-12} + \\varepsilon_t\\) (panel inferior). En ambos casos la muestra es de tamaño 500 y \\(\\varepsilon_t\\) se distribuye como una normal con media cero y varianza la unidad.\n\n\n\n\n\n\n\n\n\n\n\n\n(a) MA(2) - m = 4\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) MA(1) - m = 12\n\n\n\n\n\n\n\nFigura 2: Simulación de dos procesos MA estacionales con diferente orden estacional"
  },
  {
    "objectID": "03-05-Tema5.html#procesos-arma_mpq",
    "href": "03-05-Tema5.html#procesos-arma_mpq",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "2.3 Procesos \\(ARMA_m(P,Q)\\)",
    "text": "2.3 Procesos \\(ARMA_m(P,Q)\\)\n\nDefinición\nEl modelo general \\(y_t \\sim ARMA_m(P,Q)\\) viene definido por\n\\[y_t = c + \\phi_m y_{t-m} + \\phi_{2m} y_{t-2m} + \\ldots + \\phi_{Pm} y_{t-Pm}  +\n  \\varepsilon_t + \\theta_m \\varepsilon_{t-m} + \\theta_{2m} \\varepsilon_{t-2m} + \\ldots +\n  \\theta_{Qm} \\varepsilon_{t-Qm},\\] que usando el operador retardo queda\n\\[(1 - \\phi_m L^m - \\ldots - \\phi_{Pm} L^{Pm})y_t = c + (1 + \\theta_m L^m + \\ldots + \\theta_{Qm} L^{Qm}) \\varepsilon_t.\\]\nEl proceso más simple es el \\(ARMA_m(1,1)\\): \\(y_t = c  + \\phi_m y_{t-m} + \\theta_m \\varepsilon_{t-m} + \\varepsilon_{t}.\\)\n\n\nPropiedades\nEl proceso es estacionario si quedan fuera del círculo de radio unidad todas las raíces del polinomio \\[\\Phi_P(z) = 1 - \\phi_m z^m - \\phi_{2m} z^{2m} - \\ldots - \\phi_{Pm} z^{Pm}.\\]\nEl proceso es invertible si quedan fuera del círculo de radio unidad todas las raíces del polinomio \\[\\Theta_Q(z) = 1 + \\theta_m z^m + \\theta_{2m} z^{2m} + \\ldots + \\theta_{Qm} z^{Qm}.\\]\nSobre todo,\n\nEn la FAC las autocorrelaciones de orden múltiplo de m decaen exponencialmente a partir del orden P.\nEn la FACP las autocorrelaciones parciales de orden múltiplo de m decaen exponencialmente a partir del orden Q.\n\n\n\nEjemplos\n\n\\(y_t \\sim ARMA_7(1, 1):\\;\\;y_t = c  + \\phi_7 y_{t-7} + \\theta_7 \\varepsilon_{t-7} + \\varepsilon_{t}\\) o \\((1 - \\phi_7 L^7)y_t = c + (1 + \\theta_7 L^7)\\varepsilon_t\\).\n\\(y_t \\sim ARMA_{12}(1, 1):\\;\\;y_t = c  + \\phi_{12} y_{t-12} + \\theta_{12} \\varepsilon_{t-12} + \\varepsilon_{t}\\) o \\((1 - \\phi_{12} L^{12})y_t = c + (1 + \\theta_{12} L^{12})\\varepsilon_t\\).\n\n\n\nSimulación de un proceso \\(ARMA_m(P,Q)\\)\nLa Figura 3 muestra una simulación de tamaño 500 para el proceso \\(ARMA_7(1,1)\\) \\(y_t = 0.7y_{t-7} - 0.5\\varepsilon_{t-7} + \\varepsilon_t\\).\n\n\n\n\n\n\n\n\nFigura 3: Simulación de un proceso ARMA(1,1) estacional con m = 7"
  },
  {
    "objectID": "03-05-Tema5.html#procesos-arima_mpdq",
    "href": "03-05-Tema5.html#procesos-arima_mpdq",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "2.4 Procesos \\(ARIMA_m(P,D,Q)\\)",
    "text": "2.4 Procesos \\(ARIMA_m(P,D,Q)\\)\nSi la serie \\(y_t\\) no es estacionaria en su parte estacional, pero tras diferenciarla \\(D\\) veces se hace estacionaria, diremos que la serie es integrada estacionalmente de orden \\(D\\): \\(y_t \\sim I_m(D)\\). Por tanto,\n\nuna serie estacionaria estacionalmente se indicará como \\(y_t \\sim I_m(0)\\).\n\\(y_t \\sim I_m(1)\\) es equivalente a \\(\\nabla_m y_t = (1 - L^m)y_t \\sim I_m(0)\\)\n\nUna serie \\(y_t\\) sigue un proceso \\(ARIMA_m(P,D,Q)\\) si:\n\nhay que diferenciarla estacionalmente \\(D\\) veces para hacerla estacionaria, \\(y_t \\sim I_m(D)\\); y\nla serie diferenciada sigue un proceso ARMA(P, Q), \\(\\nabla_m^D y_t \\sim ARMA_m(P,Q)\\).\n\nEntonces, podemos escribir \\(y_t \\sim ARIMA_m(P,D,Q)\\) como \\[\\begin{equation*}\n\\begin{array}{c@{\\quad}ccc}\n  (1 - \\phi_m L^m - \\ldots - \\phi_{Pm} L^{Pm}) & (1- L^m)^D y_t & = & c + (1 + \\theta_m L^m + \\ldots + \\theta_{Qm} L^{Qm}) \\varepsilon_t \\\\\n  \\uparrow                                     & \\uparrow       &   & \\uparrow \\\\\n   AR_m(P)                                     & I_m(D)         &   & MA_m(Q)\n\\end{array}\n\\end{equation*}\\]\n\nEjemplo\n\n\\(y_t \\sim ARIMA_{12}(1, 1, 1)\\): \\[\n\\begin{aligned}\n(1 - \\phi_{12} L^{12})(1- L^{12}) y_t & = c + (1 + \\theta_{12} L^{12}) \\varepsilon_t \\\\\ny_t & = c + y_{t-12} + \\phi_{12}(y_{t-12} - y_{t-24}) + \\theta_{12} \\varepsilon_{t-12} + \\varepsilon_t\n\\end{aligned}\n\\]\n\\(log(y_t) \\sim ARIMA_{12}(1, 1, 1)\\): \\[\n\\begin{aligned}\n(1 - \\phi_{12} L^{12})(1- L^{12}) log(y_t) & = (1 - \\phi_{12} L^{12})TVAy_t  = c + (1 + \\theta_{12} L^{12}) \\varepsilon_t \\\\\nTVAy_t & = c + \\phi_{12}TVAy_{t-12} + \\theta_{12} \\varepsilon_{t-12} + \\varepsilon_t\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "03-05-Tema5.html#proceso-arima_mpdqpdq",
    "href": "03-05-Tema5.html#proceso-arima_mpdqpdq",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "2.5 Proceso \\(ARIMA_m(p,d,q)(P,D,Q)\\)",
    "text": "2.5 Proceso \\(ARIMA_m(p,d,q)(P,D,Q)\\)\nLa realidad nos muestra que la mayoría de las series con estacionalidad se ajustan a una combinación de *procesos regulares y estacionales_.\nEl proceso \\(ARIMA_m(p, d, q)(P, D, Q)\\) puede ser expresado de forma abreviada como \\[\\Phi_p(L)\\Phi_P(L^m)\\nabla^d\\nabla_m^D  y_t = c + \\Theta_q(L)\\Theta_Q(L^m)\\varepsilon_t,\\]\no menos sucintamente como \\[\\begin{equation*}\n\\begin{array}{ccccc}\n  AR(p) & AR_m(P) & I(d) & I_m(D) &  \\\\\n  \\downarrow & \\downarrow & \\downarrow & \\downarrow  &  \\\\\n  (1 - \\phi_1 L - \\ldots - \\phi_p L^p) & (1 - \\phi_m L^m - \\ldots - \\phi_{Pm} L^{Pm}) & (1 - L)^d & (1- L^m)^Dy_t & = \\\\\n  c + (1 + \\theta_1 L + \\ldots + \\theta_q L^q) & (1 + \\theta_m L^m + \\ldots + \\theta_{Qm} L^{Qm}) \\varepsilon_t & & & \\\\\n  \\uparrow & \\uparrow & & & \\\\\n  MA(q) & MA_m(Q)  & & &\n\\end{array}\n\\end{equation*}\\]\nPor ejemplo, entre las series mensuales uno de los procesos más comunes es \\(ARIMA_{12}(0, 1, 1)(0, 1, 1)\\), denominado modelo de las aerolíneas por ser el proceso generador de datos de muchas series mensuales de transporte de pasajeros, en concreto la serie mensual de pasajeros de avión. La ecuación de este modelo es\n\\[(1-L)(1-L^{12})y_t = (1+ \\theta_1L)(1 + \\theta_{12}L^{12})\\varepsilon_t\\] que si desarrollamos queda \\[y_t = y_{t-1} + (y_{t-12} - y_{t-13}) + \\theta_1 \\varepsilon_{t-1} + \\theta_{12} \\varepsilon_{t-12} + \\theta_{1}\\theta_{12} \\varepsilon_{t-13} + \\varepsilon_t \\]\n\nEl número de pasajeros del mes \\(t\\) es el mismo que el del mes previo \\(t-1\\), más la diferencia entre estos meses observada el año pasado.\nSi en los meses usados para la predicción (\\(t-1\\), \\(t-12\\) y \\(t-13\\)) ha ocurrido algo extraordinario, hay que tenerlo en cuenta a la hora de afinar la predicción.\n\nSi usamos la transformación logarítmica, tendríamos \\[(1-L)(1-L^{12})\\log(y_t) = (1+ \\theta_1L)(1 + \\theta_{12}L^{12})\\varepsilon_t\\] o \\[(1-L)TVAy_t = (1+ \\theta_1L)(1 + \\theta_{12}L^{12})\\varepsilon_t\\] que desarrollando queda \\[TVAy_t = TVAy_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\theta_{12} \\varepsilon_{t-12} + \\theta_{1}\\theta_{12} \\varepsilon_{t-13} + \\varepsilon_t \\]\n\nLa tasa de variación anual en el número de pasajeros del mes \\(t\\) es la misma que la del mes previo \\(t-1\\).\nSi en los meses usados para la predicción (\\(t-1\\), \\(t-12\\) y \\(t-13\\)) ha ocurrido algo extraordinario, hay que tenerlo en cuenta a la hora de afinar la predicción.\n\n\nSimulaciones de un proceso \\(ARIMA_m(p,d,q)(P,D,Q)\\)\nLa Figura 4 muestra una simulación de tamaño 1000 para el modelo de las aerolíneas, donde se ha supuesto que \\(\\theta_1=0.7\\) y \\(\\theta_{12}=-0.5\\).\n\n\n\n\n\n\n\n\nFigura 4: Simulación del proceso de las aerolineas ARIMA(0, 1, 1)(0, 1, 1), m = 12"
  },
  {
    "objectID": "03-05-Tema5.html#nacimientos",
    "href": "03-05-Tema5.html#nacimientos",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "3.1 Nacimientos",
    "text": "3.1 Nacimientos\nVamos a aplicar la metodología de Box-Jenkins a la serie mensual de nacimientos en España desde el año 2000 (véase Figura 5).\n\nnacimientos &lt;- read.csv2(\"./series/nacimientos.csv\", \n                         header = TRUE)\n\nnacimientos &lt;- ts(nacimientos[, 2],\n                  start = c(1975, 1),\n                  freq = 12)\n\nnacimientos &lt;- window(nacimientos, start = 2000)\n\nautoplot(nacimientos,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 5: Nacimientos mensuales\n\n\n\n\n\n\nTransformación de la serie\nYa vimos en el Tema 3) que para que la serie sea estacionaria y ergódica había que diferenciarla tanto regular como estacionalmente (d = D = 1). Además, trabajaremos con el logaritmo de la serie para reducir la posible heterocedasticidad y ganar en interpretabilidad. Es decir, trabajaremos con la siguiente serie transformada\n\\[\\nabla\\nabla_{12}\\log(nacimientos_t) \\sim I(0)I_{12}(0).\\]\n\n\nIdentificación\nTras transformar la serie, vamos a identificar los valores de \\(p\\), \\(q\\), \\(P\\) y \\(Q\\) a partir de la FAC y la FACP.\n\nggtsdisplay(diff(diff(log(nacimientos), lag = 12)), lag = 48)\n\n\n\n\n\n\n\nFigura 6: Nacimientos mensuales\n\n\n\n\n\nAnalizando la FAC y la FACP (Figura 6) observamos que no es fácil la identificación.\n\n\n¿Qué nos indica auto.arima? Primero vamos a generar e incluir en el proceso de autoidentificación las variables asociadas a los efectos de intervención que hemos detectado en los temas previos. En concreto, hemos visto que el número de días del mes explica el número de nacimientos. Este efecto era muy claro para los meses de febrero bisiestos. Para el calculo de la variable que recoge el número de días del mes usaremos la función monthdays de la librería forecast que devuelve el número de días de cada mes o trimestre de una serie.\n\nmonthdays(nacimientos)\n\n\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2019  31  28  31  30  31  30  31  31  30  31  30  31\n2020  31  29  31  30  31  30  31  31  30  31  30  31\n2021  31  28  31  30  31  30  31  31  30  31  30  31\n2022  31  28  31  30  31  30  31  31  30  31  30  31\n2023  31  28  31  30  31  30  31  31  30  31  30  31\n\n\nPor otro lado, los periodos vacacionales pueden afectar la programación de las cesáreas e influir en el número de nacimientos. Como la Semana Santa es un periodo festivo que puede caer en marzo o abril, dependiendo del año, los nacimientos en estos dos meses pueden variar según como cae la Semana Santa. Para capturar este efecto, usaremos la función easter de la librería forecast que devuelve para cada mes la proporción de días de la Semana Santa que contiene (considerando solo del Viernes Santo al Domingo de Resurrección, tres días).\n\neaster(nacimientos)\n\n\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2019   0   0   0   1   0   0   0   0   0   0   0   0\n2020   0   0   0   1   0   0   0   0   0   0   0   0\n2021   0   0   0   1   0   0   0   0   0   0   0   0\n2022   0   0   0   1   0   0   0   0   0   0   0   0\n2023   0   0   0   1   0   0   0   0   0   0   0   0\n\n\nAdemás, vimos en el tema de alisado que en enero de 2011, diciembre de 2020 y febrero y marzo de 2021 el número de nacimientos era atípico.\n\nDiasMes &lt;- monthdays(nacimientos)\nSemanaSanta &lt;- easter(nacimientos)\nd0111 &lt;- 1*(cycle(nacimientos) == 1  & trunc(time(nacimientos)) == 2011)\nd1220 &lt;- 1*(cycle(nacimientos) == 12 & trunc(time(nacimientos)) == 2020)\nd0221 &lt;- 1*(cycle(nacimientos) == 2  & trunc(time(nacimientos)) == 2021)\nd0321 &lt;- 1*(cycle(nacimientos) == 3  & trunc(time(nacimientos)) == 2021)\n\nauto.arima(nacimientos, \n           d = 1, \n           D = 1, \n           lambda = 0,\n           xreg = cbind(DiasMes, SemanaSanta, d0111, d1220, d0221, d0321))\n\nSeries: nacimientos \nRegression with ARIMA(0,1,2)(0,1,2)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1      ma2     sma1     sma2  DiasMes  SemanaSanta    d0111\n      -0.3127  -0.1613  -0.7015  -0.1249   0.0266      -0.0173  -0.0772\ns.e.   0.0864   0.1012   0.0635   0.0627   0.0083       0.0050   0.0187\n        d1220   d0221   d0321\n      -0.0936  0.0468  0.0570\ns.e.   0.0221  0.0223  0.0226\n\nsigma^2 = 0.0005765:  log likelihood = 635.04\nAIC=-1248.07   AICc=-1247.07   BIC=-1208.29\n\n\nIndica el modelo, \\(ARIMA_{12}(0,1,2)(0,1,2)\\), donde los coeficiente ma2 y sma2 no parecen ser significativos. Si esto es así, estaríamos ante el modelo de la aerolíneas. Por otro lado, parece que los coeficientes del modelo asociados a las variables de intervención son significativas.\n\n\nUna alternativa a auto.arima es la función seas de la librería seasonal. La función seas tiene como ventajas que también analiza la conveniencia de usar la transformación logarítmica, que identifica posibles efectos calendario y valores extremos, y que suele ser más parsimoniosa que auto.arima. Su desventaja es que sólo se puede aplicar para series mensuales o trimestrales.\nLa aplicación de seas sobre la serie indica que no es necesaria la transformación logarítmica así que solicitamos la identificación automática forzando la transformación. Veamos que identificación ofrece seas:\n\n#summary(seas(nacimientos))\nsummary(seas(nacimientos, transform.function = \"log\"))\n\n\nCall:\nseas(x = nacimientos, transform.function = \"log\")\n\nCoefficients:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \nWeekday            0.0028341  0.0002676  10.589  &lt; 2e-16 ***\nEaster[1]         -0.0132747  0.0039909  -3.326  0.00088 ***\nAO2010.Dec         0.0655881  0.0141737   4.627 3.70e-06 ***\nAO2020.Nov        -0.0656768  0.0153456  -4.280 1.87e-05 ***\nAO2020.Dec        -0.2016273  0.0159295 -12.657  &lt; 2e-16 ***\nAO2021.Jan        -0.1568422  0.0154818 -10.131  &lt; 2e-16 ***\nMA-Nonseasonal-01  0.4250414  0.0541258   7.853 4.07e-15 ***\nMA-Seasonal-12     0.7584950  0.0413099  18.361  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSEATS adj.  ARIMA: (0 1 1)(0 1 1)  Obs.: 288  Transform: log\nAICc:  4348, BIC:  4380  QS (no seasonality in final):    0  \nBox-Ljung (no autocorr.): 25.18   Shapiro (normality): 0.9913 .\n\n\nEn primer lugar, la función identifica el modelo de las aerolíneas con la transformación logarítmica de Nacimientos. Además, un efecto calendario Semana Santa, un efecto calendario días laborables del mes (que podemos entender similar a nuestro efecto días del mes) y cuatro meses atípicos en diciembre de 2010, noviembre y diciembre de 2020 y enero de 2021.\nTras las dos autoidentificaciones complementarias, decidimos que la identificación de partida es \\(ARIMA_{12}(0,1,1)(0,1,1) + AI\\), \\[(1 - L)(1 - L^{12})\\log(nacimientos_t) = (1 + \\theta_1 L)(1 + \\theta_{12} L^{12})\\varepsilon_t + AI.\\] donde AI recoge las variables de intervención incluidas en auto.arima y seas.\n\n\nEstimación (y valores extremos)\nVamos a estimar el modelo identificado, incluidas las nuevas variables de intervención identificadas con la función seas.\n\nd1210 &lt;- 1*(cycle(nacimientos) == 12 & trunc(time(nacimientos)) == 2010)\nd1120 &lt;- 1*(cycle(nacimientos) == 11 & trunc(time(nacimientos)) == 2020)\nd0121 &lt;- 1*(cycle(nacimientos) ==  1 & trunc(time(nacimientos)) == 2021)\n\nnac.ar1 &lt;- Arima(nacimientos, \n                 order = c(0, 1, 1),\n                 seasonal = c(0, 1, 1),\n                 lambda = 0,\n                 xreg = cbind(DiasMes, SemanaSanta, \n                              d1210,  d0111, d1120, d1220, d0121, d0221, d0321)) \nnac.ar1\n\nSeries: nacimientos \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasMes  SemanaSanta   d1210    d0111    d1120    d1220\n      -0.5569  -0.7506   0.0293      -0.0167  0.0664  -0.0533  -0.0831  -0.2060\ns.e.   0.0513   0.0408   0.0075       0.0050  0.0171   0.0171   0.0178   0.0185\n        d0121    d0221   d0321\n      -0.1880  -0.0542  0.0229\ns.e.   0.0188   0.0187  0.0180\n\nsigma^2 = 0.0004212:  log likelihood = 680.41\nAIC=-1336.83   AICc=-1335.63   BIC=-1293.42\n\n\nYa tenemos un modelo de partida, aunque parece que el coeficiente de la intervención en marzo de 2021 no es significativo. Veamos si es necesaria más intervención.\n\nerror &lt;- residuals(nac.ar1)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2,2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(2000, 2024, 2)) \n\nfechas &lt;- format(seq(as.Date(\"2000-1-1\"), as.Date(\"2023-12-1\"), \"month\"), \"%Y-%m\")\nfechas[abs(error) &gt; 2.5 * sderror]\n\n[1] \"2006-12\" \"2016-04\" \"2016-06\" \"2022-11\"\n\n\n\n\n\n\n\n\nFigura 7: Error + Intervención\n\n\n\n\n\nSe observa que hay cuatro candidatos a valores atípicos en diciembre de 2006, abril y junio de 2016 y noviembre de 2022, dado que los errores asociados se acercan o superan las 3 desviaciones típicas. En junio de 2016 no hay evidencia de que ocurriera nada atípico en los nacimientos y el coeficiente de esta variable resulta no ser significativo si lo incluimos en el modelo. Por tanto, no crearemos una variable asociada a este mes. Para los otros tres meses:\n\nSe crea una variable de intervención para cada caso\nSe estima de nuevo el modelo incluyendo estas variables (auto.arima identifica el mismo modelo).\nSe vuelve a analizar si quedan valores atípicos\n\nAdemás, aprovechamos para excluir la variable de intervención de marzo de 2021 que no era significativa\n\nd1206 &lt;- 1*(cycle(nacimientos) == 12 & trunc(time(nacimientos)) == 2006)\nd0416 &lt;- 1*(cycle(nacimientos) ==  4 & trunc(time(nacimientos)) == 2016)\nd1122 &lt;- 1*(cycle(nacimientos) == 11 & trunc(time(nacimientos)) == 2022)\n\nnac.ar2 &lt;- Arima(nacimientos, \n                 order = c(0, 1, 1),\n                 seasonal = c(0, 1, 1),\n                 lambda = 0,\n                 xreg = cbind(DiasMes, SemanaSanta, \n                              d1206, d1210, d0111, d0416,\n                              d1120, d1220, d0121, d0221, d1122))\nnac.ar2\n\nSeries: nacimientos \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasMes  SemanaSanta    d1206   d1210    d0111    d0416\n      -0.5125  -0.7599   0.0279      -0.0222  -0.0460  0.0621  -0.0547  -0.0542\ns.e.   0.0550   0.0398   0.0071       0.0050   0.0158  0.0164   0.0163   0.0165\n        d1120    d1220    d0121    d0221   d1122\n      -0.0799  -0.2101  -0.1939  -0.0620  0.0404\ns.e.   0.0171   0.0176   0.0177   0.0172  0.0165\n\nsigma^2 = 0.0003917:  log likelihood = 691.41\nAIC=-1354.83   AICc=-1353.21   BIC=-1304.19\n\nerror &lt;- residuals(nac.ar2)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(2000, 2022, 2)) \n\n# fechas[abs(error) &gt; 2.5 * sderror]\n\n\n\n\n\n\n\nFigura 8: Error + Intervención\n\n\n\n\n\nNo se observan errores elevados, así que vamos a asumir que ya no hay valores extremos.\n\n\nCompensación\nPodemos observar que en todos los modelos estimados los coeficientes de las variables de intervención de los meses consecutivos diciembre de 2010 y enero de 2011 son similares pero de signo opuesto. A este tipo de intervención se le denomina compensación: el efecto extraordinario en un periodo se compensa con un efecto de similar magnitud pero signo opuesto en el periodo siguiente. La causa detrás de esta compensación puede ser tan prosaica como que por error muchos nacimientos ocurridos en enero de 2011 se asignaron informaticamente a diciembre de 2010. O quizás algo pasó en esos meses que adelantó un número considerable de nacimientos.\nVamos a crear una variable de intervención asociada a esta compensación. Es tan sencillo como definir una variable ficticia que valga cero siempre excepto para los meses de diciembre de 2010 y enero de 2011 que valdrá 1 y - 1 respectivamente.\n\n# Creacion del la compensacion\nd12100111 &lt;- d1210 - d0111\n\nRespecto del efecto de la pandemia en la serie, las dos intervenciones asociadas al inicio y final del efecto (noviembre de 2020 y febrero de 2021) tienen un valor similar, y las dos intervenciones asociadas al corazón del efecto (diciembre de 2020 y enero de 2021) también tienen un valor parecido. En este caso las dos variables ficticias que vamos a crear deben valer cero siempre excepto para dos meses que valdrán 1. La primera variable valdrá 1 en noviembre de 2020 y febrero de 2021, y la segunda variable valdrá 1 en diciembre de 2020 y enero de 2021.\n\n# Variables de intervencion asociadas a la Covid-19\nd11200221 &lt;- d1120 + d0221\nd12200121 &lt;- d1220 + d0121\n\nAhora vamos a sustituir las seis variables ficticias d1210, d0111, d1120, d1220, d0121 y d0221 del modelo por las nuevas variables d12100111, d11200221 y d12200121.\n\nnac.ar3 &lt;- Arima(nacimientos, \n                 order = c(0, 1, 1),\n                 seasonal = c(0, 1, 1),\n                 lambda = 0,\n                 xreg = cbind(DiasMes, SemanaSanta, \n                              d1206, d12100111, d0416,\n                              d11200221, d12200121, d1122))\n\nnac.ar3\n\nSeries: nacimientos \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasMes  SemanaSanta    d1206  d12100111    d0416\n      -0.5063  -0.7607   0.0276      -0.0221  -0.0462     0.0584  -0.0541\ns.e.   0.0546   0.0399   0.0071       0.0050   0.0158     0.0099   0.0165\n      d11200221  d12200121   d1122\n        -0.0710    -0.2022  0.0418\ns.e.     0.0131     0.0145  0.0164\n\nsigma^2 = 0.000389:  log likelihood = 690.79\nAIC=-1359.59   AICc=-1358.58   BIC=-1319.8\n\n\nLos coeficientes estimados en este modelo son prácticamente iguales a los obtenidos en el modelo previo.\n\n\nValidación\nCoeficientes \nVeamos si todos los coeficientes del modelo son significativos.\n\ncoeftest(nac.ar3)\n\n\nz test of coefficients:\n\n              Estimate Std. Error  z value  Pr(&gt;|z|)    \nma1         -0.5062827  0.0545897  -9.2743 &lt; 2.2e-16 ***\nsma1        -0.7606907  0.0398969 -19.0664 &lt; 2.2e-16 ***\nDiasMes      0.0275858  0.0071012   3.8847 0.0001025 ***\nSemanaSanta -0.0221422  0.0049579  -4.4661 7.967e-06 ***\nd1206       -0.0462432  0.0157747  -2.9315 0.0033735 ** \nd12100111    0.0584458  0.0099443   5.8773 4.170e-09 ***\nd0416       -0.0541083  0.0165482  -3.2697 0.0010765 ** \nd11200221   -0.0710234  0.0130601  -5.4382 5.383e-08 ***\nd12200121   -0.2021734  0.0144820 -13.9604 &lt; 2.2e-16 ***\nd1122        0.0418207  0.0163895   2.5517 0.0107204 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nTodos los coeficientes son significativos.\nError de estimación\nEl error medio de -61, muy bajo en comparación con el valor medio de la serie, y el MPE de -0.17 indican que no hay sesgo. Además, el valor tan reducido de ACF1 indica que las previsiones por intervalo estarán correctamente calculadas.\nEn media nos equivocamos en 683 nacimientos (RMSE) y el error porcentual medio es del 1.5%.\n\naccuracy(nac.ar3)\n\n\n\n                 ME   RMSE    MAE   MPE MAPE MASE ACF1\nTraining set -60.62 682.74 547.63 -0.17 1.54  0.4 0.03\n\n\n\n\nIncorrelación, Homocedasticidad y Normalidad\nVeamos ahora si el residuo es ruido blanco.\n\nerror &lt;- residuals(nac.ar3)\nBox.test(error, lag = 2,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 0.78452, df = 2, p-value = 0.6755\n\nBox.test(error, lag = 24,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 132.12, df = 24, p-value &lt; 2.2e-16\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 1.0117, df = 2, p-value = 0.603\n\nBox.test(error^2, lag = 24, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 23.442, df = 24, p-value = 0.4938\n\njarque.bera.test(error) \n\n\n    Jarque Bera Test\n\ndata:  error\nX-squared = 2.8201, df = 2, p-value = 0.2441\n\nggAcf(error, lag = 36, ylim = c(-0.3, 0.3), main = \"\")\n\n\n\n\n\n\n\nFigura 9: FAC del error del modelo\n\n\n\n\n\nClaramente hay autocorrelaciones significativas, pero en retardos no relevantes (véase Figura 9). El error muestra ser homocedástico y seguir una distribución normal.\n\n\nInterpretación\nEl modelo teórico es \\(log(nacimientos) \\sim ARIMA_{12}(0, 1, 1)(0, 1, 1) + AI\\),\n\\[(1 - L^{12})(1 - L)\\log(nacimientos_t) = (1 + \\theta_1 L)(1 + \\theta_{12} L^{12})\\varepsilon_t + AI.\\]\nSi sustituimos \\((1 - L^{12})\\log(nacimientos_t)\\) por \\(TVA_{nacimientos_t}\\), la tasa de variación anual de los nacimientos, y desarrollamos queda \\[\n\\begin{aligned}\nTVA\\_nac_t  = & TVA\\_nac_{t - 1} + \\theta_1 \\varepsilon_{t-1} + \\theta_{12} \\varepsilon_{t-12} + \\theta_1\\theta_{12} \\varepsilon_{t-13} +  \\varepsilon_{t}+ \\\\\n& \\gamma_1 \\cdot DiasMes_t + \\gamma_2 \\cdot SemanaSanta +\\gamma_3 \\cdot d1206_t + \\gamma_4 \\cdot d12100111_t + \\\\\n& \\gamma_5 \\cdot d0416_t + \\gamma_6 \\cdot d11200221_t + \\gamma_7 \\cdot d12200121_t + \\gamma_8 \\cdot d1122_t.\n\\end{aligned}\n\\]\nFinalmente, el modelo estimado es, \\[\n\\begin{aligned}\n\\widehat{TVA}\\_nac_t = & TVA\\_nac_{t-1}  - 0.51\\varepsilon_{t-1} - 0.76\\varepsilon_{t-12} + 0.39\\varepsilon_{t-13} + \\\\\n& 0.028 \\cdot DiasMes_t - 0.022 \\cdot SemanaSanta - 0.046 \\cdot d1206_t + 0.058 \\cdot d12100111_t \\\\\n& - 0.054 \\cdot d0416_t - 0.071 \\cdot d11200221_t - 0.20  \\cdot d12200121_t + 0.042 \\cdot d1122.\n\\end{aligned}\n\\]\n\nEn cada mes, la tasa de variación anual de los nacimientos es la misma que la del mes pasado (\\(\\widehat{TVA}\\_nac_t = TVA\\_nac_{t-1}\\)).\nAdemás, si algunos de los meses necesarios para predecir fue anómalo, el error hay que tenerlo en cuenta para afinar la previsión.\nRespecto de los efectos calendario, cada día adicional de un mes nacen un 2.8% más de bebés. El mes en que cae la Semana Santa los nacimientos caen un 2.2%.\nPor alguna razón, en diciembre de 2006 hubo un 4.6% menos de nacimientos de lo esperado; en diciembre de 2010 hubo un 5.8% más de nacimientos de lo esperado que fue compensado en enero de 2011; en abril de 2016 hubo un 5.4% menos de nacimientos de lo esperado; y en noviembre de 2022 hubo un 4.1% más de nacimientos.\nRespecto de la pandemia, nueve meses después del confinamiento hubo una reducción transitoria en el número de nacimientos. En concreto, en noviembre de 2020 se redujeron un 7.1% y en los dos meses siguientes la caída fue de un 20%. En febrero de 2021 los nacimientos se recuperaron parcialmente y la caída fue del 7.1%. A partir de marzo de 2021 los nacimientos recuperaron los valores prepandemia.\n\n\n\nPredicción de la serie\nUna vez dado por válido el modelo podemos pasar a realizar predicciones. Hay que tener en cuenta que hay siete variables de intervención, dos de ellas son efectos calendario (DiasMes y SemanaSanta), para las que debemos indicar qué valores tomarán en el periodo de predicción. Vamos a fijar el horizonte de predicción en cuatro años y mostrar los resultados numéricamente (solo para el primer año) y gráficamente (Figura 10).\n\ntmp &lt;- ts(rep(0, 48), start = 2024, freq = 12)\npdm &lt;- monthdays(tmp)\npss &lt;- easter(tmp)\npnac.ar3 &lt;- forecast(nac.ar3, \n                     h = 48,\n                     xreg = cbind(pdm, pss, \n                                  rep(0,48), rep(0,48), rep(0,48),\n                                  rep(0,48), rep(0,48), rep(0,48)), \n                     level = 95)\npnac.ar3\n\n\n\n         Point Forecast    Lo 95    Hi 95\nJan 2024       27053.45 26027.68 28119.66\nFeb 2024       24871.69 23822.29 25967.32\nMar 2024       25954.92 24759.70 27207.85\nApr 2024       25592.81 24323.70 26928.14\nMay 2024       26130.96 24749.32 27589.73\nJun 2024       25986.39 24532.41 27526.53\nJul 2024       27707.00 26076.31 29439.67\nAug 2024       27722.56 26014.58 29542.67\nSep 2024       27547.83 25778.28 29438.85\nOct 2024       28022.05 26151.64 30026.24\nNov 2024       26577.70 24739.60 28552.38\nDec 2024       26502.57 24608.13 28542.85\n\n\n\nautoplot(pnac.ar3, \n     ylab = \"Nacimientos\",\n     main = \"\") +\n  scale_x_continuous(breaks= seq(2000, 2028, 2)) \n\n\n\n\n\n\n\nFigura 10: Nacimientos (2000-2023) y predicción (2024-2027)\n\n\n\n\n\n\n\nError de predicción extra-muestral según horizonte temporal\nAsumimos que se precisan quince años para hacer una buena estimación, \\(k = 180\\), y fijaremos el horizonte temporal en un año, \\(h = 12\\) meses.\nEl código es aun más complejo que el visto en el tema previo. Por un lado, hemos de tener en cuenta que hay variables de intervención y por otro lado que la función Arima podría fallar en el proceso de estimación.\n\nk &lt;- 180                   \nh &lt;- 12                    \nT &lt;- length(nacimientos)   \ns&lt;-T - k - h               \n\nmapeArima &lt;- matrix(NA, s + 1, h)\n\nX &lt;- data.frame(cbind(DiasMes, SemanaSanta))\n\nfor (i in 0:s) {\n  train.set &lt;- subset(nacimientos, start = i + 1, end = i + k)\n  test.set &lt;-  subset(nacimientos, start = i + k + 1, end = i + k + h) \n  \n  X.train &lt;- as.matrix(X[(i + 1):(i + k),])\n  X.test &lt;- as.matrix(X[(i + k + 1):(i + k + h),])\n  \n  fit &lt;- try(Arima(train.set, \n                   order = c(0, 1, 1),\n                   seasonal = c(0, 1, 1),\n                   lambda = 0,\n                   xreg = X.train))\n  \n  if(!is.element(\"try-error\", class(fit))) {\n    fcast &lt;- forecast(fit, h = h, xreg = X.test) \n    mapeArima[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n  }\n}\n\nComo para el cálculo de los errores de predicción no se ha tenido en cuenta la intervención no sujeta a afectos calendario (la compensación a finales de 2010, la Covid-19…), vamos a obtener el error mediano como medida de precisión.\n\nerrorArima &lt;- apply(mapeArima, MARGIN = 2, FUN = median, na.rm = TRUE)\nerrorArima\n\n [1] 1.407992 1.400730 1.686976 1.778348 1.750788 1.571241 1.977455 1.962138\n [9] 2.122341 2.116743 1.740723 2.068629\n\n\n\nggplot() +\n  geom_line(aes(x = 1:12, y = errorArima), colour = \"Blue\") +\n  ggtitle(\"\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"%\") +\n  scale_x_continuous(breaks= 1:12)\n\n\n\n\n\n\n\nFigura 11: Error de predicción (MedAPE) según horizonte temporal\n\n\n\n\n\nLa Figura 11 revela que el error de predicción aumenta según aumenta el horizonte de predicción, pero incluso a un año vista, se mantiene cercano al 2%."
  },
  {
    "objectID": "03-05-Tema5.html#exportaciones",
    "href": "03-05-Tema5.html#exportaciones",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "3.2 Exportaciones",
    "text": "3.2 Exportaciones\nConsideremos las serie de exportaciones de bienes desde España hacía la UE27 (conjunto de 27 países de la Unión Europea, con Reino Unido ya ha excluido). La serie va de enero de 1999 hasta diciembre de 2023 y está en millones de euros.\n\nexportaciones &lt;- read.csv2(\"./series/Exportaciones.csv\", \n                           header = TRUE)\n\nexportaciones &lt;- ts(exportaciones,\n                    start = c(1999, 1),\n                    freq = 12)\n\nautoplot(exportaciones,\n         xlab = \"\",\n         ylab = \"Millones de €\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 12: Exportaciones de España a la EU27\n\n\n\n\n\n\nTransformación de la serie\nLa Figura 12 deja claro que la serie debe ser diferenciada para ser estacionaria. También muestra dos periodos con una marcada intervención: al inicio de la Gran Recesión (2008-2014) y durante el periodo más duro de la Covid-19 en el año 2020. Además, por la naturaleza de la serie es previsible que exista un efecto días del mes o días laborables y un efecto Semana Santa.\nPor otro lado, la Figura 12 muestra que la serie tiene un esquema multiplicativa, así que trabajaremos con la transformación logarítmica.\n\nggAcf(log(exportaciones), lag = 48, ylim = c(-1, 1),\n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(log(exportaciones)), lag = 48, ylim = c(-1, 1),\n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(log(exportaciones), lag = 12), lag = 48, ylim = c(-1, 1),\n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(diff(log(exportaciones), lag = 12)), lag = 48, ylim = c(-1, 1),\n      xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Serie\n\n\n\n\n\n\n\n\n\n\n\n(b) Diferencia regular\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Diferencia estacional\n\n\n\n\n\n\n\n\n\n\n\n(d) Diferencia regular y estacional\n\n\n\n\n\n\n\nFigura 13: FAC para Exportaciones (log)\n\n\n\n\n\nndiffs(log(exportaciones))\n\n[1] 1\n\nnsdiffs(log(exportaciones))       \n\n[1] 1\n\n\nEl análisis de la Figura 13 revela la necesidad de la doble diferenciación, que es confirmada por las funciones ndiffs y nsdiffs. Concluimos que para que la serie sea estacionaria y ergódica es necesaria la doble diferenciación regular y estacional. Es decir, trabajaremos con la siguiente serie transformada \\[\\nabla\\nabla_{12}\\log(exportaciones_t) \\sim I(0)I_{12}(0).\\]\n\n\nIdentificación\nSi probamos con la función auto.arima, indicando la doble diferenciación y añadiendo el efecto de los días del mes y la Semana Santa, nos sugiere \\(ARIMA_{12}(2,1,2)(2,1,2)\\). Demasiado complejo.\nVeamos qué nos indica seas.\n\nsummary(seas(exportaciones))\n\n\nCall:\nseas(x = exportaciones)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \nMon               -0.0002753  0.0036983  -0.074 0.940664    \nTue                0.0140569  0.0036324   3.870 0.000109 ***\nWed                0.0091676  0.0036440   2.516 0.011876 *  \nThu                0.0094801  0.0036551   2.594 0.009495 ** \nFri                0.0131957  0.0036349   3.630 0.000283 ***\nSat               -0.0187370  0.0036035  -5.200 2.00e-07 ***\nEaster[1]         -0.0678310  0.0075546  -8.979  &lt; 2e-16 ***\nLS2008.Dec        -0.1891898  0.0292510  -6.468 9.94e-11 ***\nAO2020.Mar        -0.1694793  0.0292773  -5.789 7.09e-09 ***\nAO2020.Apr        -0.5021644  0.0304350 -16.500  &lt; 2e-16 ***\nAO2020.May        -0.2740737  0.0292955  -9.356  &lt; 2e-16 ***\nLS2023.Apr        -0.1323508  0.0325300  -4.069 4.73e-05 ***\nMA-Nonseasonal-01  0.4091021  0.0531795   7.693 1.44e-14 ***\nMA-Seasonal-12     0.6302998  0.0456916  13.795  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSEATS adj.  ARIMA: (0 1 1)(0 1 1)  Obs.: 300  Transform: log\nAICc:  4270, BIC:  4324  QS (no seasonality in final):    0  \nBox-Ljung (no autocorr.): 40.16 * Shapiro (normality): 0.996  \nMessages generated by X-13:\nWarnings:\n- At least one visually significant trading day peak has been\n  found in one or more of the estimated spectra.\n\n\nEl modelo identificado es el de las aerolíneas para la transformación logarítmica de Exportaciones. Respecto de la intervención, identifica dos efectos calendario: uno por cada día laboral y Semana Santa. También se identifican cinco intervenciones no asociadas a efectos calendario: tres pulsos –intervenciones que afectan un solo mes (AO)– y dos cambios permanentes –intervenciones que afectan todos los meses a partir de uno dado (LS):\n\nUn cambio permanente (level shift o LS) empieza en diciembre de 2008 y el coeficiente estimado es negativo. Es decir, la Gran Recesión generó una caída permanente de las exportaciones españolas a la UE27.\nEl otro cambio permanente, también de signo negativo, empieza en abril de 2023 y corrige a la baja el elevado nivel de las exportaciones observado tras la pandemia.\nTambién asociado a la Covid-19 están los pulsos de marzo, abril y mayo de 2020.\n\n\n\nEstimación (y valores extremos)\nVamos a estimar el modelo identificado con seas, incluidas las variables de intervención. A este respecto unas palabras sobre como obtener los días laborables de un mes.\nEntenderemos por días laborables los lunes a viernes de cada mes, menos los días festivos. Un inconveniente de este efecto es que los festivos que afectan a una serie dependen de su naturaleza y ámbito geográfico. Por ejemplo, en Estados Unidos el día del trabajador se celebra el primer lunes de septiembre, en Reino Unido el primer lunes de mayo y en España el 1 de mayo. Además, para la serie de transporte de pasajeros urbanos de Valencia los festivos relevantes serán diferentes que para la misma serie para Madrid.\nPara el ámbito geográfico nacional, los días laborables se puede obtener con la función bizdays. Esta función devuelve el número de días laborables de cada mes para determinados centros financieros (equivalentes a países). Por proximidad geográfica, usaremos el calendario de Londres para España.1\n\nDiasLaborables &lt;- bizdays(exportaciones, FinCenter = \"London\")\nSemanaSanta &lt;- easter(exportaciones)\n\nPara los pulsos, que solo afectan un mes, se crea una variable que vale cero excepto para el mes a intervenir que vale 1.\n\nd0320 &lt;- 1*(cycle(exportaciones) ==  3 & trunc(time(exportaciones)) == 2020)\nd0420 &lt;- 1*(cycle(exportaciones) ==  4 & trunc(time(exportaciones)) == 2020)\nd0520 &lt;- 1*(cycle(exportaciones) ==  5 & trunc(time(exportaciones)) == 2020)\n\nPara los cambios permanentes que afectan desde un mes en adelante, se crea una variable que vale cero antes del mes de inicio de la intervención y 1 desde ese mes en adelante.\n\nl1208 &lt;- 1*(trunc(time(exportaciones)) &gt; 2008) + \n  1*(cycle(exportaciones) &gt;= 12 & trunc(time(exportaciones)) == 2008)\n\nl0423 &lt;- 1*(trunc(time(exportaciones)) &gt; 2023) + \n  1*(cycle(exportaciones) &gt;= 4 & trunc(time(exportaciones)) == 2023)\n\nEstimamos el modelo de partida, en el que parece que todos los coeficientes son significativos.\n\nexp.ar1 &lt;- Arima(exportaciones, \n                 order = c(0, 1, 1),\n                 seasonal = c(0, 1, 1),\n                 lambda = 0,\n                 xreg = cbind(DiasLaborables, SemanaSanta, \n                              l1208, d0320, d0420, d0520, l0423))\nexp.ar1\n\nSeries: exportaciones \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasLaborables  SemanaSanta    l1208    d0320    d0420\n      -0.4580  -0.6519          0.0315      -0.0206  -0.1956  -0.1822  -0.5051\ns.e.   0.0491   0.0516          0.0018       0.0093   0.0307   0.0314   0.0325\n        d0520    l0423\n      -0.2672  -0.1277\ns.e.   0.0318   0.0341\n\nsigma^2 = 0.001465:  log likelihood = 530.59\nAIC=-1041.19   AICc=-1040.39   BIC=-1004.59\n\n\nVeamos si es necesaria más intervención.\n\nerror &lt;- residuals(exp.ar1)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2,2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(1998, 2022, 2)) \n\nfechas &lt;- format(seq(as.Date(\"1999-1-1\"), as.Date(\"2023-12-1\"), \"month\"), \"%Y-%m\")\nfechas[abs(error) &gt; 2.5 * sderror]\n\n[1] \"2008-10\" \"2010-06\" \"2012-06\" \"2013-08\" \"2020-06\"\n\n\n\n\n\n\n\n\nFigura 14: Error + Intervención\n\n\n\n\n\nSe observan algunos candidatos a valores atípicos por superar el error las 2.5 desviaciones típicas, pero ninguna alcanza las 3 desviaciones típicas. A fin de aligerar este ejemplo no se van a incluir más variables de intervención.\n\n\nValidación\nCoeficientes significativos\nVeamos si los coeficientes del modelo son significativos. Para ello, aplicamos la prueba z.\n\ncoeftest(exp.ar1)\n\n\nz test of coefficients:\n\n                 Estimate Std. Error  z value  Pr(&gt;|z|)    \nma1            -0.4580059  0.0490920  -9.3295 &lt; 2.2e-16 ***\nsma1           -0.6518852  0.0515779 -12.6389 &lt; 2.2e-16 ***\nDiasLaborables  0.0314654  0.0018045  17.4371 &lt; 2.2e-16 ***\nSemanaSanta    -0.0206082  0.0092680  -2.2236 0.0261758 *  \nl1208          -0.1956032  0.0306802  -6.3755 1.823e-10 ***\nd0320          -0.1822087  0.0313723  -5.8080 6.324e-09 ***\nd0420          -0.5050739  0.0324815 -15.5496 &lt; 2.2e-16 ***\nd0520          -0.2672099  0.0317877  -8.4061 &lt; 2.2e-16 ***\nl0423          -0.1276646  0.0341494  -3.7384 0.0001852 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nTodos los coeficientes son significativos.\nError de estimación\nEn media nos equivocamos en 456 millones de euros (RMSE) y el error porcentual medio es del 2.8%, muy reducido.\nLa serie no presenta sesgo y el intervalo de confianza para las predicciones es válido.\n\naccuracy(exp.ar1)\n\n\n\n                 ME   RMSE    MAE   MPE MAPE MASE  ACF1\nTraining set -10.34 456.31 327.43 -0.25 2.82  0.3 -0.04\n\n\n\n\nIncorrelación, Homocedasticidad y Normalidad\nVeamos ahora si el residuo es ruido blanco.\n\nBox.test(error, lag = 2,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 0.18245, df = 2, p-value = 0.9128\n\nBox.test(error, lag = 24,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 31.964, df = 24, p-value = 0.1279\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 4.9902, df = 2, p-value = 0.08249\n\nBox.test(error^2, lag = 24, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 65.098, df = 24, p-value = 1.178e-05\n\njarque.bera.test(error) \n\n\n    Jarque Bera Test\n\ndata:  error\nX-squared = 1.375, df = 2, p-value = 0.5028\n\n\nEl error muestra ser incorrelado y seguir una distribución normal. Sin embargo, el error es heterocedástico. Es posible que un análisis más detallado de la intervención corrija este problema. Si no es así, habría que optar por un modelo que no asuma la hipótesis de homocedasticidad.\n\n\nError de predicción extra-muestral según horizonte temporal\nAsumimos que se precisan diez años para hacer una buena estimación, \\(k = 120\\), y fijaremos el horizonte temporal en un año, \\(h = 12\\) meses. Usaremos como criterio de calidad el MedAPE\n\nk &lt;- 120                   \nh &lt;- 12                    \nT &lt;- length(exportaciones)   \ns &lt;- T - k - h               \n\nmapeArima &lt;- matrix(NA, s + 1, h)\n\nX &lt;- data.frame(cbind(DiasLaborables, SemanaSanta))\n\nfor (i in 0:s) {\n  train.set &lt;- subset(exportaciones, start = i + 1, end = i + k)\n  test.set &lt;-  subset(exportaciones, start = i + k + 1, end = i + k + h) \n  \n  X.train &lt;- as.matrix(X[(i + 1):(i + k),])\n  X.test &lt;- as.matrix(X[(i + k + 1):(i + k + h),])\n  \n  fit &lt;- try(Arima(train.set, \n                   order = c(0, 1, 1),\n                   seasonal = c(0, 1, 1),\n                   lambda = 0,\n                   xreg = X.train))\n  \n  if(!is.element(\"try-error\", class(fit))) {\n    fcast &lt;- forecast(fit, h = h, xreg = X.test) \n    mapeArima[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n  }\n}\n\nerrorArima &lt;- apply(mapeArima, MARGIN = 2, FUN = median, na.rm = TRUE)\nerrorArima\n\n [1] 2.528064 2.604219 2.972136 3.220444 3.666207 4.098874 4.505794 4.770593\n [9] 4.935492 4.797301 4.768106 5.412510\n\n\nPara evitar el efecto sobre los errores de predicción de la no inclusión de las variables ficticias se ha calculado el error mediano. La Figura 15 revela que el error de predicción aumenta lentamente según aumenta el horizonte de predicción, pasando del 2.5% a un mes vista hasta el 5.4% a 12 meses vista.\n\nggplot() +\n  geom_line(aes(x = 1:12, y = errorArima), colour = \"Blue\") +\n  ggtitle(\"\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"%\") +\n  scale_x_continuous(breaks= 1:12)\n\n\n\n\n\n\n\nFigura 15: Error de predicción (MedAPE) según horizonte temporal\n\n\n\n\n\n\n\nInterpretación\nLa parte regular del modelo estimado es la misma que la obtenida para la serie Nacimientos y su interpretación es, por tanto, idéntica: en cada mes, la tasa de variación anual de las exportaciones es la misma que la del mes pasado. Además, si algunos de los meses necesarios para predecir fue anómalo, el error hay que tenerlo en cuenta para afinar la previsión.\nVamos por tanto a centrarnos en la interpretación de la intervención:\n\nCada día laborable adicional en un mes aumenta las exportaciones en un 3.1% (coeficiente \\(0.0315\\) de DiasLAborables)\nEl mes en que cae la Semana Santa las exportaciones caen un 2.1%. (coeficiente \\(-0.0206\\) de SemanaSanta)\nA raíz de la Gran Recesión, las exportaciones se redujeron de forma permanente un 19.6% desde diciembre de 2008. Es decir, sin la Gran Recesión, las exportaciones ahora serían un 19.6% superiores (coeficiente \\(-0.1956\\) de l1208)\nA raíz de la Covid-19, las exportaciones se redujeron de forma temporal en los meses de marzo, abril y mayo de 2020 un 18%, 51% y 27%, respectivamente.\nAdemás, el nivel de las exportaciones se ha corregido a la baja desde abril de 2023 un 12.8% (coeficiente \\(-0.1277\\) de l0423).\n\n\n\nPredicción de la serie\nUna vez dado por válido el modelo, podemos pasar a realizar predicciones teniendo en cuenta las siete variables de intervención:\n\nDos de ellas son efectos calendario (DiasLaborables y SemanaSanta), para las que debemos indicar qué valores tomarán en el periodo de predicción\nOtras dos son cambios permanentes y su valor debe ser 1 en el futuro.\nSolo para los pulsos, se fijará un valor futuro de 0.\n\nVamos a fijar el horizonte de predicción en cuatro años y mostrar los resultados numérica (solo para el primer año) y gráficamente (Figura 16).\nRecuerda siempre incluir las variables ficticias en la función forecast en el mismo orden que aparecen en la estimación con Arima.\n\ntmp &lt;- ts(rep(0, 48), start = 2024, freq = 12)\npdl &lt;- bizdays(tmp, FinCenter = \"London\")\npss &lt;- easter(tmp)\npexp.ar1 &lt;- forecast(exp.ar1, \n                     h = 48,\n                     xreg = cbind(pdl, pss, \n                                  rep(1,48), \n                                  rep(0,48), rep(0,48), rep(0,48),\n                                  rep(1,48)), \n                     level = 95)\npexp.ar1\n\n\n\n         Point Forecast    Lo 95    Hi 95\nJan 2024       20398.15 18923.71 21987.48\nFeb 2024       20935.60 19223.06 22800.71\nMar 2024       21820.13 19851.88 23983.51\nApr 2024       22452.95 20257.25 24886.64\nMay 2024       23319.37 20876.66 26047.89\nJun 2024       22484.03 19983.70 25297.19\nJul 2024       21850.14 19288.37 24752.14\nAug 2024       16463.85 14439.96 18771.40\nSep 2024       22737.88 19820.28 26084.96\nOct 2024       23111.43 20027.50 26670.24\nNov 2024       23491.95 20242.32 27263.27\nDec 2024       21372.59 18315.97 24939.31\n\n\n\nautoplot(pexp.ar1, \n         xlab = \"\",\n         ylab = \"Millones de euros\",\n         main = \"\",\n         PI = FALSE) +\n  scale_x_continuous(breaks= seq(1998, 2028, 2)) \n\n\n\n\n\n\n\nFigura 16: Exportaciones (1999-2023) y predicción (2024-2027)"
  },
  {
    "objectID": "03-05-Tema5.html#demanda-eléctrica",
    "href": "03-05-Tema5.html#demanda-eléctrica",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "3.3 Demanda eléctrica",
    "text": "3.3 Demanda eléctrica\nConsideremos las serie diaria de demanda eléctrica (GWh) en España durante 2023.\n\nelectricidad &lt;- read.csv(\"./series/Consumo electrico.csv\", \n                         header = TRUE)\n\nelectricidad &lt;- ts(electricidad[, 1],\n                   start = c(1, 7),\n                   frequency = 7)\n\nautoplot(electricidad,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 17: Demanda eléctrica en España en 2023\n\n\n\n\n\n\nTransformación de la serie\nEstrictamente hablando la serie no muestra tendencia, porque solo podemos observar un año. Sin embargo, se observan cambios de nivel en la demanda eléctrica que se pueden confundir con la presencia de tendencia, pero que realmente están asociados a los cambios de temperatura y el uso de los sistemas de climatización. Estos cambios de nivel se repiten cada año y se deberían incorporar en la estructura de la serie como una segunda componente estacional. Ahora bien, dado que solo se está analizando un año de la serie, vamos a asimilar los cambios de nivel a la presencia de tendencia y a considerar, por tanto, la serie como no estacionaria.\n\nggAcf(electricidad, lag = 42, ylim = c(-1, 1),\n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(electricidad), lag = 42, ylim = c(-1, 1),\n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(electricidad, lag = 7), lag = 42, ylim = c(-1, 1),\n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(diff(electricidad, lag = 7)), lag = 42, ylim = c(-1, 1),\n      xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Serie\n\n\n\n\n\n\n\n\n\n\n\n(b) Diferencia regular\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Diferencia estacional\n\n\n\n\n\n\n\n\n\n\n\n(d) Diferencia regular y estacional\n\n\n\n\n\n\n\nFigura 18: FAC para Electricidad\n\n\n\n\n\nndiffs(electricidad)\n\n[1] 0\n\nnsdiffs(electricidad)       \n\n[1] 1\n\n\nLa FAC muestra que para que la serie sea estacionaria y ergódica es necesaria la doble diferenciación regular y estacional, aunque la función ndiffs no indica que la diferenciación regular sea necesaria. Trabajaremos con la siguiente serie transformada \\[\\nabla\\nabla_{12}electricidad_t \\sim I(0)I_{12}(0).\\]\n\n\nIdentificación\nAntes de proceder con la primera autoidentifación, vamos a analizar que intervención puede ser necesaria para estimar y predecir adecuadamente la serie.\nEfectos calendario\nLa Figura 17 muestra días con una marcada intervención asociada a la caída de la demanda de electricidad los días festivo (véase el análisis de esta serie realizada en el Tema 2). Por ejemplo, destaca el bajo consumo el 1 de enero (primer dato de la serie), en Navidades o en Semana Santa (semana 14 del año).\nLa caída en el consumo dependerá del día de la semana. Es decir, cabe esperar que en un martes festivo la caída del consumo sea mayor que la de un domingo festivo porque en el segundo caso el consumo ya es de por si muy bajo.\nPor tanto, para realizar un análisis detallado de la serie vamos crear variables ficticias que identifiquen los días festivos del calendario. Además, vamos a distinguir si el festivo ha sido entre semana (de lunes a viernes), en sábado o en domingo.\nUn repaso por el calendario para el año 2023 nos indica que ningún festivo nacional2 ha caído en sábado así que solo podremos estimar el efecto de los festivos entre semana y en domingo sobre el consumo de electricidad.\nEl siguiente código hace todo el trabajo.\n\nLa primera línea crea una serie que identifica cada fecha del año 2023. La función seq devuelve un objeto date donde cada fecha no se guarda como un texto (aunque se muestre así) sino de una forma mas compleja.\nEn la segunda línea en el objeto fiestas identificamos los 13 días festivos del año: 12 fiestas nacionales y el lunes 10 de abril, festivo un muchas comunidades.\nEn estas dos primeras líneas, la función as.Date se usa para que R identifique una secuencia de caracteres como una fecha tipo “aaaa-mm-dd”.\nLa línea 3 genera una serie ficticia para identificar los festivos entre semana. Primero se identifican que fechas del año aparecen incluidas entre las fiestas (fechas %in% fiestas), generándose un vector booleano (TRUE/FALSE) de longitud 365. Luego se identifican que días del año han caído entre semana (cycle(electricidad) &lt; 6), generandose otro vector booleano de longitud 365. El producto de estos dos vectores solo valdrá 1 (TRUE) si simultáneamente una fecha es festiva y ha caído entre semana.\nLa linea 4 usa las mismas ideas para generar una serie ficticia que identifica los festivos en domingo.\n\n\nfechas &lt;- seq(as.Date(\"2023-1-1\"), as.Date(\"2023-12-31\"), \"day\")\n\nfiestas &lt;- as.Date(c(\"2023-01-01\", \"2023-01-02\", \"2023-01-06\", \n                     \"2023-04-06\", \"2023-04-07\", \"2023-04-10\", \n                     \"2023-05-01\", \"2023-08-15\", \"2023-10-12\", \"2023-11-01\", \n                     \"2023-12-06\", \"2023-12-08\", \"2023-12-25\"))\n\nfestivosEntreSemana &lt;- (fechas %in% fiestas) * (cycle(electricidad) &lt; 6)\nfestivosDomingo &lt;- (fechas %in% fiestas) * (cycle(electricidad) == 7)\n\nAl final el código nos devuelve dos variables ficticias: festivosEntreSemana valdrá 1 en la posición del año correspondiente a un día festivo entre semana y 0 en otro caso; festivosDomingo valdrá 1 en la posición del año correspondiente a un domingo festivo y 0 en otro caso.\nComo ningún festivo en 2023 cayó en sábado, no es posible estimar su efecto sobre el consumo eléctrico y no se ha creado la variable ficticia correspondiente.\nEfecto temperatura\nEl consumo de electricidad está fuertemente relacionado con la temperatura. En concreto, cuanto más se aleja la temperatura de un día de la media anual (por exceso de frío o de calor) mayor es el consumo eléctrico (véase la Figura 19).\n\ntemperatura &lt;- read.csv(\"./series/Temperatura.csv\")\ntemperatura &lt;- temperatura[, 1]\n\nexcesotemperatura &lt;- abs(temperatura - mean(temperatura))\n\nggplot() +\n  geom_point(aes(x = excesotemperatura, y = electricidad), size = 2) +\n  xlab(\"Exceso de temperatura (ºC)\") + \n  ylab(\"Demanda eléctrica (GWh)\")\n\n\n\n\n\n\n\nFigura 19: Relación entre exceso de temperatura y consumo eléctrico\n\n\n\n\n\nUsaremos la variable excesotemperatura como otra variable de intervencion.\nIdentificación\nSi probamos con la función auto.arima, indicando la doble diferenciación, los días festivos entre semana, los festivos en domingo y el exceso de temperatura.\n\nauto.arima(electricidad,\n           d = 1,\n           D = 1,\n           xreg = cbind(festivosEntreSemana, festivosDomingo, \n                        excesotemperatura))\n\nSeries: electricidad \nRegression with ARIMA(1,1,0)(1,1,0)[7] errors \n\nCoefficients:\n         ar1     sar1  festivosEntreSemana  festivosDomingo  excesotemperatura\n      0.0815  -0.5435             -72.7484         -80.0718             2.6936\ns.e.  0.0568   0.0492               3.1198          17.3091             0.4057\n\nsigma^2 = 283.7:  log likelihood = -1513.43\nAIC=3038.86   AICc=3039.1   BIC=3062.13\n\n\nEl modelo identificado es ARIMA(1, 1, 0)(1, 1, 0), pero el coeficiente del proceso AR(1) claramente no es significativo.\nRespecto de la intervención, las tres variables de intervención parece ser significativas. Además, el efecto estimado para los días festivos por las dos variables ficticias es muy similar. Parece que la caída del consumo eléctrico en un festivo no depende del día de la semana. Ojo, no estamos diciendo que un lunes festivo, por ejemplo, se consume lo mismo que un domingo festivo. Dado que un lunes no festivo se consume más que un domingo no festivo, si la caída asociada a festividad es la misma, el lunes festivo se seguirá consumiendo más que un domingo festivo. Por tanto, vamos a crear una única variable ficticia que identifique los festivos independientemente del día de la semana en que caen.\n\nfestivos &lt;- festivosEntreSemana + festivosDomingo\n\n\n\nEstimación (y valores extremos)\nEstimamos el modelo de partida, excluyendo el proceso AR(1).\n\nele.ar1 &lt;- Arima(electricidad, \n                 order = c(0, 1, 0),\n                 seasonal = c(1, 1, 0),\n                 xreg = cbind(festivos, excesotemperatura))\nele.ar1\n\nSeries: electricidad \nRegression with ARIMA(0,1,0)(1,1,0)[7] errors \n\nCoefficients:\n         sar1  festivos  excesotemperatura\n      -0.5473  -74.2090             2.8101\ns.e.   0.0484    3.1115             0.3990\n\nsigma^2 = 283.7:  log likelihood = -1514.48\nAIC=3036.96   AICc=3037.07   BIC=3052.47\n\n\nVeamos si es necesaria más intervención.\n\nerror &lt;- residuals(ele.ar1)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2,2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(1998, 2022, 2)) \n\nfechas[abs(error) &gt; 3 * sderror]\n\n[1] \"2023-07-25\" \"2023-08-27\" \"2023-12-25\"\n\n\n\n\n\n\n\n\nFigura 20: Error + Intervención\n\n\n\n\n\nSe observan tres candidatos a valores atípicos por superar el error las 3 desviaciones típicas.\n\n27 de julio: día de Santiago (patrón de España) y festivo en Galicia, Castilla y León, Navarra y País Vasco.\n27 de agosto: no se ha identificado nada especial este día\n25 de diciembre, Navidad: este día ya está incluido como festivo en la variable festivos, pero es tan festivo que el consumo cayó mucho más que en otro día festivo cualquiera.\n\nDeberíamos incluir el 27 de julio en nuestra lista de festivos y crear una variable ficticia especial para Navidad, pero a fin de aligerar este ejemplo no vamos a modificar el modelo actual.\n\n\nValidación\nCoeficientes significativos\nVeamos si los coeficientes del modelo son significativos. Para ello, aplicamos la prueba z.\n\ncoeftest(ele.ar1)\n\n\nz test of coefficients:\n\n                    Estimate Std. Error  z value  Pr(&gt;|z|)    \nsar1               -0.547285   0.048413 -11.3045 &lt; 2.2e-16 ***\nfestivos          -74.208962   3.111550 -23.8495 &lt; 2.2e-16 ***\nexcesotemperatura   2.810094   0.399026   7.0424  1.89e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nTodos los coeficientes son significativos.\nError de estimación\nEn media nos equivocamos en 17 GWh (RMSE) y el error porcentual medio es del 1.8%, muy reducido.\nLa serie no presenta sesgo y el intervalo de confianza para las predicciones es válido.\n\naccuracy(ele.ar1)\n\n\n\n                ME  RMSE   MAE   MPE MAPE MASE ACF1\nTraining set -0.15 16.59 11.96 -0.05 1.81 0.38 0.07\n\n\nIncorrelación, Homocedasticidad y Normalidad\nVeamos ahora si el residuo es ruido blanco.\n\nerror &lt;- residuals(ele.ar1)\nBox.test(error, lag = 2,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 3.7601, df = 2, p-value = 0.1526\n\nBox.test(error, lag = 14,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 43.693, df = 14, p-value = 6.632e-05\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 9.3393, df = 2, p-value = 0.009375\n\nBox.test(error^2, lag = 14, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 19.53, df = 14, p-value = 0.1457\n\njarque.bera.test(error) \n\n\n    Jarque Bera Test\n\ndata:  error\nX-squared = 129.36, df = 2, p-value &lt; 2.2e-16\n\nggAcf(error, lag = 35, main = \"\")\n\n\n\n\n\n\n\nFigura 21: FAC del error del modelo\n\n\n\n\n\nClaramente hay autocorrelaciones significativas, además en retardos relevantes (véase Figura 21), el error no muestra ser homocedástico ni seguir una distribución normal.\nUna posible razón para la presencia de autocorrelación y heterocedasticidad puede ser una identificación del modelo incorrecta: igual la diferenciación regular no es precisa o igual hay que dejar el proceso AR(1) regular aunque su coeficiente sea no significativo. También la presencia de días atípicos sin intervención puede ser la causa del incumplimiento de las hipótesis.\n\n\nError de predicción estramuestral según horizonte temporal\nAsumimos que se precisan veinte semanas para hacer una buena estimación, \\(k = 140\\), y fijaremos el horizonte temporal en una semana, \\(h = 7\\) días. Como el modelo apenas presenta valores atípicos, podemos calcular como medida de precisión el valor medio en lugar del mediano.\n\nk &lt;- 140               \nh &lt;- 7                   \nT &lt;- length(electricidad)   \ns &lt;- T - k - h               \n\nmapeArima &lt;- matrix(NA, s + 1, h)\n\nX &lt;- data.frame(cbind(festivos, excesotemperatura))\n\nfor (i in 0:s) {\n  train.set &lt;- subset(electricidad, start = i + 1, end = i + k)\n  test.set &lt;-  subset(electricidad, start = i + k + 1, end = i + k + h) \n  \n  X.train &lt;- as.matrix(X[(i + 1):(i + k),])\n  X.test &lt;- as.matrix(X[(i + k + 1):(i + k + h),])\n  \n  fit &lt;- try(Arima(train.set, \n                   order = c(0, 1, 0),\n                   seasonal = c(1, 1, 0),\n                   xreg = X.train))\n  \n  if(!is.element(\"try-error\", class(fit))) {\n    fcast &lt;- forecast(fit, h = h, xreg = X.test) \n    mapeArima[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n  }\n}\n\nerrorArima &lt;- apply(mapeArima, MARGIN = 2, FUN = median, na.rm = TRUE)\nerrorArima\n\n[1] 1.349262 2.111647 2.435318 2.716222 3.116016 3.311760 3.234447\n\n\nEl error de predicción parte del 1.3% para previsiones a un día vista (algo inferior al error de ajuste) y aumenta progresivamente según aumenta el horizonte de predicción, pasando al 3.2% a 7 días vista.\n\n\nInterpretación\nEl modelo teórico es \\(electricidad_t \\sim ARIMA_{7}(0, 1, 0)(1, 1, 0) + AI\\), \\[(1 - L^{7})(1 - L)electricidad_t = (1 + \\theta_{7} L^{7})\\varepsilon_t + AI.\\]\nSi desarrollamos queda \\[\n\\begin{aligned}\nelectricidad_t & = electricidad_{t-1} + (electricidad_{t-7} - electricidad_{t-8})  + \\theta_{7} \\varepsilon_{t-7} + \\varepsilon_{t}+ \\\\\n& \\gamma_1 \\cdot festivos +\\gamma_2 \\cdot excesotemperatura_t\n\\end{aligned}\n\\] Finalmente, el modelo estimado es, \\[\n\\begin{aligned}\n\\widehat{electricidad_t} & = electricidad_{t-1} + (electricidad_{t-7} - electricidad_{t-8}) - 0.55 \\varepsilon_{t-7}  \\\\\n& -74.2 \\cdot festivos_t + 2.8 \\cdot excesotemperatura_t\n\\end{aligned}\n\\]\n\nEl consumo de electricidad de un día es el mismo que el del día anterior más la variación observada entre estos dos días la semana pasada. Por ejemplo, el consumo un miércoles es el del martes pasado más la variación observada entre el martes y el miércoles de la semana previa.\nLos días festivos el consumo cae en 74.2 GWh respecto de la demanda en un día no festivo.\nPor cada grado centígrado de desviación de la temperatura sobre la media anual, el consumo aumenta en 2.8 GWh.\n\n\n\nPredicción de la serie\nUna vez dado por válido el modelo, podemos pasar a realizar predicciones para los próximos siete días y mostrar los resultados numérica y gráficamente (Figura 22).\nTeniendo en cuenta las dos variables de intervención:\n\nPara el efecto calendario debemos indicar qué valores tomará en el periodo de predicción, es decir, que días son festivos. Como el rango de predicción abarca del 1 al 7 de enero de 2024, se marcarán como festivos el lunes día 1 (Año nuevo) y el sábado 6 (Reyes).\nPara el efecto de la temperatura deberíamos, primero obtener la temperatura prevista para el periodo de predicción y después calcular el exceso de temperatura. La previsión de la temperatura se puede obtener de AEMET o de cualquier otro servicio de metereología.\n\nRecuerda siempre incluir las variables ficticias en la función forecast en el mismo orden que aparecen en la estimación con Arima.\n\npfestivos &lt;- c(1, 0, 0, 0, 0, 1, 0)\nptemperatura &lt;- c(6.6, 4.0, 10.0, 9.2, 7.6, 5.4, 4.8)\npexcesotemperatura &lt;- ptemperatura - mean(temperatura)\n\npele.ar1 &lt;- forecast(ele.ar1, \n                     h = 7,\n                     xreg = cbind(pfestivos, pexcesotemperatura), \n                     level = 95)\npele.ar1\n\n         Point Forecast    Lo 95    Hi 95\n54.00000       553.6264 520.6113 586.6415\n54.14286       639.1189 592.4285 685.8093\n54.28571       682.8552 625.6713 740.0390\n54.42857       672.0053 605.9751 738.0355\n54.57143       643.9064 570.0824 717.7304\n54.71429       488.0978 407.2276 568.9680\n54.85714       526.9900 439.6402 614.3397\n\n\n\nautoplot(pele.ar1, \n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(46, 56, 1)) \n\n\n\n\n\n\n\nFigura 22: Demanda eléctrica y predicción\n\n\n\n\n\nLa Figura 22 muestra la serie Electricidad y su predicción para la primera semana de 2024, junto con el intervalo de confianza. La calidad de ajuste es tan buena que el intervalo de confianza de las predicciones es muy estrecho."
  },
  {
    "objectID": "03-05-Tema5.html#footnotes",
    "href": "03-05-Tema5.html#footnotes",
    "title": "Series Temporales: Procesos ARIMA con estacionalidad",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nR permite crear tu propio calendario de festivos y existen otras librerías que extienden las opciones de bizdays. En el ejemplo de Pasajeros puedes ver como construir la serie de días laborables del mes para España paso a paso.↩︎\nPara este análisis solo se van a considerar los festivos nacionales en 2023 al que añadiremos el lunes de Semana Santa. Es posible que algunos festivos autonómicos en comunidades muy pobladas tengan un efecto sobre el consumo eléctrico, pero esto es un ejercicio y hay que limitar el alcance del análisis.↩︎"
  },
  {
    "objectID": "03-09-Ejemplo4.html",
    "href": "03-09-Ejemplo4.html",
    "title": "Defunciones por Enfermedades Cerebrovasculares",
    "section": "",
    "text": "1 Introducción\nConsideremos la serie temporal correspondiente al número de defunciones causadas por enfermedades cerebrovasculares, Esta serie está disponible en el Instituto Nacional de Estadística desde enero de 1980 hasta diciembre de 2023, un total de 44 años o 528 meses.\nEn la descriptiva vimos que la descomposición revelaba la presencia de varios valores atípicos concentrados al inicio de la serie. Por este motivo, para su análisis por modelos Arima vamos a recortar la serie, que empezará el enero de 1990, y a anualizarla (34 años). La Figura 1 muestra la serie a analizar.\n\nDefEnfCer &lt;- read.csv2(\"./series/Enfermedades cerebrovasculares.csv\", \n                       header = TRUE)\n\nDefEnfCer &lt;- ts(DefEnfCer[,2],\n                start = 1980, \n                freq = 12)\n\nDefEnfCer &lt;- window(DefEnfCer, \n                    start = 1990)\n\nDefEnfCer &lt;- aggregate(DefEnfCer, \n                       FUN = sum)\n\nautoplot(DefEnfCer,\n         xlab = \"\",\n         ylab = \"\",\n         main = \"\") \n\n\n\n\n\n\n\nFigura 1: Defunciones anuales causadas por enfermedades cerebrovasculares\n\n\n\n\n\n\n\n\n\n\n2 Transformación de la serie\nEn el análisis previo se vio que la serie anual hay que diferenciarla una vez para que sea estacionaria y ergódica. Por tanto, se opta por considerar \\(d=1\\) o \\(y_t \\sim I(1)\\).\nPara series anuales la transformación logarítmica no suele ser necesaria.\n\n\n\n\n\n3 Identificación\nVeamos ahora a identificar los valores de \\(p\\) y \\(q\\) a partir de la FAC y la FACP (Figura 2). Difícil decidirse entre un AR(1), un MA(1) o incluso un ARMA(1, 1).\n\nggtsdisplay(diff(DefEnfCer))\n\n\n\n\n\n\n\nFigura 2: Defunciones anuales por enfermedades cerebrovasculares, FAC y FACP de la serie transformada\n\n\n\n\n\n¿Qué recomienda auto.arima? Un ARIMA(1, 1, 0) con deriva.\n\nauto.arima(DefEnfCer, \n           d = 1)\n\nSeries: DefEnfCer \nARIMA(1,1,0) with drift \n\nCoefficients:\n          ar1      drift\n      -0.6197  -613.3271\ns.e.   0.1394    82.8410\n\nsigma^2 = 617762:  log likelihood = -266.04\nAIC=538.09   AICc=538.91   BIC=542.57\n\n\nLa estimación de este modelo muestra que los dos coeficientes son aparentemente significativos y que no hay valores extremos (Figura 3).\n\narima110 &lt;- Arima(DefEnfCer, \n                  order = c(1, 1, 0),\n                  include.constant = TRUE)\n\nerror &lt;- residuals(arima110)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1990, 2024, 4)) \n\n\n\n\n\n\n\nFigura 3: Error + Intervención\n\n\n\n\n\n\n\n\n\n\n4 Validación\n\nCoeficientes son significativos\nLos dos coeficientes estimados (\\(\\phi_1\\) y \\(\\mu\\)) son significativos.\n\ncoeftest(arima110)\n\n\nz test of coefficients:\n\n        Estimate Std. Error z value  Pr(&gt;|z|)    \nar1     -0.61968    0.13941 -4.4450 8.789e-06 ***\ndrift -613.32712   82.84096 -7.4037 1.325e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nMedidas de error\nEl error medio es 751 defunciones (RMSE) y el error porcentual medio es 1.72% (MAPE). No hay sesgo y la predicción por intervalos será correcta.\n\naccuracy(arima110)\n\n\n\n               ME  RMSE    MAE  MPE MAPE MASE  ACF1\nTraining set 17.8 750.5 574.34 0.05 1.72 0.62 -0.07\n\n\n\n\n\n\nIncorrelación, Homocedasticidad y Normalidad\nVeamos ahora si el residuo es ruido blanco:\n\nBox.test(error, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 2.014, df = 2, p-value = 0.3653\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\") \n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 1.4262, df = 2, p-value = 0.4901\n\nshapiro.test(error)\n\n\n    Shapiro-Wilk normality test\n\ndata:  error\nW = 0.91822, p-value = 0.01439\n\n\nLas hipótesis de incorrelación y homocedasticidad se aceptan (también se aceptan para otros valores de lag razonables). La hipótesis de normalidad se rechaza al 5%, pero se aceptaría al 1%.\n\n\n\n\n\n\n5 Interpretación del modelo\nEl modelo teórico es \\(DefEnfCer \\sim ARIMA(1,1,0)\\) + constante: \\[(1 - \\phi_1L)(1 - L) DefEnfCer_t =  c + \\varepsilon_t.\\]\nDesarrollando queda: \\[DefEnfCer_t = c + DefEnfCer_{t-1} +  \\phi_1(DefEnfCer_{t-1} - DefEnfCer_{t-2}) + \\varepsilon_t\\]\nFinalmente. el modelo estimado es:\n\\[\\widehat{DefEnfCer}_t = -993.39 + DefEnfCer_{t-1} - 0.62(DefEnfCer_{t-1} - DefEnfCer_{t-2})\\]\nRecuerda que la constante estimada \\(\\mu\\) no es la constante del modelo \\(c\\) y que esta se obtiene como \\((1 - (-0.61968)) \\cdot (-613.32712) = -993.3937\\).\nCada año el número de defunciones por enfermedades cerebrovasculares es el mismo que el año previo menos 993 casos y menos un 62% de la última variación.\n\n\n\n\n\n6 Predicción\nPodemos usar el modelo estimado para predecir los casos de defunciones por enfermedad cerebrovascular para los próximos 5 años (Figura 4).\n\nparima110 &lt;- forecast(arima110, \n                      h = 5, \n                      level = 95)\nparima110\n\n     Point Forecast    Lo 95    Hi 95\n2024       23118.42 21577.93 24658.91\n2025       22158.85 20510.71 23806.99\n2026       21760.08 19734.56 23785.60\n2027       21013.80 18832.01 23195.59\n2028       20482.86 18066.73 22898.99\n\n\n\nautoplot(parima110, \n     ylab = \"Defunciones\",\n     main = \"\") +\n  scale_x_continuous(breaks= seq(1990, 2028, 4)) \n\n\n\n\n\n\n\nFigura 4: Defunciones por enfermedades cerebrovasculares y predicción\n\n\n\n\n\n\n\n\n\n\n7 Calidad de las previsiones extramuestrales según horizonte temporal\nVamos a aplicar la metodología de origen de predicción móvil a la serie. Asumimos que se precisan veinte años para hacer una buena estimación, \\(k=20\\), y que el horizonte temporal es cinco años, \\(h = 5\\).\n\nk &lt;- 20                   \nh &lt;- 5                    \nTT &lt;- length(DefEnfCer)   \ns &lt;- TT-k-h               \n\nmapeArima &lt;- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set &lt;- subset(DefEnfCer, start = i + 1, end = i + k)\n  test.set &lt;-  subset(DefEnfCer, start = i + k + 1, end = i + k + h)\n  \n  fit &lt;- Arima(train.set, \n               order = c(1, 1, 0),\n               include.constant = TRUE)\n  \n  fcast&lt;-forecast(fit, h = h)\n  \n  mapeArima[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n}\n\nerrorArima &lt;- colMeans(mapeArima)\nerrorArima\n\n[1] 1.721645 2.083872 2.503092 3.230918 3.763756\n\n\nSe observa que el error de ajuste y el error de predicción extramuestral a un periodo vista son similares, 1.7%. Además, conforme aumenta el horizonte temporal de previsión el error aumenta, aunque a cinco años vista se mantiene aun bajo.\n\n\n\n\n\n8 Comparación con un modelo de Alisado\nSi estimamos la serie anual de Defunciones por enfermedades cerebrovasculares aplicando técnicas de alisado exponencial nos encontramos con un modelo con error y pendiente aditivas ETS(A,A,N).\n\nsummary(alisado &lt;- ets(DefEnfCer))\n\nETS(A,A,N) \n\nCall:\nets(y = DefEnfCer)\n\n  Smoothing parameters:\n    alpha = 0.3247 \n    beta  = 1e-04 \n\n  Initial states:\n    l = 44190.7089 \n    b = -606.6636 \n\n  sigma:  806.214\n\n     AIC     AICc      BIC \n580.7205 582.8633 588.3523 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -3.659781 757.3062 614.9347 0.02565404 1.890456 0.6655137\n                    ACF1\nTraining set -0.09139296\n\n\nLa calidad del ajuste del modelo de Alisado es algo inferior a la del modelo Arima: MAPE de 1.9% para el primero frente a 1.7% para el segundo; RMSE de 757 para el primero frente a 751 para el segundo. Además, si se aplica la metodología de origen de predicción móvil al modelo de Alisado, este ofrece predicciones extramuestrales menos precisas que Arima. Por ejemplo, a un periodo vista el error por Alisado es del 2.7% y con Arima del 1.7% y a cinco periodos vista estos errores pasan al 4.1% y 3.8%.\nFinalmente, las predicciones realizadas con ambos modelos son muy similares.\n\npalisado &lt;- forecast(alisado, h = 5)\n\nautoplot(DefEnfCer,\n         series = \"Defunciones\",\n         main=\"\",\n         xlab=\"\", \n         ylab=\"Defunciones\") +\n  autolayer(parima110$mean, series = \"Previsión con Arima\") +\n  autolayer(palisado$mean, series = \"Previsión con Alisado\") +\n  labs(colour = \"Series\") + \n  theme(legend.position=c(0.8,0.8))\n\n\n\n\n\n\n\nFigura 5: Defunciones Enf. Cerebrovasculares y previsión\n\n\n\n\n\nEn definitiva, para esta serie, que es corta y aparentemente sencilla, la aproximación por la metodología Arima ofrece predicciones similares a las del modelo de Alisado. La precisión de las predicciones con Arima es mayor que con Alisado, pero las diferencias son mínimas (menores a 1 p.p.) para horizontes temporales superiores a 3 años."
  },
  {
    "objectID": "02-Logistica.html",
    "href": "02-Logistica.html",
    "title": "Logística",
    "section": "",
    "text": "El grueso del material del curso lo podéis encontrar en esta página web. Sin embargo, hay muuuucho material adicional disponible en formato papel y online. A continuación, os describo brevemente dónde podéis encontrar parte de este material.\n\n\n\n\n\n\nContenidos del curso\n\nPágina web del curso dónde encontrarás todo el material teórico y práctico necesario para seguir el curso y realizar las prácticas de evaluación.\nAula Virtual donde encontrarás una copia de todo el material del curso en un único fichero comprimido. Además, Aulavirtual será el medio de comunicación oficial entre nosotros y dónde subiréis las prácticas de evaluación y las pruebas tipo test.\n\n\n\n\n\n\n\n\nMateriales\n\nContenidos teóricos: los encontrarás en la sección Diapos. Las primeras entradas corresponden a los contenidos teóricos del curso, las siguientes a un ejemplo práctico de aplicación para cada tema. Este ejemplo no necesariamente lo veremos durante el curso, pero puede serte de ayuda para terminar de comprender los conceptos teóricos vistos y su aplicación práctica con R. La última entrada es un extenso ejemplo que va más allá de una simple aplicación de los conceptos visto durante el curso.\nEn Píldoras encontrarás extensiones a conceptos del curso, ninguno de los cuales veremos en clase.\nRecursos de R: contiene los ficheros de datos de los ejemplos utilizados durante el curso (ficheros .csv) así como el código de R que usaremos en las clases (ficheros .R).\nPráctica: contiene el fichero de datos que cada uno de vosotros debéis usar para realizar las prácticas. Además, se indica una descripción provisional e incompleta del contenido de las prácticas de evaluación. El contenido final de cada una de ellas se comentará en clase al finalizar cada tema y las prácticas deberán ajustarse a este contenido.\n\n\n\n\n\n\nMás recursos\nLa última sección de la página web Más es un pequeño baúl de recursos que te pueden ser útiles:\n\nR: enlaces a páginas con recursos sobre R y RStudio\nMarkdown: enlaces a páginas con recursos sobre (R)Markdown y Quatro\nOtros: enlace a R-bloggers, un blog sobre R que te puede ser de gran ayuda y a libros online sobre R, análisis de datos, inferencia…\n\n\n\n\n\n\n\n\nBibliografía\nEl material de este curso debe mucho a\n\nForecasting: Principles and Practice: un libro online (realizado con bookdown) de Rob J. Hyndman y George Athanasopoulos. Durante el curso usaremos fundamentalmente la librería forecast de Hyndman, Athanasopoulos y otros (aquí).\n\n\n\nHay un montón de bibliografía sobre Series Temporales, tanto de libros en papel como de recursos de todo tipo online. Es imposible ser exhaustivos, así que aquí va simplemente una muestra.\nSentíos libres de hurgar en la web en busca de tutoriales, videos, libros… que os puedan ser útiles. Si algún material que localizáis creéis que es realmente útil, por favor, compartirlo con vuestros compañeros y conmigo.\n\n\nGrandes clásicos de Series Temporales\n\nAbraham, B. y Ledolter, J. (1983) Statistical methods for forecasting. Wiley\nBox, G.E.P. y Jenkins, G.M. (1976) Time series analysis, forecasting and control. Holden-Day\nBox, G.E.P., Jenkins, G.M. y Reinsel, G.C. (1994) Time series análisis. Prentice-Hall\nBrockwell, P.J. y Davis, R.A. (1996) Introduction to time series and forecasting. Springer-Verlag\nChatfield, C. (1989) The analysis of time series. An introduction. Chapman & Hall\nGreene, W. (1998) Análisis econométrico. Prentice Hall\nHolden, K., Peel D.A. y Thompson, J. L. (1990) Economic Forecasting: an introduction. Cambridge University Preess: Cambridge\nHolton, J. y Keating, B. (1996) Previsión en los negocios. IRWIN\nMarkridakis, S., Weelwright, S.C. y Hyndman, R.J. (1998) Forecasting: Methods and Applications. Willey\nPeña, D. (1999) Estadística: modelos y métodos 2 (Modelos lineales y Series Temporales.) Alianza Universidad Textos.\nPulido, A. y López, A.M. (1999) Predicción y simulación aplicada al a economía y gestión de empresas. Pirámide.\nUriel, E. (2005) Introducción al análisis de series temporales. Paraninfo.\n\n\n\nBibliografía de Series Temporales con R\n\nCowpertwait, P. S. P. y Metcalfe, A. V. (2009) Introductory Time Series with R. Springer (Collection Use R!)\nPfaff, B. (2008) Analysis of Integrated and Cointegrated Time Series with R. Springer (Collection Use R!)\nCryer, J. D., Chan, Kung-Sik. (2008) Time Series Analysis. With Applications in R. Springer\n\n\n\nDirecciones de internet\n\nQuick-R: Time Series and Forecasting: un vistazo muy pero que muy rápido al análisis de series temporales con R.\nTres manuales online de series temporales al estilo del comentado al inicio de la bibliografía se pueden encontrar aquí, aquí y aquí\nA First Course on Time Series Analysis with SAS: es un libro de análisis de series temporales con SAS online\nJournal of Time Series Analysis: revista científica sobre series temporales\n\nInternational Journal of Forecasting: revista científica sobre predicción\n\n\n\nSoftware gratuito\n\nR-project: creo que ya lo conocemos todos.\nJDemetra+: ajuste automático de series con modelos ARIMA aplicando dos métodos: TRAMO-SEATS+ y X-12ARIMA/X-13ARIMA-SEATS.\nGretl: programa de modelización gratuito: regresión múltiple, modelos de elección binaria, series temporales, etc."
  },
  {
    "objectID": "01-Guia-curso.html#introducción",
    "href": "01-Guia-curso.html#introducción",
    "title": "Guía del Curso",
    "section": "Introducción",
    "text": "Introducción\nEl módulo de Series Temporales pertenece al Máster de Bioestadística y se configura como un módulo impartido en el segundo cuatrimestre con 10 sesiones de cinco horas.\nEl objetivo general es aprender a manejarse con datos de corte temporal, Series Temporales. Es decir, ser capaces de aplicar los métodos para describir, analizar, modelizar y predecir series de datos que evolucionan en el tiempo. Además, hay que saber evaluar la calidad de las predicciones en el contexto de la estadística tradicional y con técnicas de Machine Learning.\nPara ello, veremos la teoría necesaria y, sobre todo, practicaremos utilizando el programa estadístico R y el lenguaje Markdown (o Quarto) a través de RStudio. A estas alturas del grado ya debes estar familiarizado con este programa."
  },
  {
    "objectID": "01-Guia-curso.html#contenidos",
    "href": "01-Guia-curso.html#contenidos",
    "title": "Guía del Curso",
    "section": "Contenidos",
    "text": "Contenidos\nEl programa de la asignatura contiene 5 temas distribuidos en 10 sesiones de 5 horas:\n\nSesión 1 y 2: Tema 1. Definición y Componentes\nSesión 3 y 4: Tema 2. Métodos de Alisado Exponencial\nSesión 5: Tema 3. Procesos estocásticos\nSesión 6 y 7: Tema 4. Modelos ARIMA\nSesión 8 y 9: Tema 5. Modelos ARIMA con estacionalidad\nSesión 10: Repaso general\n\nPasar de un tema al siguiente supone incrementar la complejidad de las técnicas empleadas para el análisis de una serie temporal, de forma que podréis valorar con datos reales la relación entre complejidad–tiempo–resultados y optar por la metodología más adecuada."
  },
  {
    "objectID": "01-Guia-curso.html#metodología",
    "href": "01-Guia-curso.html#metodología",
    "title": "Guía del Curso",
    "section": "Metodología",
    "text": "Metodología\nDado el carácter eminentemente práctico del módulo, todas las sesiones se impartirán con el ordenador a mano y se alternará entre teoría y práctica según convenga:\n\nTiempo de teoría: os plantearé los conceptos nucleares de cada tema, de forma precisa y rigurosa, en lenguaje natural, gráfico y formal. El material teórico lo podéis encontrar en la sección Diapos.\nTiempo de práctica: a partir del código y de los ficheros de datos que podéis encontrar en la sección Recursos de R practicaréis los conceptos teóricos y aprenderéis el manejo de R para el análisis de series temporales.\nTiempo de evaluación: tras cada tema realizaréis una breve prueba tipo test, con tiempo limitado, para valorar si habéis adquirido los conocimientos teóricos y las habilidades practicas básicas.\nTrabajo práctico de evaluación: también en clase os daré tiempo para realizar parte de los trabajos prácticos que servirán de evaluación del módulo.\n\n\n\nTodo el material necesario para este curso lo tenéis disponible en esta página web así como en Aula Virtual. También podéis encontrar los detalles en la sección Logística de la web."
  },
  {
    "objectID": "01-Guia-curso.html#evaluación",
    "href": "01-Guia-curso.html#evaluación",
    "title": "Guía del Curso",
    "section": "Evaluación",
    "text": "Evaluación\nTanto la parte teórica como la práctica se evaluarán exclusivamente a través de breves pruebas y trabajos prácticos que se irán realizando a lo largo del curso. No habrá, por tanto, examen de evaluación. En caso de suspender en primera convocatoria, deberéis hablar conmigo para coordinar el trabajo de recuperación, puesto que esta se realizará también a través de trabajos prácticos.\nTras cada una de las cinco unidades temáticas se realizará una breve prueba tipo test. La prueba contendrá preguntas de respuesta múltiple, numérica, verdadero/falso, etc. Este conjunto de pruebas supondrá un 20% de la nota de la asignatura y no es recuperable.\nAdemás, tras cada unidad temática, os daré una práctica de evaluación que deberéis entregar en el plazo establecido. La valoración de estos trabajos supondrá el restante 80% de la nota de la asignatura, que sí es recuperable.\nLas prácticas de evaluación deben realizarse utilizando el programa estadístico R y recomiendo que uséis para la escritura del trabajo el lenguaje Markdown o Quatro."
  },
  {
    "objectID": "04-07-Combinando_predicciones.html#footnotes",
    "href": "04-07-Combinando_predicciones.html#footnotes",
    "title": "Combinación de predicciones",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nPara ser rigurosos, solo en un caso un método supera a la media simple, el método Ingenuo I en previsiones a 4 años vista, pero por 1.5 décimas.↩︎"
  },
  {
    "objectID": "03-02-Tema2.html#notación-y-definiciones",
    "href": "03-02-Tema2.html#notación-y-definiciones",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "2.1 Notación y definiciones",
    "text": "2.1 Notación y definiciones\nDada una serie temporal \\(\\{y_t\\}_{t=1}^T\\), se define:\n\nPrevisión \\(h\\) periodos adelante, como la previsión de la serie para el periodo \\(t+h\\) disponiendo de información hasta el periodo \\(t\\), y se denota por \\(\\hat{y}_{t+h|t}\\). Por simplicidad lo escribiremos también como \\(\\hat{y}_{t+h}\\).\nAsí, \\(\\hat{y}_{t+1|t}\\) es la previsión un periodo adelante o a un periodo vista. Es decir, la previsión de la serie en el periodo \\(t+1\\) desde el periodo \\(t\\).\nPor simplicidad denotaremos a \\(\\hat{y}_{t+1|t}\\) como \\(\\hat{y}_{t+1}\\). Por tanto, \\(\\hat{y}_{t}\\) será la previsión en \\(t\\) con datos hasta el periodo \\(t-1\\) (\\(\\hat{y}_{t} = \\hat{y}_{t|t-1}\\)).\n\nSi para un periodo \\(t\\) se tiene la observación \\(y_t\\) y una previsión \\(\\hat{y}_t\\), se define como error a un periodo vista a \\[\\hat{e}_t=y_t-\\hat{y}_t,\\] de forma que la serie \\(\\{\\hat{e}_t\\}_{t=1}^T\\) nos permitirá definir varios criterios de calidad.\n\n¿Calidad de ajuste o de previsión?\nLos mismos criterios que se van a definir a continuación pueden ser criterios de calidad de ajuste o de calidad de las previsiones. Esta diferencia depende de cómo se ha obtenido \\(\\hat{y}_t\\).\nSi en el proceso de predicción hay parámetros cuyo ajuste o estimación se ha realizado usando toda la serie temporal, entonces hablaremos de calidad de ajuste: para obtener \\(\\hat{y}_t\\) se habrá usado el dato \\(y_t\\) y los siguientes, es decir, datos posteriores al periodo \\(t\\) y entonces \\(\\hat{e}_t\\) es un error de ajuste.\nPor el contrario, si en el proceso de predicción no hay parámetros o habiéndolos su estimación se ha realizado usando la serie temporal hasta el periodo \\(t-1\\), entonces hablaremos de calidad de predicción: para obtener \\(\\hat{y}_t\\) solo se habrán usado el datos hasta \\(y_{t-1}\\), es decir, datos anteriores al periodo \\(t\\), y entonces \\(\\hat{e}_t\\) es un error de predicción.\nA veces al error de ajuste se le denomina error de previsión intramuestral y hablaremos de criterios de calidad intramuestral. De la misma forma al error de previsión se le denomina error de previsión extramuestral y hablaremos de criterios de calidad extramuestral o precisión de las predicciones."
  },
  {
    "objectID": "03-02-Tema2.html#criterios-de-calidad-1",
    "href": "03-02-Tema2.html#criterios-de-calidad-1",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "2.2 Criterios de calidad",
    "text": "2.2 Criterios de calidad\nDada una serie \\(\\{y_t\\}_{t=1}^T\\), un método de predicción y su vector de errores asociado \\(\\{\\hat{e}_t\\}_{t=1}^T\\), podemos definir múltiples criterios de calidad de ajuste o predicción del método que hacen referencia a la presencia de sesgo en las predicciones, la magnitud del error cometido y la calidad del intervalo de confianza de las predicciones. Las más habituales son (siglas en inglés):\n\nError medio (ME): \\(\\frac{1}{T}\\sum_{t=1}^T \\hat{e}_t\\)\n\n\nRaíz del error cuadrático medio (RMSE): \\(\\sqrt{\\frac{1}{T}\\sum_{t=1}^T \\hat{e}^2_t}\\)\n\n\nError absoluto medio (MAE): \\(\\frac{1}{T}\\sum_{t=1}^T |\\hat{e}_t|\\)\n\n\nError porcentual medio (MPE): \\(\\frac{100}{T}\\sum_{t=1}^T \\frac{\\hat{e}_t}{y_t}\\)\n\n\nError porcentual absoluto medio (MAPE): \\(\\frac{100}{T}\\sum_{t=1}^T \\big|\\frac{\\hat{e}_t}{y_t}\\big|\\)\n\n\nError escalado absoluto medio (MASE): \\(\\big(\\frac{1}{T}\\sum_{t=1}^T |\\hat{e}_t|\\big)/q\\), donde \\(q\\) es el error absoluto medio para un método ingenuo de predicción: el método ingenuo I para series sin estacionalidad y el método ingenuo con estacionalidad para series con estacionalidad.\n\n\nCorrelación entre \\(\\hat{e}_t\\) y \\(\\hat{e}_{t-1}\\) (ACF1).\n\n\n\nME y MPE permiten valorar el sesgo de las predicciones (que estén sistemáticamente por encima o por debajo de los valores reales).\n\nLo esperado es un valor cercano a cero (en el caso de ME con relación al valor medio de la serie). Valores muy alejados de cero son indicadores de sesgo de predicción.\nLa más cómoda de interpretar es MPE. Asumiremos que si MPE es menor que 1% en valor absoluto, no hay sesgo.\n\nRMSE y MAE son medidas de calidad de ajuste/precisión. Indican el error medio cometido, independientemente del signo, medido en las mismas unidades que la serie temporal.\n\nEstán acotadas inferiormente por el valor óptimo de 0, pero no hay cota superior.\n\nMAPE es una medida de calidad de ajuste/precisión alternativa que indica el error porcentual medio cometido.\n\nEstá acotado inferiormente por el valor óptimo de 0%, y la cota superior natural es 100%, aunque podría sobrepasarse.\nSi \\(y_t\\) puede valer 0, entonces MAPE no se puede calcular. Además, MAPE penaliza más los errores negativos frente a los errores positivos. Se puede definir el error porcentual absoluto medio simétrico (sMAPE) \\(\\frac{200}{T}\\sum_{t=1}^T \\Big|\\frac{\\hat{e}_t}{y_t + \\hat{y}_t}\\Big|\\) a fin de corregir estos problemas.\n\nMASE es la ratio entre el error del método usado y el error de un método ingenuo de predicción. Permite saber cuánto ganamos en capacidad predictiva al pasar de un método ingenuo a otro más complicado.\n\nUn valor cercano a 1 indica que el método usado no es mejor que el método ingenuo\nCuanto más cercano a 0, mejor es el método usado respecto del método ingenuo\nSu complementario a 1 se puede interpretar como la tasa de mejora\n\nACF1 permite saber si el método empleado ha extraído toda la información disponible en los datos de la serie para hacer las predicciones. Si no es así, la fórmula usada para estimar el intervalo de confianza de las predicciones no será válida:\n\nUn valor muy cercano a 0 (menor que 0.1) indica que se ha extraído toda la información y la fórmula usada para estimar el intervalo de confianza de las predicciones es válida.\nValores minimamente alejados de 0 indican que la fórmula no es válida.\n\n\n\n\n\n\n\nCálculo del intervalo de confianza de las predicciones\n\n\n\nVe a la Píldora Bootstrapping para intervalos de predicción para saber más sobre las fórmulas usadas para estimar el intervalo de confianza de las predicciones y alternativas de cálculo cuando estas fórmulas no son válidas.\n\n\nEn todas las fórmulas de criterios de calidad las medias se pueden sustituir por medianas. Esto es especialmente útil cuando para hay observaciones atípicas que generan errores muy altos.\n\n\nLos indicadores de calidad de ajuste que se basan en predicciones intramuestrales a un periodo vista, presentan dos problemas. Primero, evalúan el error a un periodo vista, cuando en muchas situaciones reales las predicciones se realizan sobre un horizonte temporal más amplio. Segundo, son errores intramuestrales, resultantes de predecir los mismos datos que ha usado el método para calcular la predicción y, por tanto, sobrestiman la capacidad predictiva del modelo.\nVeremos en el epígrafe 4 de este tema métodos de evaluación de la precisión de las predicciones que superan estas limitaciones."
  },
  {
    "objectID": "03-02-Tema2.html#métodos-sencillos-de-predicción-1",
    "href": "03-02-Tema2.html#métodos-sencillos-de-predicción-1",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "3.1 Métodos sencillos de predicción",
    "text": "3.1 Métodos sencillos de predicción\n\nSeries sin tendencia y sin estacionalidad\nMétodo de la Media: \\(\\hat{y}_{T+h}=(y_1+\\ldots,y_T)/T\\).\n\nLa predicción para cualquier periodo futuro es la media de las observaciones disponibles previas.\nFunción de R: meanf(y, h)\n\nMétodo ingenuo I: \\(\\hat{y}_{T+h}=y_T\\).\n\nLa predicción para cualquier periodo futuro es la última observación disponible.\nFunción de R: naive(y, h) o rwf(y, h) (rw de random walk)\nPara series sin estacionalidad este es el método ingenuo de comparación del MASE.\n\n\n\nSeries con tendencia y sin estacionalidad\nMétodo ingenuo II: \\(\\hat{y}_{T+h}=y_T + h(y_T-y_{T-1})\\).\n\nLa predicción \\(h\\) periodos adelante es la última observación disponible más \\(h\\) veces el último incremento observado.\nNo tiene función en R, pero se podría emular mediante la función ets (véase epígrafe de 5.5, Alisado exponencial de Holt).\n\nMétodo de la deriva: \\(\\hat{y}_{T+h}=y_T+h\\frac{y_T - y_1}{T-1}\\).\n\nLa predicción \\(h\\) periodos adelante es la última observación disponible más \\(h\\) veces el incremento medio observado.\nFunción de R: rwf(y, h, drift = TRUE)\n\n\n\nSeries sin tendencia y con estacionalidad\nMétodo ingenuo con estacionalidad: \\(\\hat{y}_{T+h}=y_{T-m(k+1)}\\).\n\nLa predicción para un periodo es la última observación disponible de la misma estación que la fecha que se desea predecir.\n\\(k\\) es la parte entera de \\((h-1)/m\\), es decir, el número de estaciones completas en el periodo de predicción previo al periodo \\(T+h\\).\nFunción de R: snaive(y, h)\nPara series con estacionalidad este es el método ingenuo de comparación del MASE\n\nNo hay métodos sencillos cuando la serie tiene tendencia y estacionalidad, así que se suele usar el método ingenuo con estacionalidad."
  },
  {
    "objectID": "03-02-Tema2.html#ejemplo-de-aplicación",
    "href": "03-02-Tema2.html#ejemplo-de-aplicación",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "3.2 Ejemplo de aplicación",
    "text": "3.2 Ejemplo de aplicación\n\nSerie Residuos\nAnalizaremos Residuos, una serie anual de 1995 a 2022 (fuente Instituto Nacional de Estadística) que muestra los residuos recogidos por o en nombre de las autoridades municipales y eliminados a través del sistema de gestión de residuos. La Figura 1 muestra que es una serie con tendencia que ha cambiado con el tiempo.\n\nresiduos &lt;- read.csv2(\"./series/Residuos.csv\", \n                      header = TRUE)\n\nresiduos &lt;- ts(residuos[, 2],\n               start = 1995, \n               frequency  = 1)\n\nautoplot(residuos,\n         main = \"\",\n         xlab = \"\",\n         ylab = \"Kg per cápita\")\n\n\n\n\n\n\n\nFigura 1: Residuos per cápita recogidos\n\n\n\n\n\nLas siguientes salidas muestran el resultado de la aplicación de los métodos sencillos a la serie. Se ha fijado un horizonte de previsión de cinco años (h = 5). Los dos primeros métodos realizan una predicción constante, el método de la media da la media de la recogida de residuos per cápita en el periodo de análisis (531.29) y el Ingenuo I da el último dato observado (467). El método de la deriva da una previsión que decrece de año en año un valor igual a \\((y_T - y_1)/(T-1)\\), que en este caso vale \\(-1.4074\\).\n\n(mediaResiduos &lt;- meanf(residuos, h = 5))\n\n     Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n2023       531.2857 438.4439 624.1275 386.2791 676.2924\n2024       531.2857 438.4439 624.1275 386.2791 676.2924\n2025       531.2857 438.4439 624.1275 386.2791 676.2924\n2026       531.2857 438.4439 624.1275 386.2791 676.2924\n2027       531.2857 438.4439 624.1275 386.2791 676.2924\n\n(naiveResiduos &lt;- naive(residuos, h = 5))\n\n     Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n2023            467 439.3219 494.6781 424.6700 509.3300\n2024            467 427.8573 506.1427 407.1364 526.8636\n2025            467 419.0601 514.9399 393.6823 540.3177\n2026            467 411.6438 522.3562 382.3400 551.6600\n2027            467 405.1099 528.8901 372.3473 561.6527\n\n(derivaResiduos &lt;- rwf(residuos, drift = TRUE , h = 5))\n\n     Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n2023       465.5926 436.9307 494.2544 421.7581 509.4271\n2024       464.1852 422.9337 505.4366 401.0965 527.2738\n2025       462.7778 411.3916 514.1640 384.1894 541.3662\n2026       461.3704 401.0539 521.6869 369.1242 553.6165\n2027       459.9630 391.4480 528.4779 355.1784 564.7475\n\nderivaResiduos$model$par$drift # Permite ver la pendiente del modelo.\n\n[1] -1.407407\n\n#summary(derivaResiduos) Con summary se puede obtener una salida más completa\n\nLa Figura 2 muestra el resultado gráfico de la aplicación de estos métodos. El argumento PI = FALSE hace que no se impriman los intervalos de confianza de las predicciones.\n\nautoplot(residuos, \n         series = \"Residuos\",\n         xlab = \"\",\n         ylab = \"Kg per cápita\",\n         main = \"\") +\n  autolayer(mediaResiduos, series=\"Media\", PI = FALSE) +\n  autolayer(naiveResiduos, series=\"Ingenuo\", PI = FALSE) +\n  autolayer(derivaResiduos, series=\"Deriva\", PI = FALSE) +\n  scale_colour_discrete(limits=c(\"Residuos\", \"Media\", \n                                 \"Ingenuo\", \"Deriva\")) +\n  labs(colour=\"Métodos\") + \n  theme(legend.position=c(0.2,0.3))\n\n\n\n\n\n\n\nFigura 2: Recogida de residuos y predicción por métodos sencillos\n\n\n\n\n\nCon la función accuracy se puede obtener el error de ajuste a un periodo vista de cada método:\n\naccuracy(mediaResiduos)\naccuracy(naiveResiduos)\naccuracy(derivaResiduos)\n\n\n\n             ME  RMSE   MAE   MPE  MAPE MASE ACF1\nMedia      0.00 68.19 60.52 -1.60 11.41 3.66 0.93\nIngenuo I -1.41 21.60 16.52 -0.36  3.05 1.00 0.41\nDeriva     0.00 21.55 16.50 -0.10  3.04 1.00 0.41\n\n\nPodemos destacar que:\n\nEl método de la deriva presenta la mejor calidad de ajuste con un error de 21.5 kg per cápita (RMSE) o del 3.04% (MAPE). El método Ingenuo I tienen una calidad de ajuste similar, con un error medio de 21.6 kg per cápita (RMSE) y un error porcentual del 3.05% (MAPE).\nSi se usa como criterio de calidad de ajuste el error absoluto medio (MAE), vuelve a ser mejor el método Ingenuo I.\nNingún método genera predicciones por intervalo fiables (ACF1 &gt; 0.1).\nLos métodos Ingenuo I y de la Deriva no presentan sesgo (|MPE| &lt; 1%), pero si lo hace el de la Media. Además, el error medio (ME) siempre será nulo para el método de la Media y de la Deriva, lo que indica que en términos absolutos nos equivocamos lo mismo por exceso como por defecto. Esta es una buena propiedad, que el método Ingenuo I no verifica.\nPara series sin estacionalidad el método sencillo de comparación usado en el cálculo del MASE es el Ingenuo I. Es por ello que este indicador vale 1 para este método. Como el método de Media tiene un MAE superior al Ingenuo I, su MASE es mayor que 1. En concreto, MASE = 3.66 = 60.52 / 16.52.\n\nConcluimos que, con independencia del criterio usado, el método que mejor ajusta los datos es el de la Deriva.\n\n\nSerie Nacimientos\nPodemos usar el método ingenuo con estacionalidad con la serie Nacimientos para obtener una previsión a dos años vista.\n\nnacimientos &lt;- read.csv2(\"./series/Nacimientos.csv\", \n                         header = TRUE)\n\nnacimientos &lt;- ts(nacimientos[, 2],\n                  start = c(1975, 1),\n                  frequency = 12)\n\n(snaive.nacimientos &lt;- snaive(nacimientos, \n                              h = 24, \n                              level = 95))\n\n         Point Forecast    Lo 95    Hi 95\nJan 2024          27086 23681.60 30490.40\nFeb 2024          24538 21133.60 27942.40\nMar 2024          26486 23081.60 29890.40\nApr 2024          24986 21581.60 28390.40\nMay 2024          26142 22737.60 29546.40\nJun 2024          26431 23026.60 29835.40\nJul 2024          27564 24159.60 30968.40\nAug 2024          27967 24562.60 31371.40\nSep 2024          27596 24191.60 31000.40\nOct 2024          28887 25482.60 32291.40\nNov 2024          27428 24023.60 30832.40\nDec 2024          27162 23757.60 30566.40\nJan 2025          27086 22271.45 31900.55\nFeb 2025          24538 19723.45 29352.55\nMar 2025          26486 21671.45 31300.55\nApr 2025          24986 20171.45 29800.55\nMay 2025          26142 21327.45 30956.55\nJun 2025          26431 21616.45 31245.55\nJul 2025          27564 22749.45 32378.55\nAug 2025          27967 23152.45 32781.55\nSep 2025          27596 22781.45 32410.55\nOct 2025          28887 24072.45 33701.55\nNov 2025          27428 22613.45 32242.55\nDec 2025          27162 22347.45 31976.55\n\naccuracy(snaive.nacimientos)\n\n                    ME     RMSE     MAE       MPE     MAPE MASE      ACF1\nTraining set -602.6128 1736.971 1380.05 -1.630955 3.740705    1 0.7137736\n\n\nEl error absoluto porcentual medio es del 3.7% (que corresponde a unos 1700 bebés según RMSE). Es decir, aplicando algo tan simple como predecir el número de nacimientos para un mes como los nacimientos del mismo mes del año previo, tenemos ya un error de ajuste muy bajo. Sin embargo, este método en general sobreestima algo el número de nacimientos (MPE inferior a -1%) y sus predicciones por intervalo no son fiables.\nLa Figura 3 muestra la serie y la predicción que, debido al método usado, no incorpora la tendencia decreciente de los últimos años.\n\nautoplot(snaive.nacimientos,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\",\n         PI = FALSE,\n         xlim = c(2000, 2025))\n\n\n\n\n\n\n\nFigura 3: Nacimientos y predicción por el método Ingenuo con estacionalidad\n\n\n\n\n\n\n\nSerie Demanda eléctrica\nPodemos usar el método ingenuo con estacionalidad con la serie Demanda eléctrica, que tiene una estacionalidad de orden 7, pero no parece presentar tendencia. El error absoluto porcentual medio es del 4.7% o 45 GWh (RMSE), un error razonablemente reducido. Sin embargo, el ACF1 indica que la fórmula usada para el cálculo del intervalo de confianza de las predicciones no es válida.\n\nelectricidad &lt;- read.csv(\"./series/Consumo electrico.csv\", \n                         header = TRUE)\n\nelectricidad &lt;- ts(electricidad[, 1],\n                   start = c(1, 7),\n                   frequency = 7)\n\nsnaive.electricidad &lt;- snaive(electricidad, \n                              h = 28, \n                              level = 95)\n\naccuracy(snaive.electricidad)\n\n                    ME    RMSE      MAE        MPE     MAPE MASE      ACF1\nTraining set 0.4959497 45.1574 31.82282 -0.1492087 4.743026    1 0.7470267\n\n\nLa Figura 4 muestra la serie y la predicción a cuatro semanas vista. Debido a que la semana de referencia para predecir es la semana de Navidad, donde el consumo eléctrico es inferior al usual, las predicciones resultan ser claramente incorrectas. Este es un buen ejemplo de la diferencia entre calidad de ajuste y precisión de las predicciones.\n\nautoplot(snaive.electricidad,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 4: Demanda eléctrica y predicción por el método Ingenuo con estacionalidad"
  },
  {
    "objectID": "03-02-Tema2.html#validación-por-conjunto-de-datos-de-entrenamiento-y-prueba",
    "href": "03-02-Tema2.html#validación-por-conjunto-de-datos-de-entrenamiento-y-prueba",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "4.1 Validación por conjunto de datos de entrenamiento y prueba",
    "text": "4.1 Validación por conjunto de datos de entrenamiento y prueba\nVamos a estimar la calidad de las predicciones obteniendo medidas de error para previsiones extramuestrales a varios periodos vista usando la filosofía del conjunto de datos de entrenamiento y prueba.\nDividimos la serie temporal \\(\\{y_t\\}_{t=1}^T\\) en dos subseries. Los primeros datos \\(\\{y_t\\}_{t=1}^{T_0}\\), \\(T_0 &lt; T\\), se usarán para estimar el modelo (conjunto de entrenamiento); y los últimos datos \\(\\{y_t\\}_{t={T_0+1}}^{T}\\) para calcular la precisión de las predicciones (conjunto de prueba).\nEsta metodología, muy efectiva para datos de corte transversal, genera dos problemas cuando se aplica a series temporales: i) el error obtenido es una mezcla de errores de predicción a diferentes horizontes temporales, difícil de interpretar; ii) los resultados dependen tremendamente del punto de corte temporal seleccionado \\(T_0\\).\n\nSerie Residuos\nVamos a reservar, por ejemplo, las últimas 7 observaciones de la serie Residuos (años 2016 a 2022) y ajustar el modelo con las restantes. Después usaremos este modelo para calcular las predicciones a 7 periodos vista y compararlas con los valores reales de la serie.\n\n# Definimos las observaciones intra- y extramuestrales\nresiduosIntra &lt;- subset(residuos, end = length(residuos) - 7)\nresiduosExtra &lt;- subset(residuos, start = length(residuos) - 6)\n\n# Estimamos el modelo con todos los datos menos los 7 ultimos y\n# predecimos los 7 años que hemos quitado de la serie \nresiduosExtraPre &lt;- rwf(residuosIntra,  h = 7, drift = TRUE)\n\n# Vemos la calidad del ajuste. Primero la predicción y luego los datos reales\naccuracy(residuosExtraPre, residuosExtra)\n\n\n\n                ME  RMSE   MAE   MPE MAPE MASE  ACF1 Theil's U\nTraining set  0.00 23.94 18.80 -0.15 3.35 0.98  0.45        NA\nTest set     20.37 22.07 20.37  4.34 4.34 1.06 -0.19      1.84\n\n\nAtendiendo al MAPE se tiene que el error de previsión a un periodo vista en el periodo intramuestral de 1995 a 2015 es del 3.4%; mientras que el error de previsión a largo plazo en el periodo extramuestral de 2016 a 2022 es del 4.3%. Ademas, para el periodo extramuestral el error medio (ME) es positivo y muy elevado, un indicativo de que las previsiones están segadas (subestiman la realidad). En resumen, la calidad del modelo se deteriora cuanto nos salimos de las condiciones óptimas.\nLa Figura 5 puede ayudar a entender este proceso de validación:\n\nLa línea de puntos vertical separa el periodo muestral (1995-2015) usado para estimar el modelo, del periodo extramuestral (2016-2022) usado sólo para hacer las previsiones.\nLa serie Residuos aparece como una línea sólida en negro, desde 1995 hasta 2022.\nLa previsión intramuestral (a un periodo vista) de la serie Residuos aparece como una línea azul.\nLa línea en rojo es la previsión extramuestral a largo plazo. Observa que todas las previsiones están por debajo del valor real de la serie.\nAl lado de cada previsión (intra y extramuestral) se ha indicado el error estimado (MAPE).\n\nClaramente estos resultados dependen del punto de corte seleccionado.\n\n\n\n\n\n\n\n\nFigura 5: Residuos, predicción intra- y extramuestral\n\n\n\n\n\n\n\n\n\n\n\nImportamcia del punto de corte\n\n\n\nPrueba a reservar las últimas 6 observaciones de la serie Residuos y repite el análisis.\n\n\n\n\nSerie Nacimientos\nCalculamos de nuevo los diferentes criterios de bondad de ajuste para valorar la calidad de las previsiones extramuestrales a largo plazo. En este caso vamos a reservar los últimos 36 meses como periodo extramuestral.\n\nnacimientosIntra &lt;- subset(nacimientos, end = length(nacimientos) - 36)\nnacimientosExtra &lt;- subset(nacimientos, start = length(nacimientos) - 35)\n\nnacimientosExtraPre &lt;- snaive(nacimientosIntra, h = 36)\n\naccuracy(nacimientosExtraPre, nacimientosExtra)\n\n\n\n                  ME    RMSE     MAE  MPE MAPE MASE ACF1 Theil's U\nTraining set -607.52 1730.10 1390.96 -1.6 3.69 1.00 0.71        NA\nTest set     -946.17 2372.85 1910.22 -3.7 7.14 1.37 0.27      1.35\n\n\n\n\n\n\n\n\n\n\nFigura 6: Nacimientos, predicción intra- y extramuestral\n\n\n\n\n\nLas previsiones extramuestrales muestran una menor pendiente que los casos reales de nacimientos. Por un lado, el periodo de previsión contiene el atípico año de la pandemia; y, por otro lado, conforme se avanza en el horizonte temporal las previsiones se van alejando de la realidad y el error extramuestral es del 7.1%, duplicando el error de estimación intramuestral de 3.7%.\n\n\nSerie Demanda eléctrica\nPara la serie de consumo eléctrico vamos a reservar las 8 últimas semanas (56 días) como periodo extramuestral.\n\nelectricidadIntra &lt;- subset(electricidad, end = length(electricidad) - 56)\nelectricidadExtra &lt;- subset(electricidad, start = length(electricidad) - 55)\n\nelectricidadExtraPre &lt;- snaive(electricidadIntra, h = 56)\n\naccuracy(electricidadExtraPre, electricidadExtra)\n\n\n\n                ME  RMSE   MAE   MPE MAPE MASE ACF1 Theil's U\nTraining set  0.43 44.41 31.41 -0.15 4.68 1.00 0.77        NA\nTest set     39.83 63.05 47.74  5.51 6.86 1.52 0.36      1.07\n\n\nEl error intramuestral obtenido es del 4.7%, que aumenta 2 p.p. al obtener el error de previsión extramuestral (6.9%). El elevado valor positivo del error medio indica que las previsiones extramuestrales subestiman el consumo real de electricidad.\n\n\n\n\n\n\n\n\nFigura 7: Consumo eléctrico, predicción intra- y extramuestral"
  },
  {
    "objectID": "03-02-Tema2.html#origen-de-predicción-móvil",
    "href": "03-02-Tema2.html#origen-de-predicción-móvil",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "4.2 Origen de predicción móvil",
    "text": "4.2 Origen de predicción móvil\nVeamos ahora una técnica, basada en el concepto de validación cruzada que permite obtener de forma individualizada los errores de previsión extramuestral a un periodo vista, a dos periodos vista, etc.\nSupongamos que para estimar el modelo se necesita un mínimo de \\(k\\) observaciones y que se desea predecir hasta un horizonte temporal \\(h\\).\n\nSeleccionamos las observaciones \\(1,2,...,k\\) para estimar el modelo y predecimos las observaciones desde \\(k+1\\) hasta \\(k+h\\). Tenemos, por tanto, \\(h\\) predicciones.\nCalculamos el error de predicción para las predicciones desde \\(k+1\\) hasta \\(k+h\\). Tenemos \\(h\\) errores, el primero a un periodo vista, el segundo a dos periodos vista y el último a \\(h\\) perriodos vista.\nRepetimos este proceso desplazando el número de observaciones seleccionadas para la estimación un periodo adelante. Es decir, ahora usamos las observaciones \\(2,3,...,k+1\\) para estimar el modelo, predecimos las observaciones desde \\(k+2\\) hasta \\(k+1+h\\) y calculamos el error de predicción.\nIteramos el proceso, desplazando cada vez las observaciones de la estimación un periodo adelante.\nEn general para \\(i=0,1,...,T-k-h\\), donde \\(T\\) es el número total de observaciones:\n\nSeleccionamos las observaciones \\(i+1,i+2,...,i+k\\) para estimar el modelo.\nPredecimos las observaciones desde \\(i+k+1\\) hasta \\(i+k+h\\).\nCalculamos el error de predicción para las observaciones desde \\(i+k+1\\) hasta \\(i+k+h\\).\nPara cada horizonte temporal de predicción se calcula la medida de error deseada.\n\n\n\n\n\n\n\n\n\n\nFigura 8: Descripción del proceso de origen de predicción móvil\n\n\n\nEste procedimiento se denomina origen de predicción móvil, en inglés rolling forecast origin o rolling windows.\nCuando se aplica esta metodología hay que tener en cuenta que los resultados pueden depender del número \\(k\\) de datos usados para la estimación del modelo.\n\nEjemplo de aplicación con Nacimientos\nVamos a aplicar la metodología previa a la serie anual de Nacimientos. Asumimos que se precisan veinte años para hacer una buena estimación, \\(k=20\\), y que el horizonte temporal es de cinco años, \\(h = 5\\). Como la serie es anual, usaremos el método de la deriva para predecir. La siguiente rutina permite obtener el MAPE para previsiones con un horizonte temporal desde uno a cinco años.\n\nnacAnual &lt;- aggregate(nacimientos, FUN = sum)\n\nk &lt;- 20                   #Minimo numero de datos para estimar\nh &lt;- 5                    #Horizonte de las prediciciones\nTT &lt;- length(nacAnual)    #Longitud serie\ns &lt;- TT - k - h           #Total de estimaciones\n\nmapeRwf &lt;- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set &lt;- subset(nacAnual, start = i + 1, end = i + k)\n  test.set &lt;-  subset(nacAnual, start = i + k + 1, end = i + k + h)\n  \n  fcast &lt;- rwf(train.set, h = h, drift = TRUE)\n  mapeRwf[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n}\n\nLa matriz mapeRwf contiene los errores de previsión extramuestral, donde cada columna corresponde a un horizonte temporal de previsión diferente. Ahora vamos a calcular el error medio por columna.\n\nmapeRwfMedia &lt;- colMeans(mapeRwf)\nround(mapeRwfMedia, 2)\n\n[1]  4.18  8.32 12.49 16.64 20.83\n\n\nPara evitar el posible efecto datos atípicos, se puede calcular el error mediano en lugar del error medio. En este caso no hay una función directa en R y usaremos apply.\n\nmapeRwfMediana &lt;- apply(mapeRwf, MARGIN = 2, FUN = median)\nround(mapeRwfMediana, 2)\n\n[1]  4.10  8.97 13.16 17.80 21.52\n\n\nEl error de previsión extramuestral (medio o mediano) crece gradualmente con el horizonte de previsión. Para el primer año el error de predicción se mantiene en un moderado 4%, para el segundo año de predicción el MAPE salta al 8-9% y para los restantes años sigue creciendo. Como la serie de Nacimientos no presenta años especialmente atípicos, para todos los horizontes de previsión el error medio y mediano es muy similar.\n\n\nEjemplo de aplicación con Demanda eléctrica\nAhora aplicaremos la metodología origen de predicción móvil la serie de Demanda eléctrica. En este caso se asumirá que se precisan veinte semanas para hacer una buena estimación, \\(k = 140\\), y que el horizonte temporal es de 4 semanas, \\(h = 28\\). Como la serie tiene estacionalidad, usaremos el método ingenuo con estacionalidad para predecir. La siguiente rutina permite obtener el RMSE para previsiones con un horizonte temporal desde uno a 28 días.\n\nk &lt;- 140                  #Minimo numero de datos para estimar\nh &lt;- 28                   #Horizonte de las prediciciones\nTT &lt;- length(electricidad)#Longitud serie\ns &lt;- TT - k - h           #Total de estimaciones\n\nrmseRwf &lt;- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set &lt;- subset(electricidad, start = i + 1, end = i + k)\n  test.set &lt;-  subset(electricidad, start = i + k + 1, end = i + k + h)\n  \n  fcast &lt;- snaive(train.set, h = h)\n  rmseRwf[i + 1,] &lt;- (test.set - fcast$mean)^2\n}\n\nrmseRwfMedia &lt;- sqrt(colMeans(rmseRwf))\nround(rmseRwfMedia, 2)\n\n [1] 41.63 41.64 41.87 41.90 42.34 42.35 42.37 46.37 46.35 46.34 46.36 46.37\n[13] 46.38 46.39 51.52 51.58 51.68 51.73 51.67 51.66 51.70 64.83 65.10 65.13\n[25] 65.12 65.11 65.07 64.99\n\nrmseRwfMediana &lt;- sqrt(apply(rmseRwf, MARGIN = 2, FUN = median))\nround(rmseRwfMediana, 2)\n\n [1] 19.57 19.57 19.78 20.00 20.48 20.48 20.83 30.11 30.11 30.11 30.11 30.11\n[13] 30.11 30.11 31.65 32.14 32.60 32.81 32.60 32.60 32.60 38.82 40.71 40.71\n[25] 40.71 40.71 40.71 38.82\n\n\nEn este caso, la presencia de muchos días atípicos (todos los festivos entre semana el consumo de electricidad es notablemente más bajo de lo esperado) y de una segunda componente estacional dentro del año hacen que el error medio sea más elevado que el mediano –proximadamente, el primero es el doble que el segundo.\nRespecto del error de previsión mediano, este crece semana tras semana con el horizonte de previsión. Para predicciones de uno a siete periodos vista el error de predicción está alrededor de los 20 GWh; desde 8 a 14 días vista sube hasta los 30 GWh; y a 28 días vista alcanza los 40 GWh.\n\n\n\n\n\n\n\n\nCódigo para cálculo del error deseado\n\n\n\nPara Nacimientos hemos visto el código necesario para calcular el MAPE por origen de predicción móvil. Las dos líneas clave del código son:\n\n\nmapeRwf[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\nmapeRwfMedia &lt;- colMeans(mapeRwf)\n\n\nLa primera línea obtiene el error porcentual absoluto de cada observación y la segunda calcula la media de estos errores.\n\n\nPara calcular el RMSE en el ejemplo de Demanda eléctrica ha sido necesario adaptar estás dos líneas de código adecuadamente. Ahora la primera línea calcula el error cuadrático de cada observación y la segunda la raíz de la media de estos errores:\n\n\nrmseRwf[i + 1,] &lt;- (test.set - fcast$mean)^2\nrmseRwfMedia &lt;- sqrt(colMeans(rmseRwf))\n\n\nEn general, según el error que desees obtener, deberás modificar estas dos líneas de código como corresponda.\n\n\nAdemás, si hay valores atípicos, puede ser conveniente calcular el error mediano en lugar del error medio."
  },
  {
    "objectID": "03-02-Tema2.html#introducción-1",
    "href": "03-02-Tema2.html#introducción-1",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.1 Introducción",
    "text": "5.1 Introducción\nLos métodos de alisado exponencial aparecen en los años 50 del siglo pasado de la mano de Brown, Holt y Winters (véase Brown 1959; Holt 2004; Winters 1960) y han sido la raíz de uno de los métodos de predicción más sencillos y eficaces. La idea básica es predecir usando una media ponderada de los datos pasados, donde los más recientes tienen un peso mayor y este decae exponencialmente conforme usamos observaciones más antiguas.\nEl alisado exponencial es una familia de métodos de ajuste y previsión que ofrece muy buenos resultados para predicciones a corto plazo o para predecir series con pocos datos o sencillas (sin mucho ruido).\nSuponen un grado de modelización mayor que los métodos sencillos vistos previamente, pero sin alcanzar la complejidad de otras metodologías (modelos ARIMA).\nEn origen, son métodos descriptivos con el único objetivo de producir predicciones puntuales. Sin embargo, su enfoque como modelos de espacio de estados posibilita un marco teórico para obtener intervalos de confianza de las predicciones."
  },
  {
    "objectID": "03-02-Tema2.html#componentes-de-una-serie-en-el-contexto-del-alisado-exponencial",
    "href": "03-02-Tema2.html#componentes-de-una-serie-en-el-contexto-del-alisado-exponencial",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.2 Componentes de una serie en el contexto del alisado exponencial",
    "text": "5.2 Componentes de una serie en el contexto del alisado exponencial\nPara obtener una predicción en el periodo \\(t+1\\) con datos hasta el periodo \\(t\\) necesitamos tres componentes:\n\nLa estimación del nivel de la serie en el periodo \\(t\\): \\(l_t\\)\nLa estimación de la pendiente de la serie en el periodo \\(t\\): \\(b_t\\)\nLa estimación de la estacionalidad en el mes correspondiente al periodo \\(t+1\\) con datos hasta \\(t\\): \\(s_{t + 1 - m}\\) (recuerda, \\(m\\) es el orden estacional\n\nA partir de estas componentes obtenidas en el periodo \\(t\\) y para un esquema aditivo, se tendría que la predicción en el periodo \\(t+1\\) es:\n\\[\\widehat{y}_{t+1} = l_t+b_t+s_{t+1-m}.\\]\nEn general, las componentes pueden existir o no y se pueden combinar entre ellas aditiva o multiplicativamente. Veamos algunos casos:\n\nExisten todas y son multiplicativas: \\(\\widehat{y}_{t+1}=l_t \\cdot b_t \\cdot s_{t + 1 - m}\\)\nExisten todas, nivel y pendiente aditivas, y estacionalidad multiplicativa: \\(\\widehat{y}_{t+1}=(l_t+b_t)s_{t + 1 - m}\\)\nNo hay pendiente y la estacionalidad es aditiva: \\(\\widehat{y}_{t+1}=l_t+s_{t + 1 - m}\\)\n\n\n\n¿Como obtenemos los valores de \\(l_t\\), \\(b_t\\) y \\(s_{t + 1 - m}\\)? Mediante expresiones recursivas, donde cada componente se calcula a partir de los valores hasta \\(t\\) de la serie y de las componentes:\n\\[\n\\begin{aligned}\nl_t& = f_l(y_t,y_{t-1}\\ldots, l_{t-1},l_{t-2}\\ldots,b_{t-1},b_{t-2}\\ldots,s_{t-1},s_{t-2}\\ldots) \\\\\nb_t& = f_b(y_t,y_{t-1}\\ldots, l_{t},l_{t-1}\\ldots,b_{t-1},b_{t-2}\\ldots,s_{t-1},s_{t-2}\\ldots) \\\\\ns_t& = f_s(y_t,y_{t-1}\\ldots, l_{t},l_{t-1}\\ldots,b_{t},b_{t-1}\\ldots,s_{t-1},s_{t-2}\\ldots)\n\\end{aligned}\n\\]\nPor ejemplo, el método ingenuo I se puede interpretar dentro de este contexto como un método de alisado donde \\(l_t = y_t\\) y no hay ni pendiente ni estacionalidad. Por tanto, \\(\\widehat{y}_{t+1} = l_{t} = y_{t}\\).\nDe la misma forma, el método ingenuo II se puede interpretar como un método de alisado donde \\(l_t = y_t\\), \\(b_t = y_t - y_{t-1}\\) y no hay estacionalidad. Entonces, \\(\\widehat{y}_{t+1}=l_t + b_t = y_t + (y_t - y_{t-1})\\).\nEn las expresiones previas hemos supuesto que se quería obtener una predicción a un periodo vista (\\(\\widehat{y}_{t+1}\\)). Si el objetivo es estimar una previsión \\(h\\) periodos hacia delante desde el periodo \\(t\\), \\(\\widehat{y}_{t+h}\\), hay que modificar la ecuación de predicción adecuadamente. Por ejemplo, para el caso aditivo se tendría que\n\\[\\widehat{y}_{t+h} = l_t+hb_t+s_{t+h-m(k+1)}\\] donde \\(k = \\lfloor (h-1)/m\\rfloor\\).\nEl concepto de componentes aquí visto no coincide con el definido en el Tema 1. Sin embargo, podemos asimilar la tendencia de una serie como la suma (o multiplicación) del nivel y la pendiente \\(T_{t+1} = l_t + b_t\\) (o \\(T_{t+1} = l_t \\cdot b_t\\)) y de esta forma ambas definiciones de componentes de una serie se hacen compatibles."
  },
  {
    "objectID": "03-02-Tema2.html#casos-posibles",
    "href": "03-02-Tema2.html#casos-posibles",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.3 Casos posibles",
    "text": "5.3 Casos posibles\nTodas las series tiene nivel, pero dependiendo del tipo de pendiente y estacionalidad hay 15 casos posibles, mostrados en la Tabla 1.\n\n\n\nTabla 1: Casos de alisado según el tipo de tendencia y estacionalidad\n\n\n\n\n\n\n\n\n\n\n\nTendencia\n\nEstacionalidad\n\n\n\n\n\n\nNinguna (N)\nAditiva (A)\nMultiplicativa (M)\n\n\nNinguna (N)\nN, N\nN, A\nN, M\n\n\nAditiva (A)\nA, N\nA, A\nA, M\n\n\nAditiva Amortiguada (Ad)\nAd, N\nAd, A\nAd, M\n\n\nMultiplicativa (M)\nM, N\nM, A\nM, M\n\n\nMultiplicativa Amortiguada (Md)\nMd, N\nMd, A\nMd, M\n\n\n\n\n\n\nCada caso difiere en las componentes que se observan y su esquema, dando lugar a un conjunto diferente de ecuaciones recursivas de actualización.\n\n\nResiduo aditivo versus residuo multiplicativo\nTodo modelo estimado tiene asociado un residuo. En los modelos usuales este error se define como, \\(\\widehat{\\varepsilon}_t = y_t - \\widehat{y}_t\\), pero no tiene por que ser así,. En los modelos de Alisado el residuo estimado puede ser aditivo o multiplicativo.\nSi el residuo es aditivo, entonces el modelo es \\(y_t = \\widehat{y}_t + \\widehat{\\varepsilon}_t\\) y el residuo se define de la forma usual \\[\\widehat{\\varepsilon}_t = y_t - \\widehat{y}_t.\\]\nAhora bien, si el residuo es multiplicativo, entonces el modelo es \\(y_t = \\widehat{y}_t \\cdot (1 + \\widehat{\\varepsilon}_t)\\), y no \\(y_t = \\widehat{y}_t \\cdot \\widehat{\\varepsilon}_t\\) como se podría esperar. Por tanto, el residuo multiplicativo se define como \\[\\widehat{\\varepsilon}_t = (y_t - \\widehat{y}_t)/\\widehat{y}_t.\\]\nDe esta forma en ambos casos –aditivo y multiplicativo– el residuo evoluciona alrededor del valor 0 y se le pueden imponer las hipótesis usuales de ruido blanco. Observa que el error multiplicativo tampoco es el error porcentual tal y como se define para el calculo del MPE o del MAPE.\nEn cualquiera de los casos y para cualquier modelo estimado con R, podemos obtener el residuo con la función residuals.\n\n\nCasos más comunes\nSi a la Tabla 1 se añade que el error puede ser aditivo (A) o multiplicativo (M), tenemos 30 posibilidades. El tipo de error (aditivo o multiplicativo) es, sobre todo, relevante en el cálculo del intervalo de confianza de las predicciones.\nLos modelos más usuales son (error, tendencia, estacionalidad):\n\n(A, N, N): Alisado exponencial simple\n(A, A, N): Alisado de Holt\n(A, Ad, N): Alisado con tendencia amortiguada (d de damped)\n(A, A, A): Alisado de Holt-Winters aditivo\n(M, A, M): Alisado de Holt-Winters multiplicativo1\n\nAcude al artículo de Hyndman and Khandakar (2008) para saber más de cada modelo, o al libro de Hyndman et al. (2008).\n\nLas funciones ets y forecast\nPodemos estimar cualquiera de los treinta modelos usando la función ets del paquete forecast.\n\nEl tipo de modelo en ets se especifica con el argumento model, un código de tres letras indicando el tipo de Error, Tendencia y eStacionalidad (ETS). Por ejemplo, model = \"ANN\" indica un modelo con error aditivo, sin tendencia ni estacionalidad, es decir, el alisado exponencial simple; model = \"AAN\" indica un modelo con error aditivo, pendiente aditiva, pero sin estacionalidad, el alisado exponencial de Holt. El alisado exponencial de Holt-Winters multiplicativo sería model = \"MAM\".\nSi se desea incluir amortiguamiento, hay que añadir el argumento damped = TRUE.\nPor defecto ets no considera modelos con tendencia multiplicativa (últimas dos líneas de la Tabla 1). Debes fijar el parámetro allow.multiplicative.trend=TRUE para contemplar esta opción.\n\nA diferencia de las funciones vistas en el epígrafe 3.1 (naive, meanf, rwf y snaive), la función ets solo estima los modelos, pero no produce predicciones. Para ello habrá que usar la función forecast sobre un modelo estimado con ets. El argumento h de esta función especifica el horizonte temporal de predicción. También puedes usar level para fijar el nivel de confianza del intervalo de predicción.\nMira la ayuda de R para ver una explicación detallada de los argumentos de estas las funciones ets y forecast."
  },
  {
    "objectID": "03-02-Tema2.html#alisado-exponencial-simple-a-n-n",
    "href": "03-02-Tema2.html#alisado-exponencial-simple-a-n-n",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.4 Alisado exponencial simple (A, N, N)",
    "text": "5.4 Alisado exponencial simple (A, N, N)\n\n\n\nDefinición\nEl alisado exponencial simple es adecuado para una serie estacionaria y sin estacionalidad. Es decir, una serie que se mueve alrededor de un nivel medio desconocido: \\(y_t = \\mu + \\varepsilon_t\\). Por tanto, para obtener una predicción en el periodo \\(t+1\\) necesitamos la estimación del nivel de la serie con la información disponible hasta el periodo \\(t\\). Denominaremos a este nivel \\(l_t\\), de esta forma se tendrá que: \\[\\widehat{y}_{t+1} = l_t.\\]\nEs decir, \\(l_t\\) es la estimación del nivel desconocido \\(\\mu\\) con información hasta el periodo \\(t\\).\n¿Pero cómo obtenemos \\(l_t\\)? Mediante una expresión recursiva donde el nivel \\(l_t\\) se calcula a partir de los valores hasta \\(t\\) de la serie y los valores pasados estimados para el nivel. En concreto, para el Alisado exponencial simple la ecuación recursiva de suavizado es \\[l_t=\\alpha y_t + (1-\\alpha)l_{t-1}.\\] Dos estimaciones razonables de \\(l_t\\), el nivel de la serie en el periodo \\(t\\), son el valor observado para la serie en ese periodo \\(y_t\\) y el nivel del periodo previo \\(l_{t-1}\\). La estimación final de \\(l_t\\) es una media ponderada de ambas según el parámetro \\(\\alpha\\), y esta estimación final es la previsión de la serie para el periodo siguiente.\nEl parámetro \\(\\alpha\\) se denomina parámetro de suavizado y verifica que \\(0 \\leq \\alpha \\leq 1\\).\nYa hemos comentado que la ecuación de predicción intramuestral es \\(\\widehat{y}_{t+1} = l_t\\). La ecuación de predicción extramuestral es \\[\\widehat{y}_{T+h} = \\widehat{y}_{T+1} = l_T.\\] El método de Alisado también ofrece predicciones constantes para series sin tendencia ni estacionalidad.\n\n\nEstimación de los parámetros del modelo\nDado el proceso iterativo para el cálculo de \\(l_t\\) se necesita un valor inicial de arranque \\(l_0\\). Cada programa estadístico usa su propio método para obtener \\(l_0\\).\nRespecto de \\(\\alpha\\), usualmente se estima el valor optimo según un criterio de calidad de ajuste. El parámetro \\(\\alpha\\) se puede interpretar:\n\nSi \\(\\alpha = 1\\), la ecuación recursiva queda \\(l_t = y_t\\), es decir, el método ingenuo I (\\(\\widehat{y}_{t+1}=y_t\\)). Este caso es óptimo cuando el nivel de la serie varía constantemente en el tiempo.\nSi \\(\\alpha = 0\\), la ecuación recursiva queda \\(l_t=l_{t-1}=\\ldots = l_0\\), es decir, \\(\\hat y_{t+1}= l_0\\). Esto es óptimo cuando el nivel permanece constante en el tiempo.\n\nEn concreto, ets por defecto estima los parámetros \\(\\alpha\\) y \\(l_0\\) maximizando la función de verosimilitud, pero el argumento opt.crit permite cambiar de criterio. Esta búsqueda está restringida a \\(0 &lt; \\alpha &lt; 1\\). Es decir el parámetro \\(\\alpha\\) nunca puede ser 0 o 1 y en la práctica sus valores limite son 0.0001 y 0.9999.\n\n\nEjemplo de aplicacion a la serie consumo de alimentos en hogar\nAnalizaremos el consumo alimentario en hogar per cápita en España. Esta serie está construida a partir de la serie de consumo alimentario en hogar (disponible en el Ministerio de Agricultura, Alimentación y Medio Ambiente), y la serie de población (disponible en el Instituto Nacional de Estadística). Es una serie anual de 1990 a 2023 (34 datos) y la unidad es el Kg per cápita. La Figura 9 muestra que es una serie estacionaria.\n\nalimentospc &lt;- read.csv2(\"./series/Alimentacionpc.csv\",\n                         header = TRUE)\n\nalimentospc &lt;- ts(alimentospc,\n                  start = 1990, \n                  freq = 1)\n    \nautoplot(alimentospc, \n         xlab = \"\", \n         ylab = \"Kg per cápita\",\n         main = \"\",\n         ylim = c(0, 700))\n\n\n\n\n\n\n\nFigura 9: Consumo alimentario en hogar\n\n\n\n\n\nEl pico en el año 2020 se debe al aumento del consumo de alimentos en el hogar causado por el periodo de confinamiento por la Covid-19 (marzo a junio) y el aumento del trabajo en casa.\nVamos a usar el método de alisado exponencial simple para predecir la serie Consumo de alimento en el hogar. Usaremos para ello la función ets con model = \"ANN\".\n\netsAlimentospc &lt;- ets(alimentospc, \n                      model = \"ANN\")\n\nsummary(etsAlimentospc)\n\nETS(A,N,N) \n\nCall:\nets(y = alimentospc, model = \"ANN\")\n\n  Smoothing parameters:\n    alpha = 0.954 \n\n  Initial states:\n    l = 625.4154 \n\n  sigma:  22.0981\n\n     AIC     AICc      BIC \n334.3284 335.1284 338.9074 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -2.138992 21.43828 14.04374 -0.4243009 2.243991 0.9810031\n                    ACF1\nTraining set 0.004506905\n\n\nVeamos la salida en detalle:\n\nEl valor de \\(\\alpha\\) óptimo (minimiza la verosilimilitud) es \\(\\alpha =\\) 0.95, un valor muy cercano a 1. Es decir, el nivel de Alimentos varía constantemente en el tiempo.\nEl valor de arranque \\(l_0\\) óptimo es 625.42. Es decir, el año 1989 (año anterior al primero de la serie) se estima un nivel de consumo de 625.42 kg per cápita.\nsigma es la desviación típica del error (aditivo) de predicción. Se diferencia de RMSE en el denominador. Para calcular sigma en lugar de dividir por \\(T\\) se divide por \\(T-k\\), donde \\(k\\) es el número de parámetros estimados por el modelo. En este caso, \\(k=3\\): \\(l_0\\), \\(\\alpha\\) y sigma. Sí, sigma se considerará siempre otro parámetro estimado.\nSe obtiene un AICc \\(= 335.13\\). Si estimamos un modelo con error multiplicativo, obtendremos un AICc mayor.\nLa calidad del ajuste es buena, como evidencia el error porcentual medio del 2.2%. Además, no hay sesgo (MPE = -0.42%) y el cálculo de la predicciones por intervalo es correcto (ACF1 = 0.0045).\nComo el valor de \\(\\alpha\\) es próximo a 1, el modelo de Alisado se aproxima mucho al Ingenuo I. Por este motivo el MASE es casi igual a 1.\n\nEn el objeto etsAlimentospc la matriz etsAlimentospc$states guarda todos los valores del nivel obtenidos con la ecuación recursiva, incluido el valor de arranque, así que es una matriz con \\(T+1\\) filas (35 en el ejemplo). Puedes ver en su última fila que el valor de \\(l_{2023}\\), el nivel del último año, vale 556.03.\n\ntail(etsAlimentospc$states, 1)\n\nTime Series:\nStart = 2023 \nEnd = 2023 \nFrequency = 1 \n            l\n[1,] 556.0329\n\n\nPor tratarse de un modelo sin pendiente ni estacionalidad, la predicción es constante en el tiempo. Recuerda que \\(\\widehat{y}_{T+h} = l_T\\). Así, la predicción para 2024 es \\(\\widehat{y}_{2024}=l_{2023}=\\) 556.03. Igualmente \\(\\widehat{y}_{2025}=l_{2023}=\\) 556.03. Todas las previsiones son iguales a \\(l_{2023}\\).\nMediante la función forecast podemos predecir el consumo de alimentos per cápita para los próximos cinco años.\n\netsAlimentospcf &lt;- forecast(etsAlimentospc,\n                            h = 5, \n                            level = 95)\netsAlimentospcf\n\n     Point Forecast    Lo 95    Hi 95\n2024       556.0329 512.7215 599.3443\n2025       556.0329 496.1726 615.8932\n2026       556.0329 483.2962 628.7696\n2027       556.0329 472.3789 639.6870\n2028       556.0329 462.7303 649.3355\n\n\nLa Figura 10 muestra la serie Consumo de alimentos, las previsiones extramuestrales que son constantes y el intervalo de confianza. Conforme aumentamos el horizonte de predicción, el intervalo de confianza es más amplio como reflejo de la mayor incertidumbre en la predicción.\n\nautoplot(etsAlimentospcf,\n         xlab = \"\",\n         ylab = \"Kg per cápita\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 10: Consumo de alimentos per cápita (1990 - 2023) y predicción con Alisado exponencial simple"
  },
  {
    "objectID": "03-02-Tema2.html#alisado-exponencial-de-holt-a-a-n",
    "href": "03-02-Tema2.html#alisado-exponencial-de-holt-a-a-n",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.5 Alisado exponencial de Holt (A, A, N)",
    "text": "5.5 Alisado exponencial de Holt (A, A, N)\nEl alisado exponencial de Holt es adecuado para una serie no estacionaria y sin estacionalidad.\n\n\n\nFormulas interactivas de sus componentes\nLas ecuaciones recursivas son\n\\[\n\\begin{aligned}\nl_t & =\\alpha y_t + (1-\\alpha)(l_{t-1}+b_{t-1}) \\\\\nb_t & =\\beta (l_t - l_{t-1}) + (1-\\beta)b_{t-1}\n\\end{aligned}\n\\]\nLa ecuación de la predicción intramuestral a un periodo vista es\n\\[\\widehat{y}_{t+1} = l_t + b_t,\\] de forma que la ecuación de predicción extramuestral es \\[\\widehat{y}_{T+h}=l_T + h b_T.\\]\nDos estimaciones razonables del nivel de la serie en el periodo \\(t\\) son el valor observado para la serie en ese periodo \\(y_t\\), y una estimación del nivel del periodo \\(t\\) realizada desde el periodo \\(t-1\\): \\(l_{t-1} + b_{t-1}\\). Por otro lado, dos estimaciones razonables de la pendiente de la serie en el periodo \\(t\\) son el cambio de nivel de \\(t-1\\) a \\(t\\) (el último observado) \\(l_t-l_{t-1}\\), y el valor de la pendiente en el periodo previo, \\(b_{t-1}\\). En ambos casos, nivel y pendiente, la estimación final es una media ponderada, parametrizada por \\(0 &lt; \\alpha, \\beta &lt; 1\\).\nObserva que el método ingenuo II es un caso concreto de Alisado de Holt. Si hacemos \\(\\alpha=\\beta = 1,\\) queda \\(l_t=y_t\\) y \\(b_t=y_t-y_{t-1}\\), por tanto \\[\\widehat{y}_{t+1}=l_t + b_t = y_t + (y_t - y_{t-1})\\] y \\[\\widehat{y}_{T+h}=l_T + h \\cdot b_T = y_T + h(y_T - y_{T-1}).\\]\n\n\n\n\n\n\n¿Sabrías responder a estas preguntas?\n\n\n\nHemos visto que en modelo de Alisado con tendencia, si \\(\\alpha = \\beta = 1\\), la ecuación de predicción que queda es la del método Ingenuo II.\n¿Cómo quedaría la ecuación de predicción si \\(\\alpha = \\beta = 0\\)?\n¿Y si \\(\\alpha = 1\\) y \\(\\beta = 0\\)? ¿Y si \\(\\alpha = 0\\) y \\(\\beta = 1\\)?\n\n\n\n\nEstimación de los parámetros del modelo\nPara aplicar este método es necesario estimar unos valores iniciales \\(l_0\\) y \\(b_0\\) de las ecuaciones recursivas e identificar los valores más adecuados de los parámetros \\(\\alpha\\) y \\(\\beta\\).\nLa función ets por defecto estima los parámetros \\(\\alpha\\), \\(\\beta\\), \\(l_0\\) y \\(b_0\\) maximizando la función de verosimilitud. En este caso la búsqueda está restringida a \\(0 &lt; \\beta &lt; \\alpha &lt; 1\\). Por tanto, \\(\\alpha\\) y \\(\\beta\\) nunca pueden ser 0 o 1 y en la práctica sus valores limite son 0.0001 y 0.9999.\nLa interpretación del parámetro \\(\\alpha\\) es similar al caso del alisado exponencial simple.\nInterpretación del parámetro \\(\\beta\\):\n\nSi \\(\\beta = 1\\), \\(b_t = l_t - l_{t-1}\\), la pendiente se actualiza constantemente porque varía periodo a periodo Puede ser un indicador de mal ajuste (tendencia no lineal o pendiente no aditiva).\nSi \\(\\beta = 0\\), \\(b_t = b_{t-1}= \\ldots = b_0\\), la pendiente se mantiene constante en el tiempo.\n\n\n\nEjemplo de aplicación a la serie Residuos\nVamos a usar el método de alisado de Holt para predecir la serie Residuos. Usaremos para ello la función ets con el argumento model = \"AAN\" (error y tendencia aditivas sin estacionalidad). Además, es necesario añadir el argumento damped = FALSE para prevenir el uso de tendencia amortiguada, que veremos en el siguiente epígrafe.\n\netsResiduos &lt;- ets(residuos, \n                   model = \"AAN\",\n                   damped = FALSE)\nsummary(etsResiduos)\n\nETS(A,A,N) \n\nCall:\nets(y = residuos, model = \"AAN\", damped = FALSE)\n\n  Smoothing parameters:\n    alpha = 0.9917 \n    beta  = 1e-04 \n\n  Initial states:\n    l = 568.957 \n    b = -2.8916 \n\n  sigma:  26.1313\n\n     AIC     AICc      BIC \n281.7210 284.4483 288.3820 \n\nTraining set error measures:\n                     ME     RMSE      MAE        MPE     MAPE     MASE\nTraining set -0.7573797 24.19288 18.21516 -0.2531821 3.386255 1.102711\n                  ACF1\nTraining set 0.2192994\n\n\nLos valores óptimos de los cuatro parámetros estimados son \\(\\alpha=\\) 0.99, \\(\\beta=\\) 0, \\(l_0 =\\) 568.96 y \\(b_0 =\\) -2.89.\nObserva que \\(\\alpha\\) es prácticamente 1 y que \\(\\beta\\) es cero. Si aplicamos estos valores de los parámetros a las ecuaciones recursivas y la predicción extramuestral, obtenemos \\(y_{T+h}=y_T + h\\cdot b_0\\): la predicción es el último valor observado más \\(h\\) veces la primera pendiente estimada. La calidad de las predicciones es razonable, con un error porcentual medio del 3.4%.\nPor otro lado, el valor de \\(l_0\\) indica que el nivel estimado para el volumen de residuos de 1994 es de 568.96. Además, el incremento entre 1994 y 1995 se estima en \\(b_0 =\\) -2.89.\n\n\n\n\n\n\nParámetros estimados\n\n\n\n¿Cuántos parámetros se han estimado (y la respuesta no es 4)? ¿Cuál es el denominador en el cálculo de RMSE y de sigma?\n\n\nEn el objeto etsResiduos la matriz etsResiduos$states guarda todos los valores obtenidos con las ecuaciones recursivas, en este caso el nivel y la pendiente, incluidos los valores de arranque. Puedes ver los valores de \\(l_{2022}\\) y \\(b_{2022}\\) en su última fila, que valen respectivamente\n\ntail(etsResiduos$states, 1)\n\nTime Series:\nStart = 2022 \nEnd = 2022 \nFrequency = 1 \n            l         b\n2022 466.9747 -2.893718\n\n\nAsí, la predicción para \\(2023\\) es \\(\\widehat{y}_{2023}=l_{2022} + b_{2022}=\\) 466.97 \\(+\\) -2.89 \\(=\\) 464.08. Igualmente \\(\\widehat{y}_{2024}=l_{2022} + 2\\cdot b_{2022}=\\) 461.19. Es decir, la diferencia entre previsiones consecutivas es constante e igual a \\(b_{2022}\\) que, por ser \\(\\beta\\) prácticamente nulo, casi coincide con \\(b_0\\).\n\netsResiduosf &lt;- forecast(etsResiduos,\n                         h = 5, \n                         level = 95)\netsResiduosf\n\n     Point Forecast    Lo 95    Hi 95\n2023       464.0810 412.8646 515.2974\n2024       461.1873 389.0510 533.3236\n2025       458.2936 370.0626 546.5245\n2026       455.3998 353.5850 557.2147\n2027       452.5061 338.7153 566.2970\n\n\nLa Figura 11 muestra la serie Residuos y las previsiones extramuestrales, que muestran una ligera tendencia decreciente.\n\nautoplot(etsResiduosf,\n         xlab = \"\",\n         ylab = \"Kg per cápita\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 11: Residuos y predicción con alisado de Holt"
  },
  {
    "objectID": "03-02-Tema2.html#alisado-exponencial-con-pendiente-amortiguada-a-ad-n",
    "href": "03-02-Tema2.html#alisado-exponencial-con-pendiente-amortiguada-a-ad-n",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.6 Alisado exponencial con pendiente amortiguada (A, Ad, N)",
    "text": "5.6 Alisado exponencial con pendiente amortiguada (A, Ad, N)\nLas previsiones con el método de Holt presentan siempre una pendiente constante. En previsiones a corto plazo esto no es un problema, pero para previsiones a largo plazo la experiencia indica que suele aparecer un sesgo de previsión. El alisado exponencial con pendiente amortiguada trata de corregir esta limitación. El mecanismo, propuesto por Gardner and Mckenzie (1985), es introducir un nuevo parámetro \\(0 \\leq \\phi \\leq 1\\) que amortigua la tendencia hasta hacerla plana en el largo plazo.\n\nFormulas interactivas de sus componentes\nLas ecuaciones recursivas son\n\\[\n\\begin{aligned}\nl_t & =\\alpha y_t + (1-\\alpha)(l_{t-1}+\\phi b_{t-1}) \\\\\nb_t & =\\beta (l_t - l_{t-1}) + (1-\\beta)\\phi b_{t-1}\n\\end{aligned}\n\\]\nLa ecuación de la predicción intramuestral a un periodo vista es \\[\\widehat{y}_{t+1} = l_t + \\phi b_t,\\] de forma que la ecuación de predicción extramuestral es \\[\\widehat{y}_{T+h}=l_T + (\\phi + \\phi^2 + \\ldots + \\phi^h) b_T.\\]\nSe ha añadido un nuevo parámetro \\(\\phi\\in [0, 1]\\) que acompaña siempre a la pendiente \\(b_t\\). Si \\(\\phi = 1\\), se tiene el alisado de Holt y si \\(\\phi = 0\\), se tiene el alisado simple. Se puede comprobar que en el largo plazo las predicciones se hacen constantes e iguales a \\(l_T + \\phi b_T/(1 - \\phi)\\).\nPor razones prácticas el rango de búsqueda de \\(\\phi\\) queda en el intervalo \\([0.8, 0.98]\\). Si el valor óptimo de \\(\\phi\\) fuera su valor máximo de \\(0.98\\) o muy cercano a este, cabría plantearse si no sería más adecuado un modelo sin amortiguamiento.\n\n\nEjemplo de aplicación a la serie Residuos\nVamos a usar el método de Alisado con amortiguamiento para predecir, una vez más, la serie Residuos añadiendo a la función ets el argumento damped = TRUE. En este caso, para ver el efecto del amortiguamiento vamos a pedir un horizonte temporal de previsión más largo.\n\netsDResiduos &lt;- ets(residuos, \n                    model = \"AAN\", \n                    damped = TRUE)\nsummary(etsDResiduos)\n\nETS(A,Ad,N) \n\nCall:\nets(y = residuos, model = \"AAN\", damped = TRUE)\n\n  Smoothing parameters:\n    alpha = 0.9999 \n    beta  = 0.1808 \n    phi   = 0.8 \n\n  Initial states:\n    l = 564.3968 \n    b = 14.5779 \n\n  sigma:  26.4267\n\n     AIC     AICc      BIC \n283.1587 287.1587 291.1520 \n\nTraining set error measures:\n                    ME    RMSE      MAE        MPE     MAPE     MASE       ACF1\nTraining set -3.193352 23.9512 17.42662 -0.6361345 3.226137 1.054975 0.04099902\n\n\nEl valor óptimo del parámetro \\(\\phi\\) es \\(0.8\\) y el error porcentual 3.2%, algo inferior al obtenido con el alisado de Holt sin amortiguamiento. Además, el modelo de Alisado con amortiguamiento genera intervalos de predicción correctos, cosa que no ocurría con el modelo de Alisado de Holt.\n\n\n\n\n\n\nParámetros estimados\n\n\n\n¿Cuántos parámetros se han estimado en este caso? ¿Cuáles?\n\n\nLa Figura 12 muestra la serie Residuos, su estimación intramuestral y las predicciones a 15 años vista. Observa que la pendiente de las previsiones se amortigua en el tiempo, de forma que al principio las previsiones crecen más rápidamente que en los últimos años.\n\netsDResiduosf &lt;- forecast(etsDResiduos, \n                          h = 15,\n                          level = 95)\netsDResiduosf\n\n     Point Forecast    Lo 95    Hi 95\n2023       467.3276 415.5323 519.1229\n2024       467.5896 388.8679 546.3113\n2025       467.7992 365.5349 570.0635\n2026       467.9669 343.9999 591.9340\n2027       468.1011 323.7753 612.4269\n2028       468.2084 304.6386 631.7782\n2029       468.2943 286.4588 650.1298\n2030       468.3630 269.1417 667.5842\n2031       468.4179 252.6118 684.2240\n2032       468.4619 236.8035 700.1202\n2033       468.4971 221.6584 715.3357\n2034       468.5252 207.1236 729.9268\n2035       468.5477 193.1509 743.9445\n2036       468.5657 179.6963 757.4351\n2037       468.5801 166.7198 770.4405\n\nautoplot(etsDResiduosf,\n         xlab = \"\",\n         ylab = \"Kg per cápita\",\n         main = \"\",\n         PI = FALSE)\n\n\n\n\n\n\n\nFigura 12: Residuos y predicción con alisado exponencial con amortiguamiento"
  },
  {
    "objectID": "03-02-Tema2.html#alisado-de-holt-winters-aditivo-a-a-a-y-multiplicativo-m-a-m",
    "href": "03-02-Tema2.html#alisado-de-holt-winters-aditivo-a-a-a-y-multiplicativo-m-a-m",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.7 Alisado de Holt-Winters aditivo (A, A, A) y multiplicativo (M, A, M)",
    "text": "5.7 Alisado de Holt-Winters aditivo (A, A, A) y multiplicativo (M, A, M)\nEl método de alisado exponencial de Holt-Winters es adecuado para una serie con tendencia y estacionalidad. Existen dos versiones según que el esquema sea aditivo o multiplicativo.\n\n5.7.1 Alisado de Holt-Winters aditivo (A, A, A)\nLas ecuaciones recursivas de actualización son:\n\\[\n\\begin{aligned}\nl_t & =\\alpha (y_t - s_{t-m} ) + (1-\\alpha)(l_{t-1}+b_{t-1}) \\\\\nb_t & =\\beta (l_t - l_{t-1}) + (1-\\beta)b_{t-1} \\\\\ns_t & =\\gamma (y_t - l_{t-1} - b_{t-1}) + (1 - \\gamma)s_{t-m}\n\\end{aligned}\n\\] con \\(0 \\leq \\alpha, \\beta, \\gamma \\leq 1\\).\nLa ecuación de la predicción intramuestral a un periodo vista es \\[\\widehat{y}_{t+1}  = l_t + b_t + s_{t+1-m},\\] de forma que la ecuación de predicción extramuestral es: \\[\\widehat{y}_{T+h}=l_T + h b_T + s_{T+h - m(k+1)},\\] con \\(k = \\lfloor(h-1)/m\\rfloor\\).\nObserva que las ecuaciones para el nivel y la pendiente son similares a las ya vistas para el método de Holt. Respecto de la ecuación de actualización de la estacionalidad, dos estimaciones razonables de esta componente en el periodo \\(t\\) son su valor estimado a partir de la serie menos su tendencia \\(y_t-l_{t-1} - b_{t-1}\\), y la estimación que ya teníamos de la estacionalidad previamente, \\(s_{t-m}\\). La estimación final es una media ponderada, parametrizada por \\(0 \\leq \\gamma &lt; 1 - \\alpha\\).\nInterpretación del parámetro \\(\\gamma\\):\n\nSi \\(\\gamma = 1\\), \\(s_t = y_t - l_{t-1} - b_{t-1}\\), la estacionalidad se actualiza constantemente porque varía periodo a periodo\nSi \\(\\gamma = 0\\), \\(s_t = s_{t-m}= \\ldots = s_0\\), la estacionalidad se mantiene constante en el tiempo.\n\n\n\n\n\n5.7.2 Alisado de Holt-Winters multiplicativo (M, A, M)\nLas ecuaciones recursivas de actualización son:\n\\[\n\\begin{aligned}\nl_t & =\\alpha \\frac{y_t}{s_{t-m}} + (1-\\alpha)(l_{t-1}+b_{t-1}) \\\\\nb_t & =\\beta (l_t - l_{t-1}) + (1-\\beta)b_{t-1} \\\\\ns_t & =\\gamma \\frac{y_t}{l_{t-1} + b_{t-1}} + (1 - \\gamma)s_{t-m}\n\\end{aligned}\n\\]\nLa ecuación de la predicción intramuestral a un periodo vista es \\[\\widehat{y}_{t+1}  = (l_t + b_t)s_{t+1-m},\\] de forma que la ecuación de predicción extramuestral es: \\[\\widehat{y}_{T+h}=(l_T + h b_T)s_{T+h - m(k+1)}.\\]\n\n\nEjemplo con Demanda electrica\nVamos a usar el método de Holt-Winters Aditivo para predecir la serie Demanda eléctrica, que presentaba un esquema aditivo. Para ello usaremos la función ets con el argumento model = \"AAA\" (y damped = FALSE). Vamos a considerar la serie desde el 31 de enero (lunes) hasta el 29 de mayo (domingo), 17 semanas, y pedir una previsión a dos semanas vista.\nEn el proceso de estimación, el parámetro \\(\\gamma\\) que gobierna la componente estacional está restringido a \\(0 &lt; \\gamma &lt; 1 - \\alpha\\).\n\n#Nos quedamos con los meses de febrero a mayo.\nelectricidadr &lt;- window(electricidad, \n                       start = c(6, 1), \n                       end = c(22, 7)) \n\nelectricidadEts &lt;- ets(electricidadr, \n                       model = \"AAA\", \n                       damped = FALSE)\n\nsummary(electricidadEts)\n\nETS(A,A,A) \n\nCall:\nets(y = electricidadr, model = \"AAA\", damped = FALSE)\n\n  Smoothing parameters:\n    alpha = 0.8419 \n    beta  = 1e-04 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 780.2591 \n    b = -1.8221 \n    s = -87.4594 -44.3072 23.796 31.7069 36.0368 33.1677\n           7.0592\n\n  sigma:  21.6969\n\n     AIC     AICc      BIC \n1313.540 1316.483 1346.889 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set 0.4169372 20.66976 12.47516 0.01009548 1.983464 0.4469223\n                   ACF1\nTraining set 0.04680857\n\n\nLos valores óptimos de los parámetros son \\(\\alpha=\\) 0.84, \\(\\beta=\\) 0 y \\(\\gamma=\\) 0. Los valores nulos para \\(\\beta\\) y \\(\\gamma\\) indican que ambas, la pendiente y la estacionalidad, permanecen constantes en el tiempo (véase Figura 13).\n\nautoplot(electricidadEts)\n\n\n\n\n\n\n\nFigura 13: Componentes del modelo de Holt-Winters aditivo para Demanda eléctrica\n\n\n\n\n\nLa calidad de las predicciones es notable, con un error porcentual medio del 2%.\nLos últimos valores de las componentes son,\n\nTT &lt;- nrow(electricidadEts$states)\nelectricidadEts$states[TT,]\n\n\n\n      l       b      s1      s2      s3      s4      s5      s6      s7 \n604.971  -1.817 -87.460 -44.308  23.797  31.711  36.039  33.168   7.059 \n\n\nComo el último dato de la serie es domingo 28 de mayo, los valores del nivel \\(l\\) y la pendiente \\(b\\) mostrados corresponden a ese día. Sin embargo, la componente estacional tiene un orden muy peculiar: s1 es el valor estacional para domingo (día del último dato), s2 el de sábado, s3 de viernes, hasta s7 que sería lunes. Podemos reproducir las predicciones para los próximos 7 días, 29 de mayo a 4 de junio (ojo, el etiquetado de la salida no tiene sentido):\n\nelectricidadEts$states[TT, 1] + (1:7)*electricidadEts$states[TT, 2] + \n  electricidadEts$states[TT, 9:3]\n\n      s7       s6       s5       s4       s3       s2       s1 \n610.2132 634.5048 635.5587 629.4137 619.6828 549.7608 504.7916 \n\n\nO mejor usar la función forecast para obtener las predicciones y sus intervalos a dos semanas vista.\n\nelectricidadf &lt;- forecast(electricidadEts,\n                          h = 14, \n                          level = 95)\nelectricidadf\n\n         Point Forecast    Lo 95    Hi 95\n23.00000       610.2132 567.6881 652.7383\n23.14286       634.5048 578.9141 690.0955\n23.28571       635.5587 569.4332 701.6841\n23.42857       629.4137 554.2131 704.6143\n23.57143       619.6828 536.3882 702.9773\n23.71429       549.7608 459.0903 640.4313\n23.85714       504.7916 407.3001 602.2832\n24.00000       597.4935 493.6249 701.3621\n24.14286       621.7851 511.9090 731.6612\n24.28571       622.8390 507.2659 738.4121\n24.42857       616.6940 495.6906 737.6974\n24.57143       606.9631 480.7616 733.1646\n24.71429       537.0411 405.8461 668.2360\n24.85714       492.0719 356.0657 628.0782\n\n\nLa Figura 14 muestra la serie Demanda eléctrica y las previsiones extramuestrales.\n\nautoplot(electricidadf,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\",\n         PI = FALSE)\n\n\n\n\n\n\n\nFigura 14: Demanda eléctrica y predicción con alisado de Holt-Winters aditivo\n\n\n\n\n\n\n\nEjemplo con Nacimientos\nVamos a usar el método de Holt-Winters multiplicativo para predecir la serie Nacimientos, que presentaba un esquema multiplicativo. En este caso usaremos el argumento model = \"MAM\". Vamos a considerar la serie Nacimientos desde enero de 2000 y pedir una previsión a dos años vista.\n\nnacimientosb &lt;- window(nacimientos, start = 2000)\n\nnacimientosbEts &lt;- ets(nacimientosb, \n                       model = \"MAM\", \n                       damped = FALSE)\n\nsummary(nacimientosbEts)\n\nETS(M,A,M) \n\nCall:\nets(y = nacimientosb, model = \"MAM\", damped = FALSE)\n\n  Smoothing parameters:\n    alpha = 0.6204 \n    beta  = 0.0558 \n    gamma = 5e-04 \n\n  Initial states:\n    l = 33046.8523 \n    b = 131.8326 \n    s = 0.9952 0.9997 1.0552 1.041 1.0305 1.0353\n           0.9755 1.0058 0.9641 0.9947 0.9081 0.995\n\n  sigma:  0.0279\n\n     AIC     AICc      BIC \n5610.133 5612.400 5672.403 \n\nTraining set error measures:\n                    ME     RMSE      MAE         MPE     MAPE      MASE\nTraining set -5.134912 897.6154 676.3738 -0.05344224 1.964899 0.4945157\n                     ACF1\nTraining set -0.009251017\n\n\nLos valores óptimos de los parámetros son \\(\\alpha=\\) 0.62, \\(\\beta=\\) 0.06 y \\(\\gamma=\\) 0. Los valores tan bajos para \\(\\beta\\) y \\(\\gamma\\) indican que ambas, la pendiente y la estacionalidad, modifican su valor muy lentamente (véase Figura 15).\n\nautoplot(nacimientosbEts)\n\n\n\n\n\n\n\nFigura 15: Componentes del modelo de Holt-Winters multiplicativo para Nacimientos\n\n\n\n\n\nLa calidad de las predicciones es notable, con un error porcentual medio inferior al 2%.\nLos últimos valores de las componentes son,\n\nTT &lt;- nrow(nacimientosbEts$states)\nnacimientosbEts$states[TT,]\n\n\n\n        l         b        s1        s2        s3        s4        s5        s6 \n27299.663    10.796     0.995     1.000     1.055     1.041     1.030     1.035 \n       s7        s8        s9       s10       s11       s12 \n    0.976     1.006     0.964     0.995     0.908     0.995 \n\n\nComo el último dato de la serie es diciembre de 2023, los valores del nivel \\(l\\) y la pendiente \\(b\\) mostrados corresponden a ese mes. Sin embargo, recuerda que la componente estacional sigue un orden inverso: s1 es el valor estacional para diciembre (mes del último dato), s2 el de noviembre, s3 de octubre, hasta s11 que sería febrero y s12 que es enero.\nPodemos reproducir las predicciones para los primeros 12 meses de enero a diciembre (recuerda, el etiquetado de la salida no es correcto) para ver que coinciden con las obtenidas con la función forecast (solo se muestran los primeros meses).\n\n(nacimientosbEts$states[TT, 1] + (1:12)*nacimientosbEts$states[TT, 2]) * \n  nacimientosbEts$states[TT, 14:3]\n\n     s12      s11      s10       s9       s8       s7       s6       s5 \n27173.03 24809.49 27186.43 26359.96 27513.50 26694.74 28342.40 28220.86 \n      s4       s3       s2       s1 \n28520.17 28920.10 27410.90 27296.89 \n\n\n\nnacimientosbf &lt;- forecast(nacimientosbEts, \n                              h = 24, \n                              level = 95)\nnacimientosbf\n\n\n\n         Point Forecast    Lo 95    Hi 95\nJan 2024       27173.03 25687.72 28658.35\nFeb 2024       24809.49 23172.46 26446.53\nMar 2024       27186.43 25088.71 29284.16\nApr 2024       26359.96 24031.04 28688.89\nMay 2024       27513.50 24772.00 30254.99\n\n\nLa Figura 16 muestra la serie Nacimientos y las previsiones extramuestrales.\n\nautoplot(nacimientosbf,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\",\n         PI = FALSE)\n\n\n\n\n\n\n\nFigura 16: Nacimientos y predicción con alisado de Holt-Winters multiplicativo"
  },
  {
    "objectID": "03-02-Tema2.html#ejemplo-con-transformación-logarítmica",
    "href": "03-02-Tema2.html#ejemplo-con-transformación-logarítmica",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.8 Ejemplo con transformación logarítmica",
    "text": "5.8 Ejemplo con transformación logarítmica\nUna alternativa para predecir cualquier serie es predecir su transformación logarítmica. Después, se aplica la transformación inversa y se obtienen las predicciones de la serie original. No siempre, pero este procedimiento puede mejorar la calidad de las predicciones. Además, este proceso asegura que las predicciones y sus intervalos sean siempre positivas (ve a la píldora Series acotadas para aprender más sobre cómo garantizar que las predicciones sean positivas o que permanezcan dentro de cierto intervalo).\nEl uso de la transformación logarítmica en la estimación de modelos y predicción se puede realizar de forma sencilla y transparente con cualquiera de las funciones de que hemos visto a partir de los argumentos lambda y biasadj.\n\nlambda = 0 indica que se ha de realizar la transformación logarítmica de la serie previamente a su modelización. Es un parámetro de la transformación Box-Cox que no veremos en detalle en el tema 3.\nbiasadj = TRUE es necesario si tras una transformación de la serie original queremos que las predicciones sean insesgadas. Es decir, queremos obtener la predicción media.\nSea \\(y_t\\) la serie original y \\(z_t=log(y_t)\\) su transformación logarítmica. Si obtenemos una predicción \\(\\widehat{y}_t\\) de la serie original, esta será insesgada \\(E[\\widehat{y}_t]=y_t\\). Ahora bien, si obtenemos una predicción \\(\\widehat{z}_t\\) de la serie transformada, podemos pensar que \\(e^{\\widehat{z}_t}\\) es una predicción insesgada de la serie original, pero resulta que \\(E[e^{\\widehat{z}_t}] \\neq y_t\\). Es decir, la exponencial de la predicción de la serie con transformada logarítmica no es insesgada.\nSi el argumento biasadj es fijado a FALSE, las predicciones se calcularán de forma directa deshaciendo la transformación y serán sesgadas. En concreto, lo que se obtiene es una predicción mediana. Si, por el contrario, es fijado a TRUE, las predicciones se calcularán por medio de una fórmula alternativa y serán insesgadas.\nEn ambos casos, para series largas no debería observarse mucha diferencia entre las dos alternativas.\n\nVamos a practicar el uso de estos argumentos con la serie Nacimientos. Como se va a predecir el logaritmo de la serie, se debe indicar a la función ets model = \"AAA\" que estima el modelo Holt-Winters aditivo. Además, vamos a pedir que las predicciones sean insesgadas con biasadj = TRUE.\n\nnacimientosbEtsl &lt;- ets(nacimientosb, \n                     model = \"AAA\",\n                     damped = FALSE,\n                     lambda = 0, \n                     biasadj = TRUE)\n\nsummary(nacimientosbEtsl)\n\nETS(A,A,A) \n\nCall:\nets(y = nacimientosb, model = \"AAA\", damped = FALSE, lambda = 0, \n    biasadj = TRUE)\n\n  Box-Cox transformation: lambda= 0 \n\n  Smoothing parameters:\n    alpha = 0.1705 \n    beta  = 0.0167 \n    gamma = 0.238 \n\n  Initial states:\n    l = 10.4339 \n    b = 0.0018 \n    s = -0.003 -0.0019 0.0714 0.0414 0.0262 0.0501\n           -0.033 0.0193 -0.0347 7e-04 -0.0825 -0.054\n\n  sigma:  0.0319\n\n      AIC      AICc       BIC \n-335.7953 -333.5286 -273.5250 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -44.35512 1027.493 790.4967 -0.1628669 2.306132 0.5779541\n                  ACF1\nTraining set 0.3934765\n\nnacimientosbfl &lt;- forecast(nacimientosbEtsl,\n                           h = 24,\n                           level = 95,\n                           biasadj = TRUE)\nnacimientosbfl\n\n         Point Forecast    Lo 95    Hi 95\nJan 2024       26135.50 24538.61 27808.00\nFeb 2024       23986.95 22496.49 25549.22\nMar 2024       26440.42 24765.65 28197.52\nApr 2024       25043.49 23422.65 26745.85\nMay 2024       26220.07 24482.22 28047.52\nJun 2024       26154.97 24375.98 28028.23\nJul 2024       27892.18 25941.54 29949.25\nAug 2024       27928.60 25916.90 30053.54\nSep 2024       27736.43 25675.61 29917.12\nOct 2024       28239.86 26072.73 30537.46\nNov 2024       26788.88 24663.29 29047.04\nDec 2024       26108.97 23965.13 28391.50\nJan 2025       25772.10 23459.27 28249.45\nFeb 2025       23654.81 21463.52 26007.37\nMar 2025       26075.92 23581.11 28760.82\nApr 2025       24699.86 22258.22 27334.22\nMay 2025       25862.07 23219.93 28720.32\nJun 2025       25799.72 23075.26 28755.17\nJul 2025       27515.41 24511.85 30782.96\nAug 2025       27553.51 24444.55 30945.78\nSep 2025       27366.17 24174.78 30859.08\nOct 2025       27865.28 24507.29 31552.14\nNov 2025       26435.89 23144.69 30061.20\nDec 2025       25767.32 22454.11 29429.10\n\n\nEn este caso la calidad de las predicciones (MAPE = 2.3%) es algo superior a la obtenida con la serie sin transformar.\nLa Figura 17 muestra la serie Nacimientos y las previsiones extramuestrales obtenidas con y sin la transformación logarítmica. En este caso, las previsiones con la serie sin transformar son algo mayores que las obtenidas con la serie transformada.\n\n\n\n\n\n\n\n\nFigura 17: Nacimientos y dos predicciones con alisado de Holt-Winters\n\n\n\n\n\nLa Tabla 2 muestra las predicciones de Nacimientos obtenidas sin transformar la serie, con transformación logarítmica y predicciones insesgadas (biasadj = TRUE), y con transformación logarítmica y predicciones sesgadas (biasadj = FALSE).\n\n\n\n\nTabla 2: Diferencias en la predicción según transformación logarítmica y corrección por sesgo\n\n\n\n\n\n\nSin transformar\nlog(Nac) insesgadas\nlog(Nac) sesgadas\n\n\n\n\n27173.03\n26135.50\n26122.21\n\n\n24809.49\n23986.95\n23974.32\n\n\n27186.43\n26440.42\n26425.93\n\n\n26359.96\n25043.49\n25029.15\n\n\n27513.50\n26220.07\n26204.31\n\n\n26694.74\n26154.97\n26138.39\n\n\n28342.40\n27892.18\n27873.46\n\n\n28220.86\n27928.60\n27908.68\n\n\n28520.17\n27736.43\n27715.35\n\n\n28920.10\n28239.86\n28216.92\n\n\n27410.90\n26788.88\n26765.57\n\n\n27296.89\n26108.97\n26084.59\n\n\n\n\n\n\n\n\nLas predicciones sesgadas son menores que las insesgadas. Esto siempre es así. La diferencia depende fundamentalmente de la desviación típica del error, sigma en la salida de los métodos de alisado exponencial. Cuanto mayor es sigma, mayores son las diferencias.\nPor otro lado, las predicciones obtenidas sin y con la transformación logarítmica no guardan ninguna relación.\nNi la transformación logarítmica ni el uso de predicciones insesgadas aseguran mejores predicciones respecto de otras opciones, como puede ser trabajar con predicciones sesgadas o no realizar la transformación logarítmica. Hay que usar Origen de predicción móvil para determinar que transformación es la mejor."
  },
  {
    "objectID": "03-02-Tema2.html#casos-generales-de-alisado-exponencial-la-función-ets-de-nuevo",
    "href": "03-02-Tema2.html#casos-generales-de-alisado-exponencial-la-función-ets-de-nuevo",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "5.9 Casos generales de alisado exponencial: la función ets (de nuevo)",
    "text": "5.9 Casos generales de alisado exponencial: la función ets (de nuevo)\nEn los epígrafes previos hemos visto cinco de los casos expuestos en la taxonomía de la Tabla 1, fijados a partir de los argumentos model y damped de la función ets. Veamos ahora como estimar cualquiera de los treinta modelos que surgen según las diferentes posibilidades de la tendencia (N, A, Ad, M y Md), la estacionalidad (N, A y M) y el error (A, M).\nRecordemos que el tipo de error no influye en el cálculo de las previsiones, solo influye en el cálculo del intervalo de confianza de estas.\nPodemos estimar cualquiera de los treinta modelos usando la función ets del paquete forecast.\nLo más habitual es no saber cual es el mejor modelo, entendiendo como tal, el que mejor se ajusta a la serie temporal. De hecho, si lo que buscamos es predecir bien, el mejor modelo será el que mejor prediga.\nSi en una de las tres letras del código del modelo se indica “Z”, la función ets selecciona de entre los modelos posibles el que mejor se ajusta. Por ejemplo, model = \"AAZ\" indica un modelo con error y pendiente aditivos y dejaría a ets la búsqueda de la mejor opción para la estacionalidad (aditiva o multiplicativa). Si se especifica model = \"ZZZ junto con damped = NULL (opciones por defecto) se dejaría a la función total libertad para buscar entre todos los modelos (excepto aquellos con pendiente multiplicativa). Si se desea restringir la búsqueda a modelos sin amortiguamiento basta indicar damped = FALSE y si se desea restringir la búsqueda solo a modelos aditivos se puede usar el argumento additive.only = TRUE.\n\nCriterios de optimización\nFijado un modelo, ets estima por defecto sus parámetros maximizando la función de verosimilitud. Esta búsqueda esta restringida a \\(0 &lt; \\beta &lt; \\alpha &lt; 1\\), \\(0 &lt; \\gamma &lt; 1 - \\alpha\\) y \\(0.8 &lt; \\phi &lt; 0.98\\). Es decir, los tres primeros parámetros nunca pueden ser 0 o 1, y en la práctica sus valores límite son 0.0001 y 0.9999.\nPuedes cambiar el criterio de optimización con el argumento opt.crit. Por defecto vale “lik” (de likelihood o verosimilitud), pero si lo fijas a opt.crit = \"mse\" se estiman los parámetros que minimizan el error cuadrático medio. Otra opción interesante es opt.crit = \"amse\" que minimiza la media de los errores cuadráticos medios obtenido sobre las previsiones hasta nmse periodos vista. En este caso usa el argumento nmse para fijar el valor numérico del horizonte temporal.\n\n\nCriterios de selección de modelos\nQueda pendiente saber que criterio se usa para seleccionar el modelo cuando se ofrece esta opción. Esto se hace a partir de un criterio de información entre Akaike (aic), Akaike corregido para pequeñas muestras (aicc) y el Bayesiano (bic). Sus fórmulas son: \\[aic = -2log(L) + 2k\\] \\[aicc = aic + \\frac{k(k+1)}{T-k-1}\\] \\[bic=aic + k(log(T) - 2)\\] donde \\(L\\) es la verosimilitud, \\(T\\) el número de datos y \\(k\\) el de parámetros estimados (incluidos los puntos iniciales de arranque y la desviación típica del error).\nCuanto menor es el criterio de información, mejor modelo. Por defecto se usa Akaike corregido para pequeñas muestras (aicc), pero el argumento ic permite cambiar de criterio.\n\n\n\n\n\n\nUna reflexión sobre los métodos automáticos de selección de modelos\n\n\n\n\n\nCon el comando forecast(ets(nacimientos),h=24) obtenemos una predicción mensual a dos años vista del número de nacimientos en España. Así de simple, solo 31 caracteres. Todo esto gracias a que un algoritmo interno ha estimado los parámetros de múltiples modelos, elegido el mejor modelo de todos y lo ha usado para obtener las predicciones. Podemos afirmar que tenemos las mejores predicciones. Un momento, ¿podemos?\nParémonos a reflexionar sobre lo que hemos hecho o, más bien, lo que el algoritmo ha hecho y a contrastarlo con lo que nosotros queríamos. Por un lado, el algoritmo estima los parámetros de un menú fijo de modelos y para ello usa un criterio de optimización, que por defecto es maximizar la función de verosimilitud; cuando ya tiene estimados todos los modelos, elije el mejor usando el criterio de información de Akaike corregido para muestras pequeñas; y finalmente, nosotros medimos la capacidad predictiva del modelo seleccionado usando el error absoluto porcentual medio. Vaya, resulta que en los procesos de identificación y estimación del mejor modelo se usan dos criterios diferentes, que además no coinciden con nuestro criterio de calidad de las predicciones.\nSi consideramos que la calidad de un modelo viene dada por el error absoluto porcentual medio en las predicciones intramuestrales a un periodo vista (lo que hemos decidido llamar MAPE), ¿no deberíamos estimar los parámetros del modelo usando como criterio la minimización del MAPE?, ¿no deberíamos elegir entre varios modelos aquel que presenta un MAPE menor? De esta forma, en todos los pasos del proceso se usa el mismo criterio, que es, además, el criterio que hemos considerado adecuado para valorar la calidad de las predicciones.\nPero no es esto lo que hacemos.\nNada nos garantiza que el modelo estimado y seleccionado por el algoritmo estime las mejores predicciones posibles. Y por mejores quiero decir que de entre todos los posibles modelos del menú y todos los posibles valores de sus parámetros, el seleccionado sea el que minimiza nuestro criterio de calidad de las predicciones.\nAhora ya podemos dar respuesta a la pregunta del primer párrafo: no, no podemos afirmar que nuestras predicciones sean las mejores.\nAlguien dirá que casi seguro entre las predicciones subóptimas obtenidas por el algoritmo con su extraña mezcla de criterios y las predicciones óptimas de verdad no habrá mucha diferencia. Total, que más da una función de verosimilitud que un criterio de información que una medida del error medio. Pero lo cierto es que no lo sabemos, no tenemos ni idea de la distancia que hay entre lo óptimo y lo subóptimo, y si el coste de equivocarme en las predicciones es alto, puede que incluso una pequeña diferencia sea relevante.\nEsta reflexión realizada en el contexto de series temporales y para la función ets es aplicable a todos los casos donde dejamos que un algoritmo ya programado elija el mejor modelo, y se basa en el hecho de que rara vez los criterios de estimación y elección que usan los algoritmos coinciden con el concepto de calidad de ajuste que estamos interesados.\nA pesar de lo aquí expuesto, como es más cómodo (y rápido) tirar de rutinas ya programadas que escribir nuestro propio código, seguiremos trabajando con modelos subóptimos y obteniendo estimaciones subóptimas, pero diciendo que son las mejores."
  },
  {
    "objectID": "03-02-Tema2.html#recogida-de-residuos",
    "href": "03-02-Tema2.html#recogida-de-residuos",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "6.1 Recogida de residuos",
    "text": "6.1 Recogida de residuos\n\nIdentificación y estimación del mejor modelo\nSi estimamos el mejor modelo de alisado exponencial para la serie Residuos sin ningún tipo de restricción, nos encontramos:\n\nresiduosEts &lt;- ets(residuos)\nsummary(residuosEts) \n\nETS(M,N,N) \n\nCall:\nets(y = residuos)\n\n  Smoothing parameters:\n    alpha = 0.9999 \n\n  Initial states:\n    l = 504.2743 \n\n  sigma:  0.0395\n\n     AIC     AICc      BIC \n267.4168 268.4168 271.4134 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -1.331356 21.20947 15.95526 -0.3461958 2.946509 0.9659013\n                  ACF1\nTraining set 0.4113965\n\n\nEl modelo estimado es ETS(M,N,N) o “MNN”, un modelo sin pendiente ni estacionalidad y con error multiplicativo. Es decir, \\(y_{t+1} = l_t \\cdot (1 + \\varepsilon_{t+1})\\).\nEl valor de \\(\\alpha\\) técnicamente es 1, indicando que el nivel de la serie varia en el tiempo y que prácticamente estamos usando para las previsiones el método Ingenuo I.\nRespecto de la calidad del modelo, el valor de MAPE= \\(2.9\\)% evidencia que estamos ante un modelo que se ajusta bien a los datos. MASE= \\(0.97\\) indica que el modelo de alisado exponencial simple reduce en solo un \\(3\\)% el error del método ingenuo I. Además, el modelo estimado no presenta sesgo.\n\n\nPredicción\nMediante la función forecast podemos predecir la serie Residuos. Por tratarse de un modelo sin pendiente ni estacionalidad, la predicción es constante en el tiempo (véase Figura 18).\n\nresiduosEtsPre &lt;- forecast(residuosEts, \n                         h = 5,\n                         level = 95)\nresiduosEtsPre\n\n     Point Forecast    Lo 95    Hi 95\n2023            467 430.8246 503.1754\n2024            467 415.8229 518.1771\n2025            467 404.2976 529.7024\n2026            467 394.5699 539.4301\n2027            467 385.9894 548.0106\n\nautoplot(residuosEtsPre,\n         xlab = \"\",\n         ylab = \"Kg per cápita\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 18: Residuos y predicción a 5 años vista\n\n\n\n\n\n\n\nAnálisis del residuo\nEl error de un modelo de alisado contiene la componente de Intervención y el propio término de Error. Ver numérica o gráficamente el error permite identificar fácilmente la presencia de valores atípicos (intervención). Obtenemos el error con la función residuals.\n\nerror &lt;- residuals(residuosEts)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"Periodo\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"blue\", \"blue\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(1995, 2022, 2)) \n\n\n\n\n\n\n\nFigura 19: Error + Intervención\n\n\n\n\n\nLa Figura 19 muestra que aunque algún error supera las dos desviaciones típicas, ninguno puede ser considerado claramente como atípico.\n\n\nValidación: error extramuestral a varios periodos vista\nVamos a mejorar la estimación de la calidad de las predicciones obteniendo el MAPE para previsiones extramuestrales a varios periodos vista. Para ello vamos a reservar, por ejemplo, las últimas 6 observaciones de la serie Residuos y ajustar el modelo con las restantes. Después usaremos este modelo para calcular las predicciones a 6 periodos vista y compararlas con los valores reales de la serie Residuos.\nRecuerda, este método para valorar la calidad de las predicciones usa la filosofía del método Conjunto de entrenamiento/Conjuto de prueba: el periodo de datos usado en la estimación no se usa como periodo de datos para la validación. Sin embargo, tiene el problema de que el error obtenido es una mezcla de errores de predicción a corto, medio y largo plazo difícil de valorar. Además, los resultados dependen tremendamente del punto de corte temporal seleccionado.\n\n# Definimos las observaciones intra y extramuestrales\nresiduoIntra &lt;- subset(residuos, end = length(residuos) - 6)\nresiduoExtra &lt;- subset(residuos, start = length(residuos) - 5)\n\n# Estimamos el modelo con todos los datos menos los 6 ultimos\nresiduoIntraEts &lt;- ets(residuoIntra, model = \"MNN\")\n\n# Predecimos los 6 años que hemos quitado de la serie y \n# vemos la calidad del ajuste.\nresiduoExtraPre &lt;- forecast(residuoIntraEts, h = 6)\naccuracy(residuoExtraPre, residuoExtra)\n\n                    ME      RMSE      MAE        MPE     MAPE      MASE\nTraining set -1.871978 22.991867 17.76552 -0.4684683 3.198782 0.9566051\nTest set      4.167367  9.600651  8.83380  0.8571971 1.896492 0.4756662\n                    ACF1 Theil's U\nTraining set  0.46584679        NA\nTest set     -0.00266122 0.7098219\n\n\nAtendiendo al MAPE se tiene que el error de previsión a un periodo vista en el periodo intramuestral de 1995 a 2016 es del 3.2%; y el error de previsión a largo plazo en el periodo extramuestral de 2017 a 2022 es del 1.9%. Para el punto de corte elegido, la calidad de las previsiones no se deteriora cuanto nos salimos de las condiciones óptimas.\nUn gráfico puede ayudar a entender este proceso de validación. En la Figura 20:\n\nLa línea de puntos vertical separa el periodo muestral (1995-2016) usado para estimar el modelo, del periodo extramuestral (2017-2022) usado sólo para hacer las previsiones.\nLa serie Residuos aparece como una línea sólida en negro, desde 1995 hasta 2022.\nLa previsión intra-muestral (a un periodo vista) de la serie Residuos aparece como una línea azul. Observa la previsión puede ser mayor o menor que la serie, no evidenciándose sesgo.\nLa línea en rojo es la previsión extra-muestral a largo plazo: \\(\\hat{y}_{T+h}=l_T\\), donde \\(T=2016\\). Observa que casi todas las previsiones están por debajo del valor real de la serie.\nAl lado de cada previsión se ha indicado el error estimado (MAPE). Para la previsión extramuestral, el error es la media de errores muy bajos (primeras previsiones) y errores muy elevados (últimas previsiones).\n\nClaramente estos resultados dependen del punto de corte seleccionado.\n\n\n\n\n\n\n\n\nFigura 20: Residuos, predicción intra y extramuestral\n\n\n\n\n\nLa presencia de tendencia, primero creciente y luego decreciente, en la serie Residuos puede hacernos pensar que un modelo más adecuado para su ajuste y predicción sería ETS(M,A,N), forzando a que haya pendiente. De hecho, el error de estimación de este modelo es del 2.6%, frente al 2.9% para el modelo ETS(M,N,N). Sin embargo, el error de previsión extramuestral a largo plazo para el modelo ETS(M,A,N) es del 6.5%, frente al 1.9% para el modelo ETS(M,N,N). Mejor ajuste no implica mejor predicción. De nuevo, incidir en que claramente estos resultados dependen del punto de corte seleccionado."
  },
  {
    "objectID": "03-02-Tema2.html#nacimientos",
    "href": "03-02-Tema2.html#nacimientos",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "6.2 Nacimientos",
    "text": "6.2 Nacimientos\nVeamos un segundo ejemplo con la serie Nacimientos (desde el año 2000).\n\nIdentificación y estimación del mejor modelo\nSi damos total libertad al proceso de selección del mejor modelo, el modelo estimado es ETS(A,A,A), es decir, \\(y_{t+1} = l_t + b_t + s_{t+1-m} + \\varepsilon_{t+1}\\).\n\nnacimientosEts &lt;- ets(nacimientosb)\nsummary(nacimientosEts) \n\nETS(A,A,A) \n\nCall:\nets(y = nacimientosb)\n\n  Smoothing parameters:\n    alpha = 0.4892 \n    beta  = 0.0107 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 33052.834 \n    b = 143.8979 \n    s = -11.4659 3.8886 1957.737 1463.932 1013.289 1255.209\n           -953.4959 217.809 -1369.601 -172.4478 -3318.506 -86.3485\n\n  sigma:  906.7055\n\n     AIC     AICc      BIC \n5570.926 5573.193 5633.196 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE    MAPE      MASE\nTraining set -64.51908 881.1593 672.4836 -0.2064835 1.96789 0.4916715\n                   ACF1\nTraining set 0.05973202\n\n\nEl bajo valor de \\(\\beta\\) y \\(\\gamma\\) indican que ambas, la pendiente y la estacionalidad, varían muy lentamente en el tiempo (véase la Figura 21).\n\nautoplot(nacimientosEts,\n         xlab = \"Periodo\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 21: Componentes del modelo óptimo para Nacimientos\n\n\n\n\n\nRespecto de la calidad del modelo, el MAPE de 2% indica que estamos ante un modelo que se ajusta muy bien a los datos; y el valor de MASE igual a 0.49 indica que este modelo reduce en un 51% el error del método ingenuo con estacionalidad, el más sencillo posible. El modelo no tiene sesgo y el valor de ACF1 de 0.06, inferior a 0.1, indica que el intervalo de confianza de las predicciones está bien calculado.\nPodemos ver los últimos valores estimados del nivel, la pendiente y la estacionalidad para interpretarlos. Como el último dato de la serie es diciembre de 2023, los valores del nivel \\(l\\) y la pendiente \\(b\\) mostrados corresponden a ese mes.\n\nTT &lt;- nrow(nacimientosEts$states)\nnacimientosEts$states[TT,]\n\n           l            b           s1           s2           s3           s4 \n27041.914738   -55.737267   -11.607442     3.801462  1957.628722  1463.714031 \n          s5           s6           s7           s8           s9          s10 \n 1013.175595  1255.001436  -953.711757   217.589514 -1369.784143  -172.610401 \n         s11          s12 \n-3318.617718   -86.437475 \n\n\nFebrero es el mes con menor número de nacimientos: nacen 3318 bebés menos, respecto de la media anual. En octubre es cuando más bebés nacen: 1957 más que la media anual.\n\n\nPredicción\nSi pedimos los valores de predicción tenemos (sólo se muestran los primeros meses):\n\nnacimientosEtsPre &lt;- forecast(nacimientosEts, \n                              h = 24, \n                              level = 95)\nnacimientosEtsPre\n\n\n\n         Point Forecast    Lo 95    Hi 95\nJan 2024       26899.74 25122.63 28676.85\nFeb 2024       23611.82 21625.03 25598.61\nMar 2024       26702.09 24517.87 28886.32\nApr 2024       25449.18 23076.55 27821.81\nMay 2024       26980.82 24426.68 29534.96\n\n\nLa Figura 22 muestra la serie Nacimientos, su predicción a dos años vista y el intervalo de confianza.\n\nautoplot(nacimientosEtsPre,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 22: Nacimientos y predicción\n\n\n\n\n\n\n\nAnálisis del error\nSe identifica varios valores claramente atípicos –superan las 3 desviaciones típicas– que corresponden a enero de 2011 y, aproximadamente, nueves después del confinamiento por la pandemia (diciembre de 2020, y febrero y marzo de 2021). Abril de 2008 y diciembre de 2010 son otros candidatos a intervención por superar las 2.5 desviaciones típicas.2\n\nerror &lt;- residuals(nacimientosEts)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"Periodo\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"blue\", \"blue\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(2000, 2024, 2)) \n\nfechas &lt;- format(seq(as.Date(\"2000-1-1\"), as.Date(\"2023-12-1\"), \"month\"), \"%Y-%m\")\nfechas[abs(error) &gt; 3 * sderror]\n\n[1] \"2011-01\" \"2020-12\" \"2021-02\" \"2021-03\"\n\n\n\n\n\n\n\n\nFigura 23: Error + Intervención\n\n\n\n\n\nUn método alternativo para obtener valores atípicos es la prueba de Tukey (véase la píldora Valores perdidos y valores atípicos).\n\natipicos &lt;- tsoutliers(error)\nfechas[atipicos$index]\n\n[1] \"2020-12\"\n\n\nEn este caso solo se identifica como atípico el valor de diciembre de 2020.\n\n\nValidación: error extramuestral según horizonte temporal\nEn este ejemplo calcularemos el error extramuestral según el horizonte temporal de previsión, una metodología que ya hemos visto anteriormente.\n\nk &lt;- 120                 \nh &lt;- 12                  \nTT &lt;- length(nacimientosb)\ns &lt;- TT - k - h \n\nmapeAlisado &lt;- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set &lt;- subset(nacimientosb, start = i + 1, end = i + k)\n  test.set &lt;-  subset(nacimientosb, start = i + k + 1, end = i + k + h)\n  \n  fit &lt;- ets(train.set, model = \"AAA\", damped = FALSE)\n  fcast&lt;-forecast(fit, h = h)\n  mapeAlisado[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n}\n\nerrorAlisado &lt;- colMeans(mapeAlisado)\nerrorAlisado\n\n [1] 2.212951 2.501117 2.666964 2.945754 2.875520 2.882236 3.094237 3.111255\n [9] 3.222222 3.311627 3.189962 3.378210\n\n\n\nggplot() +\n  geom_line(aes(x = 1:12, y = errorAlisado)) +\n  ggtitle(\"\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"MAPE\") +\n  scale_x_continuous(breaks= 1:12)\n\n\n\n\n\n\n\nFigura 24: Error de predicción según horizonte temporal\n\n\n\n\n\nLa Figura 24 muestra el error de previsión extramuestral según el horizonte temporal. El error extramuestral a un periodo vista es comparable al error intramuestral (2.2% frente a 2.0%). Aunque el error de previsión aumenta conforme lo hace el horizonte temporal, siempre se mantiene muy bajo. Por ejemplo, en las previsiones a 12 meses vista el error es del 3.4%."
  },
  {
    "objectID": "03-02-Tema2.html#demanda-eléctrica",
    "href": "03-02-Tema2.html#demanda-eléctrica",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "6.3 Demanda eléctrica",
    "text": "6.3 Demanda eléctrica\nConsideremos la serie de consumo eléctrico diario durante el años 2023.\n\n\n\nIdentificación y estimación del mejor modelo\nEl modelo óptimo sin restricciones es (MAdM) con un valor de \\(\\phi\\) cercano al máximo de 0.98, por lo que se solicita el modelo óptimo excluyendo modelos con tendencia amortiguada.\n\n#electricidadEts &lt;- ets(electricidad)\nelectricidadEts &lt;- ets(electricidad,\n                       damped = FALSE)\n\nsummary(electricidadEts) \n\nETS(A,N,A) \n\nCall:\nets(y = electricidad, damped = FALSE)\n\n  Smoothing parameters:\n    alpha = 0.8585 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 696.9707 \n    s = -49.2724 22.6105 35.9717 38.7919 33.4117 9.8245\n           -91.3378\n\n  sigma:  24.5881\n\n     AIC     AICc      BIC \n4502.001 4502.623 4541.000 \n\nTraining set error measures:\n                     ME     RMSE      MAE         MPE     MAPE      MASE\nTraining set -0.0244328 24.28306 14.89251 -0.08339514 2.300161 0.4679821\n                 ACF1\nTraining set 0.024706\n\n\nAhora el mejor modelo no presenta tendencia y tiene error y estacionalidad aditiva, es decir, \\(y_{t+1} = l_t + s_{t+1-m} + \\varepsilon_{t+1}\\).\nEl valor \\(\\gamma = 0\\) indica que las estacionalidad se mantiene contante en el tiempo, mientras que el elevado valor de \\(\\alpha\\) indica que el nivel de la serie cambia de forma constante. Este cambio de nivel está relacionado con las variaciones en el consumo eléctrico debido a los cambios en la temperatura y el uso de aparatos de climatización.\nRespecto de la calidad del modelo, el MAPE de 2.3% indica que estamos ante un modelo que se ajusta muy bien a los datos; no hay sesgo (MPE es casi cero); y el valor de ACF1, muy bajo, indica que la fórmula usada para el cálculo del intervalo de confianza de las predicciones es válida.\nPodemos ver los últimos valores estimados del nivel y la estacionalidad para interpretarlos. Recuerda que los valores de la componente estacional están ordenados alrevés (s1 es domingo y s7 es lunes).\n\nTT &lt;- nrow(electricidadEts$states)\nelectricidadEts$states[TT,]\n\n        l        s1        s2        s3        s4        s5        s6        s7 \n689.31491 -91.33788 -49.26566  22.61608  35.97953  38.78392  33.40487   9.81824 \n\n\nEl domingo la demanda eléctrica cae 91 GWh respecto de la media semanal. Por el contrario, el miércoles es el día de mayor incremento de demanda respecto de la media semanal, 39 GWh.\n\n\nPredicción\nSi pedimos los valores de predicción para las cuatro semanas siguientes, tenemos (sólo se muestran la primera):\n\nelectricidadEtsPre &lt;- forecast(electricidadEts, \n                               h = 28, \n                               level = 95)\nelectricidadEtsPre\n\n\n\n         Point Forecast    Lo 95    Hi 95\n54.00000       699.1331 650.9414 747.3249\n54.14286       722.7198 659.2057 786.2338\n54.28571       728.0988 652.2990 803.8987\n54.42857       725.2944 638.9394 811.6495\n54.57143       711.9310 616.1772 807.6848\n54.71429       640.0493 535.7402 744.3583\n54.85714       597.9770 485.7614 710.1927\n\n\nLa Figura 25 muestra la serie Demanda eléctrica, su predicción a cuatro semanas vista y el intervalo de confianza.\n\nautoplot(electricidadEtsPre,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 25: Demanda eléctrica y predicción\n\n\n\n\n\n\n\nAnálisis del error\n\nerror &lt;- residuals(electricidadEts)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"Semana\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"blue\", \"blue\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(6, 26, 2)) \n\nfechas &lt;- format(seq(as.Date(\"2023-1-1\"), as.Date(\"2023-12-31\"), \"day\"), \"%Y-%m-%d\")\nfechas[abs(error) &gt; 3 * sderror]\n\n [1] \"2023-01-01\" \"2023-01-06\" \"2023-01-07\" \"2023-04-06\" \"2023-04-08\"\n [6] \"2023-05-01\" \"2023-08-15\" \"2023-08-27\" \"2023-10-12\" \"2023-11-01\"\n[11] \"2023-11-02\" \"2023-12-06\" \"2023-12-25\"\n\n\n\n\n\n\n\n\nFigura 26: Error + Intervención\n\n\n\n\n\nEl la Figura 26 se identifican múltiples días atípicos asociados con un consumo inferior al esperado debido a festividades: Año nuevo, Reyes, Semana Santa (el Viernes Santo fue el 7 de abril), Día del trabajador, Virgen de agosto, Día de la Hispanidad, Todos los Santos, Día de la Constitución y Navidad. El Día de la Inmaculada (8 de diciembre) no aparece por caer en domingo.\nTambién se observan tres días con un consumo mayor de lo esperado justo después de un festivo, el 7 de enero (tras Reyes), el 8 de abril (Sábado Santo) y el 2 de noviembre (tras Todos los Santos). Aquí la causa no es tanto un incremento inesperado del consumo, como la dinámica del propio método de estimación. Al llegar un día festivo, el método de Alisado falla ofreciendo una predicción más alta de la real y dando lugar a un error negativo. Al día siguiente, el método de Alisado ajusta su predicción a la baja, pero por no ser festivo vuelve a fallar, esta vez ofreciendo una predicción más baja de la real y dando lugar a un error positivo.\nVeamos como en este caso la prueba de Tukey identifica las mismas fechas.\n\natipicos &lt;- tsoutliers(error)\nfechas[atipicos$index]\n\n [1] \"2023-01-01\" \"2023-01-06\" \"2023-01-07\" \"2023-04-06\" \"2023-04-08\"\n [6] \"2023-05-01\" \"2023-08-15\" \"2023-08-27\" \"2023-10-12\" \"2023-11-01\"\n[11] \"2023-11-02\" \"2023-12-06\" \"2023-12-25\""
  },
  {
    "objectID": "03-02-Tema2.html#footnotes",
    "href": "03-02-Tema2.html#footnotes",
    "title": "Series Temporales: Alisado Exponencial",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFormalmente en el modelo de Holt-Winters multiplicativo el error es aditivo. Es decir, debería ser (A, A, M). Sin embargo, debido a que desde un punto de vista teórico este modelo, junto con otros, puede tener varianza infinita, la función ets no permite por defecto su estimación. Para poder estimar con la función ets el modelo (A, A, M) es necesario añadir el argumento restrict = FALSE. Los modelos que para poder ser estimados requieren este argumento son: ANM, AAM, AAdM, MMA, MMdA, AMN, AMdN, AMA, AMdA, AMM y AMdM.↩︎\nRecuerda que el valor de 3 es uno de los posibles y debe ajustarse a las características de la serie y el análisis.↩︎"
  },
  {
    "objectID": "03-04-Tema4.html",
    "href": "03-04-Tema4.html",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "",
    "text": "Los modelos ARIMA han mostrado ser uno se los métodos de ajuste de series temporales más valiosos desde que fueran formalizados en 1976 por Box y Jenkins (Box and Jenkins 1976). Además, dieron las pautas a seguir en el ajuste de una serie temporal para alcanzar buenas predicciones (véase epígrafe 5).\nEn este tema y el siguiente, definiremos estos procesos y aprenderemos a identificarlos, estimarlos y hacer predicciones.\nLos modelos ARIMA son ahora el tronco de una amplia familia de procesos que requieren menos hipótesis para su aplicación: ARCH, GARCH, NGARCH, IGARCH, EGARCH, GARCH-M, QGARCH, GJR-GARCH, TGARCH, fGARCH…\nLos modelos ARIMA y los métodos de Alisado Exponencial son complementarios:\n\nLos modelos de Alisado lineales son casos especiales de modelos Arima,\nLos modelos de Alisado no lineales no tienen su contrapartida en modelos Arima\nMuchos modelos Arima no tiene contrapartida en los modelos de Alisado."
  },
  {
    "objectID": "03-04-Tema4.html#sobre-el-proceso-estocástico",
    "href": "03-04-Tema4.html#sobre-el-proceso-estocástico",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "3.1 Sobre el proceso estocástico",
    "text": "3.1 Sobre el proceso estocástico\nA lo largo de este tema asumiremos que:\n\n\\(\\{y_t\\}_{t=1}^T\\) es una realización de un proceso estocástico desconocido.\nEl proceso estocástico es estacionario en sentido amplio: \\[E[y_t]  = \\mu &lt; \\infty \\;\\;\\; \\forall t,\\] \\[Cov[y_t, y_{t-k}]  = \\gamma_k  \\;\\;\\; \\forall k.\\]\nEl proceso estocástico es ergódico, o su condición suficiente: \\[\\lim_{k \\rightarrow \\infty} \\gamma_k  = 0.\\]"
  },
  {
    "objectID": "03-04-Tema4.html#sobre-el-vector-de-residuos",
    "href": "03-04-Tema4.html#sobre-el-vector-de-residuos",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "3.2 Sobre el vector de residuos",
    "text": "3.2 Sobre el vector de residuos\nTambién asumiremos que el residuo del modelo \\(\\{\\varepsilon_t\\}_{t=1}^T\\) es ruido blanco:\n\nMedia cero: \\(E[\\varepsilon_t]=0\\)\n\n\nVarianza constante (homocedástico): \\(E[\\varepsilon_t^2]=\\sigma^2\\)\n\n\nIncorrelación: \\(E[\\varepsilon_t \\cdot \\varepsilon_{s}]=0 \\;\\;\\; t \\neq s\\)\n\n\nDistribución Normal: \\(\\varepsilon_t \\sim N\\)\n\nEs decir, \\(\\varepsilon_t \\sim N(0,\\sigma^2)\\) i.i.d."
  },
  {
    "objectID": "03-04-Tema4.html#procesos-autorregresivos-arp",
    "href": "03-04-Tema4.html#procesos-autorregresivos-arp",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "4.1 Procesos autorregresivos AR(p)",
    "text": "4.1 Procesos autorregresivos AR(p)\n\nDefinición\nEl modelo general autorregresivo de orden p, \\(y_t \\sim AR(p)\\) viene definido por \\[y_t=c + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\ldots + \\phi_p y_{t-p} + \\varepsilon_t,\\] que usando el operador retardo queda \\[(1 - \\phi_1 L - \\phi_2 L^2 - \\ldots - \\phi_p L^p)y_t = c + \\varepsilon_t\\]\n\n\nPropiedades\nEl proceso es estacionario si quedan fuera del círculo de radio la unidad todas las raíces del polinomio autorregresivo \\[\\Phi_p(z) = 1 - \\phi_1 z - \\phi_2 z^2 - \\ldots - \\phi_p z^p.\\]\nEs invertible siempre.\n\nPodemos transformar el proceso AR(p) en un proceso donde \\(y_t\\) depende de la suma infinita de errores pasados, MA(\\(\\infty\\)).\nSi conocemos las p primeras autocorrelaciones, podemos estimar los p parámetros del modelo. Por ejemplo, para un proceso AR(2) se verifica que: \\[\\rho_1 = \\phi_1 + \\phi_2 \\rho_1\\] \\[\\rho_2 = \\phi_1 \\rho_1 + \\phi_2\\]\nEstas ecuaciones se denominan Ecuaciones de Yule-Walker.\nObserva que si tenemos una estimación de las dos primeras autocorrelaciones, estas ecuaciones nos permiten obtener una estimación de los coeficientes del proceso AR(2) como una aplicación del método de los momentos.\n\nSobre todo,\n\nLa FAC del proceso decae exponencialmente a partir del orden p\nLa FACP verifica que los p primeros valores son no nulos y todos los demás valen cero.\n\n\n\nEjemplos\n\n\\(y_t \\sim AR(1): \\;\\;y_t = c + \\phi_1 y_{t-1} + \\varepsilon_t\\) o \\((1 - \\phi_1 L)y_t = c + \\varepsilon_t\\)\n\\(y_t \\sim AR(2): \\;\\;y_t = c + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\varepsilon_t\\) o \\((1 - \\phi_1 L - \\phi_2 L^2)y_t = c + \\varepsilon_t\\)\n\n\n\nSimulación de procesos autorregresivos\nLa Figura 1 muestra dos simulaciones del proceso AR(1) \\(y_t = 0.8y_{t-1} + \\varepsilon_t\\), el panel superior con 20 datos y el inferior con 100 datos. En ambos casos \\(\\varepsilon_t\\) se distribuye como una normal con media cero y varianza la unidad. (Todas las simulaciones se han realizado con la función arima.sim de la librería stats.)\n\n\n\n\n\n\n\n\n\n\n\n\n(a) n = 20\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) n = 100\n\n\n\n\n\n\n\nFigura 1: Simulación de dos procesos AR(1) con diferente tamaño muestral"
  },
  {
    "objectID": "03-04-Tema4.html#procesos-en-medias-móviles-maq",
    "href": "03-04-Tema4.html#procesos-en-medias-móviles-maq",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "4.2 Procesos en medias móviles MA(q)",
    "text": "4.2 Procesos en medias móviles MA(q)\n\nDefinición\nEl modelo general en medias móviles de orden q, \\(y_t \\sim MA(q)\\) viene definido por \\[y_t=c + \\varepsilon_t + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2} + \\ldots + \\theta_q \\varepsilon_{t-q},\\] que usando el operador retardo queda \\[y_t = c + (1 + \\theta_1 L + \\theta_2 L^2 + \\ldots + \\theta_q L^q) \\varepsilon_t\\]\n\n\nPropiedades\nEl proceso es invertible si quedan fuera del círculo de radio la unidad todas las raíces del polinomio en medias móviles \\[\\Theta_q(z) = 1 + \\theta_1 z + \\theta_2 z^2 + \\ldots + \\theta_q z^q.\\]\n\nPodemos transformar el proceso MA(q) en un proceso AR(\\(\\infty\\)).\nSi conocemos las q primeras autocorrelaciones, podemos estimar los q parámetros del modelo. Por ejemplo, para un proceso MA(2) se verifica que: \\[\\rho_1 = \\frac{\\theta_1 + \\theta_1\\theta_2}{1 + \\theta_1^2 + \\theta_2^2}\\] \\[\\rho_2 = \\frac{\\theta_2}{1 + \\theta_1^2 + \\theta_2^2}\\]\n\nEs estacionario siempre.\nSobre todo,\n\nLa FAC verifica que los q primeros valores son no nulos y todos los demás valen cero.\nLa FACP decae exponencialmente a partir del orden q.\n\n\n\nEjemplos\n\n\\(y_t \\sim MA(1): \\;\\;y_t = c + \\varepsilon_t + \\theta_1 \\varepsilon_{t-1}\\) o \\(y_t = c + (1 + \\theta_1 L)\\varepsilon_t\\)\n\\(y_t \\sim MA(2): \\;\\;y_t=c + \\varepsilon_t + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\\) o \\(y_t = c + (1 + \\theta_1 L + \\theta_2 L^2)\\varepsilon_t\\)\n\n\n\nSimulación de procesos en medias móviles\nLa Figura 2 ofrece dos simulaciones del proceso MA(1) \\(y_t = 0.8\\varepsilon_{t-1} + \\varepsilon_t\\), la primera con 20 datos y la segunda con 100 datos. En ambos casos \\(\\varepsilon_t\\) se distribuye como una normal con media cero y varianza la unidad.\n\n\n\n\n\n\n\n\n\n\n\n\n(a) n = 20\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) n = 100\n\n\n\n\n\n\n\nFigura 2: Simulación de dos procesos MA(1) con diferente tamaño muestral"
  },
  {
    "objectID": "03-04-Tema4.html#procesos-armapq",
    "href": "03-04-Tema4.html#procesos-armapq",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "4.3 Procesos ARMA(p,q)",
    "text": "4.3 Procesos ARMA(p,q)\n\nDefinición\nEl modelo general \\(y_t \\sim ARMA(p,q)\\) viene dado por \\[y_t = c + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\ldots + \\phi_p y_{t-p}  +\n        \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2} + \\ldots +\n        \\theta_q \\varepsilon_{t-q}+ \\varepsilon_t,\\] que usando el operador retardo queda \\[(1 - \\phi_1 L - \\ldots - \\phi_p L^p)y_t = c + (1 + \\theta_1 L + \\ldots + \\theta_q L^q) \\varepsilon_t.\\]\nEl proceso más simple es el ARMA(1,1), \\(y_t = c  + \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\varepsilon_{t}\\).\n\n\nPropiedades\nEl proceso es estacionario si quedan fuera del círculo de radio la unidad todas las raíces del polinomio \\[\\Phi_p(z) = 1 - \\phi_1 z - \\phi_2 z^2 - \\ldots - \\phi_p z^p.\\] El proceso es invertible si quedan fuera del círculo de radio la unidad todas las raíces del polinomio \\[\\Theta_q(z) = 1 + \\theta_1 z + \\theta_2 z^2 + \\ldots + \\theta_q z^q.\\] Sobre todo,\n\nLa FAC decae exponencialmente a partir del orden p.\nLa FACP decae exponencialmente a partir del orden q.\n\n\n\nEjemplos\n\n\\(y_t \\sim ARMA(1, 1): \\;\\;y_t = c  + \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\varepsilon_{t}\\) o \\((1 - \\phi_1 L)y_t = c + (1 + \\theta_1 L)\\varepsilon_t\\).\n\\(y_t \\sim ARMA(0, 0): \\;\\;y_t = c + \\varepsilon_{t}\\). Si \\(c = 0\\), a este proceso se le denomina ruido blanco.\n\n\n\nSimulación de procesos ARMA\nLa Figura 3 muestra las FAC y FACP de una simulación de tamaño 200 para un proceso ARMA(1,1), la Figura 4 para un proceso ARMA(2,1) y la Figura 5 para un ARMA(1,2). En todos los casos \\(\\varepsilon_t\\) se distribuye como una normal con media cero y varianza la unidad.\n\\(y_t = 0.7y_{t-1} + 0.6\\varepsilon_{t-1} + \\varepsilon_t\\)\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Función de autocorrelación\n\n\n\n\n\n\n\n\n\n\n\n(b) Función de autocorrelación parcial\n\n\n\n\n\n\n\nFigura 3: Simulación de un proceso ARMA(1, 1)\n\n\n\n\n\\(y_t = 0.7y_{t-1}- 0.5y_{t-2} + 0.6\\varepsilon_{t-1} + \\varepsilon_t\\)\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Función de autocorrelación\n\n\n\n\n\n\n\n\n\n\n\n(b) Función de autocorrelación parcial\n\n\n\n\n\n\n\nFigura 4: Simulación de un proceso ARMA(2, 1)\n\n\n\n\n\\(y_t = 0.6y_{t-1} + 0.5\\varepsilon_{t-1} + 0.3\\varepsilon_{t-2} + \\varepsilon_t\\)\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Función de autocorrelación\n\n\n\n\n\n\n\n\n\n\n\n(b) Función de autocorrelación parcial\n\n\n\n\n\n\n\nFigura 5: Simulación de un proceso ARMA(2, 1)"
  },
  {
    "objectID": "03-04-Tema4.html#proceso-arimapdq",
    "href": "03-04-Tema4.html#proceso-arimapdq",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "4.4 Proceso ARIMA(p,d,q)",
    "text": "4.4 Proceso ARIMA(p,d,q)\nSi la serie \\(y_t\\) no es estacionaria pero tras diferenciarla \\(d\\) veces se hace estacionaria, diremos que la serie es integrada de orden \\(d\\): \\(y_t \\sim I(d)\\). Por tanto,\n\nuna serie estacionaria se indicará como \\(y_t \\sim I(0)\\)\n\\(y_t \\sim I(d)\\) es equivalente a \\(\\nabla^d y_t = (1 - L)^d y_t \\sim I(0)\\)\n\nUna serie \\(y_t\\) sigue un proceso \\(ARIMA(p,d,q)\\) si:\n\nhay que diferenciar la serie \\(d\\) veces para hacerla estacionaria, \\(y_t \\sim I(d)\\); y\nla serie diferenciada sigue un proceso ARMA(p,q), \\(\\nabla^d y_t \\sim ARMA(p,q)\\).\n\nEntonces, podemos escribir: \\[\\begin{equation*}\n\\begin{array}{c@{\\qquad}c@{\\quad}ccc}\n  y_t \\sim  ARIMA(p,d,q): & (1 - \\phi_1 L - \\ldots - \\phi_p L^p) & (1- L)^d y_t & = & c + (1 + \\theta_1 L + \\ldots + \\theta_q L^q) \\varepsilon_t \\\\\n                          & \\uparrow                            & \\uparrow      &   & \\uparrow \\\\\n                          & AR(p)                               & I(d)          &   & MA(q)\n\\end{array}\n\\end{equation*}\\]\n\nEjemplos\n\n\\(y_t \\sim ARIMA(1, 1, 1)\\): \\[\n\\begin{aligned}\n(1 - \\phi_1 L)(1- L) y_t & = c + (1 + \\theta_1 L) \\varepsilon_t \\\\\ny_t & = c + y_{t-1} + \\phi_1(y_{t-1} - y_{t-2}) + \\theta_1 \\varepsilon_{t-1} + \\varepsilon_t\n\\end{aligned}\n\\]\n\\(\\log(y_t) \\sim ARIMA(1, 1, 1)\\): \\[\n\\begin{aligned}\n(1 - \\phi_1 L)(1- L) \\log(y_t) & = (1 - \\phi_1 L)TVy_t = c + (1 + \\theta_1 L) \\varepsilon_t \\\\\nTVy_t & = c + \\phi_1 TVy_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\varepsilon_t\n\\end{aligned}\n\\]\n\\(y_t \\sim ARIMA(0, 1, 0)\\): \\[\n\\begin{aligned}\n(1- L) y_t & = c + \\varepsilon_t \\\\\ny_t & = c + y_{t-1} + \\varepsilon_t.\n\\end{aligned}\n\\] Si \\(c=0\\), tenemos un paseo aleatorio; si \\(c \\neq 0\\), tenemos un paseo aleatorio con deriva.\n\n\n\nSimulación de procesos no estacionarios\nVeamos la FAC de tres series simuladas no estacionarias (Figura 6): un paseo aleatorio, un paseo aleatorio con deriva y un modelo lineal. Sus FAC son indistinguibles, pero los tres casos revelan claramente su carácter no estacionario.\n\n\n\n\n\n\n\n\n\n\n\n\n(a) FAC de un paseo aleatorio\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) FAC de un paseo aleatorio con deriva\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) FAC de in proceso determinista lineal\n\n\n\n\n\n\n\nFigura 6: FAC para tres procesos no estacionarios simulados"
  },
  {
    "objectID": "03-04-Tema4.html#recogida-de-residuos",
    "href": "03-04-Tema4.html#recogida-de-residuos",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "6.1 Recogida de Residuos",
    "text": "6.1 Recogida de Residuos\nVamos a aplicar la metodología de Box-Jenkins a la serie Residuos, una serie anual de 1995 a 2022 (fuente Instituto Nacional de Estadística) que muestra los residuos recogidos por o en nombre de las autoridades municipales y eliminados a través del sistema de gestión de residuos. La unidad es el kg per cápita.\n\nresiduos &lt;- read.csv2(\"./series/Residuos.csv\", \n                      header = TRUE)\n\nresiduos &lt;- ts(residuos[, 2], \n               start = 1995, \n               frequency  = 1)\n\nautoplot(residuos,\n         xlab = \"\", \n         ylab = \"Kg per cápita\", \n         main = \"\")\n\n\n\n\n\n\n\nFigura 8: Recogida de residuos\n\n\n\n\n\n\nTransformación de la serie\nEl primer paso es transformar la serie original para que sea estacionaria. La Figura 9 muestra la gráfica temporal y la FAC para la serie original y su primera diferencia, y la función ndiffs usa un contraste de raíces unitarias para determinar el número de diferencias necesarias para que la serie sea estacionaria. Tras su análisis, podemos concluir que es necesario diferenciar la serie una vez. Es decir, \\(d=1\\) o \\(residuos_t \\sim I(1)\\).\n\nautoplot(residuos, xlab = \"\", ylab = \"\", main = \"\")\nautoplot(diff(residuos), xlab = \"\", ylab = \"\", main = \"\")\nggAcf(residuos, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(residuos), xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n\n\n\n\n\n\n(b) Dif. de la serie\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) FAC serie original\n\n\n\n\n\n\n\n\n\n\n\n(d) FAC dif. de la serie\n\n\n\n\n\n\n\nFigura 9: Gráfica y FAC para Residuos\n\n\n\n\n\nndiffs(residuos)\n\n[1] 1\n\n\n\n\nIdentificación\nTras diferenciar la serie, vamos a identificar los valores de \\(p\\) y \\(q\\) a partir de las FAC y FACP de la serie diferenciada (Figura 10).\n\nggtsdisplay(diff(residuos), main = \"\")\n\n\n\n\n\n\n\nFigura 10: Residuos (primera diferencia\n\n\n\n\n\nObservamos que tanto en la FAC como en la FACP solo la primera autocorrelación sobrepasa las líneas que marcan el intervalo de confianza al 95%. podemos estar antes un proceso AR(1, 1, 0), MA(1, 1, 0) o ARIMA(1,1,1). Si queremos hilar fino, podemos aventurar que la FAC presenta decrecimiento y apostar por un proceso AR(1, 1, 0).\nTambién podemos ayudarnos de la función auto.arima, fijando el número de diferenciaciones con d = 1. El argumento trace = TRUE sirve para que en la salida se muestren todos los modelos que se han probado.\n\nauto.arima(residuos, \n           d = 1,\n           trace = TRUE)\n\n\n ARIMA(2,1,2) with drift         : 252.6116\n ARIMA(0,1,0) with drift         : 246.9265\n ARIMA(1,1,0) with drift         : 244.4479\n ARIMA(0,1,1) with drift         : 245.2194\n ARIMA(0,1,0)                    : 244.7014\n ARIMA(2,1,0) with drift         : 246.8517\n ARIMA(1,1,1) with drift         : 246.4067\n ARIMA(2,1,1) with drift         : 249.4453\n ARIMA(1,1,0)                    : 241.9171\n ARIMA(2,1,0)                    : 244.0774\n ARIMA(1,1,1)                    : 243.6369\n ARIMA(0,1,1)                    : 242.7395\n ARIMA(2,1,1)                    : 246.4112\n\n Best model: ARIMA(1,1,0)                    \n\n\nSeries: residuos \nARIMA(1,1,0) \n\nCoefficients:\n         ar1\n      0.4178\ns.e.  0.1741\n\nsigma^2 = 397.8:  log likelihood = -118.71\nAIC=241.42   AICc=241.92   BIC=244.01\n\n\nLa identificación automática da como mejor modelo \\(p=1\\) y \\(q=0\\) sin constante. Además, observa como el segundo mejor modelo (según AICc) es ARIMA(0, 1, 1) y el tercero un ARIMA(1, 1, 1).\nVamos a asumir que \\(residuos_t \\sim ARIMA(1,1,0)\\) sin deriva (sin constante): \\[\n\\begin{aligned}\n(1 - \\phi_1 L)(1 - L)residuos_t & = \\varepsilon_t \\\\\nresiduos_t &= residuos_{t-1} + \\phi_1(residuos_{t-1} - residuos_{t-2}) + \\varepsilon_t\n\\end{aligned}\n\\]\n\n\nEstimación\nAunque existe la función arima de stats, vamos a usar la función Arima de la librería forecast para estimar el modelo identificado por ser más versátil. El argumento order indica los valores de (p, d, q) como un vector y el argumento lógico include.constant indica si debe incluirse la constante \\(c\\) en el modelo.1.\n\narima110 &lt;- Arima(residuos, \n                  order = c(1, 1, 0), \n                  include.constant = FALSE)\narima110\n\nSeries: residuos \nARIMA(1,1,0) \n\nCoefficients:\n         ar1\n      0.4178\ns.e.  0.1741\n\nsigma^2 = 397.8:  log likelihood = -118.71\nAIC=241.42   AICc=241.92   BIC=244.01\n\n\nUna forma rápida, aunque imprecisa, de determinar si un coeficiente es relevante (significativo) es compararlo con su error estándar (standard error, s.e). Si el coeficiente es mayor que dos veces su error estándar, hay evidencia de que es significativo. En la salida de R, en la tabla Coefficients tienes en la primera fila el nombre de los coeficientes; su valor estimado aparece en la segunda fila de la tabla; y los errores estándar en la tercera fila (precedidos por s.e.). Con esta regla, parece que el coeficiente \\(\\phi_1\\) (ar1 en la salida) es significativo.\n\n\nIntervención\nSe analiza si para algún año se observa un error atípico (por ejemplo 3 veces superior al error estándar). La Figura 11 muestra que en los años 1999 y 2004, el residuo sobrepasa los dos errores estándar pero queda lejos de los tres errores estándar así que asumiremos que no hay valores atípicos.\n\nerror &lt;- residuals(arima110)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1995, 2023, 2)) \n\n\n\n\n\n\n\nFigura 11: Error + Intervención\n\n\n\n\n\n\n\nValidación\nCoeficientes signifciativos\nA fin de poner un poco de objetividad en la decisión de si un coeficiente es significativo (distinto de cero), podemos usar una prueba estadística. Existen varias alternativas (prueba z, prueba t, prueba de Wald…), así que vamos a optar por la más sencilla y cómoda, la prueba z. Esta prueba asume normalidad asintótica en la distribución de los coeficientes o, al menos, una muestra suficientemente grande.\nPara implementar la prueba z usaremos la función coeftest (se precisa la librería lmtest) que contrasta individualmente si cada coeficiente de un modelo es significativo. Esta función requiere por defecto un solo argumento, el que contiene la estimación del modelo Arima.\n\ncoeftest(arima110)\n\n\nz test of coefficients:\n\n    Estimate Std. Error z value Pr(&gt;|z|)  \nar1  0.41776    0.17414   2.399  0.01644 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nComo el valor de p es mayor que el nivel de significatividad \\(\\alpha = 0.05\\), se concluye que \\(\\phi_1\\) es significativo.\nMedia cero\nNo se puede contrastar si el residuo tiene media cero, pero el error medio es \\(ME=\\) -0.85, relativamente bajo en comparación con el valor medio de la serie.\nAdemás, tenemos las diferentes medidas de bondad del ajuste. En media nos equivocamos en 19 kg per cápita (RMSE) y el error porcentual medio (MAPE) es 2.7%. El modelo no presenta sesgo y los intervalos de confianza están correctamente calculados.\n\naccuracy(arima110)\n\n\n\n                ME  RMSE   MAE   MPE MAPE MASE  ACF1\nTraining set -0.85 19.22 14.54 -0.19 2.65 0.88 -0.05\n\n\n\n\nIncorrelación\nLo veremos con el test de Box-Ljung\n\nLa hipótesis nula es \\(H_0: \\rho_1 = ... = \\rho_k = 0\\)\nEl valor de p = 0.946 es mayor que el nivel de significatividad 0.05. No se rechaza la hipótesis de incorrelación, hasta el orden \\(k = 2\\).\n\n\nerror &lt;- residuals(arima110)\nBox.test(error, lag = 2,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 0.11069, df = 2, p-value = 0.9462\n\n\nLa elección de dos retardos para la prueba, fijado con el parámetros lag = 2, es bastante arbitraria. Sería mejor realizar la prueba para un rango de valores de \\(k\\) (véase Tabla 2).\n\n\n\n\nTabla 2: Prueba de incorrelacion para diferentes valores del retardo\n\n\n\n\n\n\nk\nvalor.de.p\n\n\n\n\n1\n0.772\n\n\n2\n0.946\n\n\n3\n0.329\n\n\n4\n0.477\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad (varianza constante)\nLo veremos con el test de Box-Ljung para el residuo al cuadrado. La hipótesis nula seria que las primeras \\(k\\) autocorrelaciones estimadas sobre el cuadrado del residuo son cero.\nEl valor de p = 0.907 es mayor que el nivel de significatividad 0.05. No se rechaza la hipótesis de homocedasticidad, hasta el orden 2.\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 0.19549, df = 2, p-value = 0.9069\n\n\nDe nuevo, la elección de dos retardos es totalmente arbitraria y sería mejor realizar la prueba para un rango de valores de \\(k\\) (véase Tabla 3).\n\n\n\n\nTabla 3: Prueba de homocedasticidad para diferentes valores del retardo\n\n\n\n\n\n\nk\nvalor.de.p\n\n\n\n\n1\n0.853\n\n\n2\n0.907\n\n\n3\n0.975\n\n\n4\n0.989\n\n\n\n\n\n\n\n\n\n\nNormalidad\nRecuerda que todos las pruebas de normalidad son muy sensibles al tamaño de la muestra. Siempre es recomendable empezar por un análisis gráfico (histograma, gráfico PP, gráfico QQ).\nSin embargo, cuando es necesario un criterio más objetivo o se precisa de un proceso automático, entonces si la muestra es reducida (30 a 50 observaciones según autores) se aplica la prueba de Shapiro-Wilk; en otro caso se aplica la prueba de Jarque-Bera (tseries) o Kolmogorov-Smirnov. En nuestro ejemplo, con 26 datos, lo correcto es aplicar la prueba de Shapiro-Wilk.\n\nshapiro.test(error)\n\n\n    Shapiro-Wilk normality test\n\ndata:  error\nW = 0.98293, p-value = 0.9138\n\n\n\n\n\n\nPredicción\nUna vez validado el modelo podemos pasar a realizar predicciones, en este caso a 5 años vista.\n\nparima110 &lt;- forecast(arima110, \n                      h = 5, \n                      level = 95)\nparima110\n\n     Point Forecast    Lo 95    Hi 95\n2023            467 427.9075 506.0925\n2024            467 399.1766 534.8234\n2025            467 374.9424 559.0576\n2026            467 354.2518 579.7482\n2027            467 336.2096 597.7904\n\n\n\nautoplot(parima110, \n         xlab = \"\", \n         ylab = \"Kg per cápita\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1999, 2027, 2)) \n\n\n\n\n\n\n\nFigura 12: Residuos (1999-2022) y predicción (2023-2027)\n\n\n\n\n\nLa Figura 12 muestra la serie, la previsión y el intervalo de confianza al 95%. La predicción es constante e igual al último dato. En las series diferenciadas el intervalo de confianza de las predicciones crece muy rápidamente porque los errores se van acumulando sin ningún tipo de amortiguamiento.\nAnecdóticamente, para este ejemplo las predicciones son constantes porque el volumen de residuos en los dos últimos años de la serie ha sido exactamente el mismo. Si te fijas en la ecuación de predicción, este hecho hace que la predicción de un año sea el valor de la serie para el año previo."
  },
  {
    "objectID": "03-04-Tema4.html#aforo-de-vehículos",
    "href": "03-04-Tema4.html#aforo-de-vehículos",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "6.2 Aforo de vehículos",
    "text": "6.2 Aforo de vehículos\nVamos a aplicar de nuevo la metodología de Box-Jenkins a la serie aforo de vehículos por Oropesa, carretera N-340, km. 996,48 (fuente Ministerio de Fomento). La serie es anual de 1960 a 2023 (64 datos) y ofrece el número medio diario de vehículos que pasan por esta carretera.\n\naforo &lt;- read.csv2(\"./series/Aforo_oropesa.csv\", \n                   header = TRUE)\naforo &lt;- ts(aforo, \n            start = 1960, \n            freq = 1)\n\nautoplot(aforo, \n         xlab = \"\", \n         ylab = \"Vehículos diarios\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 13: Aforo de vehículos en N-340, Oropesa\n\n\n\n\n\nLos puntos de inflexión de la tendencia de la serie aforo en la carretera N-340 están muy relacionados con la autopista AP-7 y las crisis ocurridas en España: la caída del aforo en 1979 se debe a la inauguración en 1978 del tramo de la AP-7 Torreblanca - Castellón; la caída en 2009 a la crisis financiera que llevó a la Gran Recesión; y la caída en 2020 a la crisis económica originada por la pandemia de la Covid-19.\nEn este ejemplo incluiremos, por primera vez, intervención y veremos como la presencia de valores atípicos puede distorsionar el proceso de identificación. Por ello, es conveniente realizar en paralelo ambas actividades, identificar el proceso y detectar valores atípicos.\n\nTransformación de la serie\nLa Figura 14 muestra que la serie Aforo no es estacionaria. por lo que el primer paso es transformar la serie original para que lo sea. La serie no es estacionaria, pero sí lo es su primera diferencia. Ten siempre presente que diferenciar más veces de las necesarias puede dificultar la identificación y la interpretación. Por otro lado, aunque la función ndiffs aconseja dos diferenciaciones, nada apunta a que esta sea una buena decisión. Así, optamos por fijar \\(d = 1\\).\n\nautoplot(aforo, xlab = \"\", ylab = \"\", main = \"\")\nautoplot(diff(aforo), xlab = \"\", ylab = \"\", main = \"\")\nggAcf(aforo, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(aforo), xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n\n\n\n\n\n\n(b) Dif. de la serie\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) FAC serie original\n\n\n\n\n\n\n\n\n\n\n\n(d) FAC dif. de la serie\n\n\n\n\n\n\n\nFigura 14: Gráfica y FAC para Aforo\n\n\n\n\n\nndiffs(aforo)\n\n[1] 1\n\n\n\n\nIdentificación y estimación\nVeamos ahora a identificar los valores de \\(p\\) y \\(q\\) a partir de la FAC y la FACP, que se muestran en la Figura 15. Ni para la FAC ni para la FACP se observan coeficientes fuera del intervalo de confianza (líneas azules de las gráficas). Podría tratarse de un proceso ARIMA(0, 1, 0).\n\nggtsdisplay(diff(aforo))\n\n\n\n\n\n\n\nFigura 15: Aforo (una diferencia)\n\n\n\n\n\n¿Qué recomienda auto.arima?\n\nauto.arima(aforo, \n           d = 1)\n\nSeries: aforo \nARIMA(0,1,0) \n\nsigma^2 = 1022556:  log likelihood = -525.28\nAIC=1052.57   AICc=1052.63   BIC=1054.71\n\n\nSugiere un proceso ARIMA(0,1,0). Vamos a ver la gráfica de los residuos del modelo para identificar los valores extremos (intervención).\n\narima010 &lt;- Arima(aforo, \n                  order = c(0, 1, 0),\n                  include.constant = FALSE)\n\nerror &lt;- residuals(arima010)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1960, 2024, 4)) \n\nfechas &lt;- format(seq(as.Date(\"1960-01-01\"), as.Date(\"2023-01-01\"), \"year\"), \"%Y\")\nfechas[abs(error) &gt; 2.5 * sderror]\n\n[1] \"1979\" \"2011\" \"2020\"\n\n\n\n\n\n\n\n\nFigura 16: Error + Intervención\n\n\n\n\n\nSe identifican tres posibles valores extremos, tres intervenciones, en los años 1979, 2011 y 2020 (el error supera las 2.5 desviaciones típicas). Cada una de las intervenciones es del tipo pulso porque solo afecta un periodo de la serie.\nAhora, creamos una variable ficticia asociada a cada intervención, que denominaremos d1979, d2011 y d2020. La forma de definir la variable ficticia asociada a un pulso consiste en crear una variable de ceros, excepto para el periodo atípico en que la variable valdrá 1.\n\nd1979 &lt;- 1*(time(error) == 1979)\nd2011 &lt;- 1*(time(error) == 2011)\nd2020 &lt;- 1*(time(error) == 2020)\n\nPor último, incluimos las tres variables ficticias en la autoidentificación.\n\nauto.arima(aforo,\n           d = 1,\n           xreg = cbind(d1979,  d2011, d2020))\n\nSeries: aforo \nRegression with ARIMA(2,1,0) errors \n\nCoefficients:\n         ar1     ar2       d1979       d2011       d2020\n      0.2008  0.4051  -1664.2472  -1187.5328  -2368.0686\ns.e.  0.1176  0.1209    497.3584    460.7665    461.7576\n\nsigma^2 = 608880:  log likelihood = -506.59\nAIC=1025.18   AICc=1026.68   BIC=1038.04\n\n\nObserva como la inclusión de intervención modifica la autoidentificación, que ahora es un proceso ARIMA(2, 1, 0).\n\narima210 &lt;- Arima(aforo, \n                  order = c(2, 1, 0), \n                  xreg = cbind(d1979,  d2011, d2020))\narima210\n\nSeries: aforo \nRegression with ARIMA(2,1,0) errors \n\nCoefficients:\n         ar1     ar2       d1979       d2011       d2020\n      0.2008  0.4051  -1664.2472  -1187.5328  -2368.0686\ns.e.  0.1176  0.1209    497.3584    460.7665    461.7576\n\nsigma^2 = 608880:  log likelihood = -506.59\nAIC=1025.18   AICc=1026.68   BIC=1038.04\n\n\nLa Figura 17 muestra que para ningún año se observa un error atípico. Es decir, no es necesaria más intervención.\n\nerror &lt;- residuals(arima210)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1960, 2024, 4)) \n\n\n\n\n\n\n\nFigura 17: Error + Intervención\n\n\n\n\n\n\n\nValidación\nVariables significativas\nLa identificación de errores atípicos —para la posterior inclusión de sus variables de intervención asociadas— ha sido un tanto arbitraria: ¿es atípico el error que supera las 2 desviaciones típicas, las dos y media, las tres desviaciones típicas?\nDe nuevo, podemos contrastar si sus coeficientes son significativos y dejar solo aquellas variables de intervención cuyo coeficientes lo sean. Aunque si la serie es suficientemente larga, también podríamos saltarnos este paso y dejar las variables de intervención que mejoren las predicciones extramuestrales del modelo o las que recojan efectos conocidos.\nVeamos qué coeficientes estimados son significativos.\n\ncoeftest(arima210)\n\n\nz test of coefficients:\n\n         Estimate  Std. Error z value  Pr(&gt;|z|)    \nar1       0.20083     0.11757  1.7082 0.0876036 .  \nar2       0.40512     0.12089  3.3510 0.0008052 ***\nd1979 -1664.24718   497.35837 -3.3462 0.0008194 ***\nd2011 -1187.53277   460.76649 -2.5773 0.0099576 ** \nd2020 -2368.06859   461.75755 -5.1284 2.922e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nLas tres variables de intervención son significativas y el coeficiente \\(\\phi_2\\) (ar2) también. No es significativo el coeficiente \\(\\phi_1\\) (ar1) al 5% pero si al 10%. En cualquier caso, los modelos Arima son modelos jerárquicos donde la presencia de un coeficiente significativo de cierto orden exige que los coeficiente de orden inferior estén presentes, sean o no significativos. En nuestro caso, como el coeficiente \\(\\phi_2\\) es significativo, se debe dejar en el modelo el coeficiente \\(\\phi_1\\).\nMedidas de error\nEl error medio es 743 vehículos por día (RMSE) y el error porcentual medio (MAPE) es 6%. No hay sesgo de predicción y la fórmula empleada para el cálculo del intervalo de confianza de las predicciones es válida.\n\naccuracy(arima210)\n\n\n\n                ME   RMSE    MAE  MPE MAPE MASE ACF1\nTraining set 49.26 742.83 551.43 1.23 5.99 0.76 0.04\n\n\n\n\nIncorrelación, Homocedasticidad y Normalidad de los residuos\nVeamos ahora si el residuo es ruido blanco:\n\nBox.test(error, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 0.17543, df = 2, p-value = 0.916\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\") \n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 2.1384, df = 2, p-value = 0.3433\n\njarque.bera.test(error)\n\n\n    Jarque Bera Test\n\ndata:  error\nX-squared = 1.3904, df = 2, p-value = 0.499\n\n\nLas hipótesis de incorrelación y homocedasticidad se aceptan. También se aceptarían para otros valores de \\(k\\) razonables. Igualmente, se acepta la hipótesis de normalidad.\n\n\nConfirmamos que \\(aforo_t \\sim ARIMA(2,1,0)\\) con intervención.\n\n\nInterpretación del modelo\nEl modelo teórico es \\(aforo_t \\sim ARIMA(2,1,0) + AI\\):\n\\[(1 - \\phi_1 L - \\phi_2 L^2)(1 - L)aforo_t =  \\varepsilon_t + \\gamma_1 \\cdot d1979 + \\gamma_2 \\cdot d2011 + \\gamma_3 \\cdot d2020.\\]\nSi desarrollamos, queda la ecuación de predicción:\n\\[aforo_t = aforo_{t-1} + \\phi_1(aforo_{t-1}-aforo_{t-2}) + \\phi_2(aforo_{t-2}-aforo_{t-3}) +\\] \\[\\gamma_1 \\cdot d1979 +  \\gamma_2 \\cdot d2011 + \\gamma_3 \\cdot d2020 + \\varepsilon_t.\\]\nFinalmente, el modelo estimado es: \\[\\widehat{aforo}_t = aforo_{t-1} + 0.20(aforo_{t-1}-aforo_{t-2}) + 0.41(aforo_{t-2}-aforo_{t-3})\\] \\[-1664 \\cdot d1979 - 1188 \\cdot d2011 - 2368 \\cdot d2020\\] Cada año el aforo es el mismo que el aforo del año pasado más un 20% del último incremento observado y un 41% del incremento anterior.\nRespecto de la intervención, en 1979 hubo cerca de 1700 de vehículos por día menos de lo esperado debido a la apertura de la autopista AP-7; en 2011 hubo unos 1200 vehículos menos debido a la Gran Recesión; y en 2020 las restricciones de movilidad debidas a la pandemia redujeron el aforo en 2400 vehículos al día.\n\n\nPredicción\nComo hemos incluido tres variables ficticias en el ajuste, de cara a predecir el aforo hemos de indicar cuales serán los valores futuros para estas variables. En este caso serán cero puesto que son intervenciones que no responden a un efecto calendario. Las causas detrás de estas dos intervenciones no se espera que se repitan en el futuro.\nEn R esto se hace incluyendo en el comando forecast el argumento xreg = cbind(rep(0, 4), rep(0, 4), rep(0, 4)) que añade cuatro ceros por cada variable de intervención porque la predicción va a ser a cuatro años vista.\n\nparima210 &lt;- forecast(arima210, \n                      h = 4, \n                      level = 95,\n                      xreg = cbind(d1979=rep(0, 4), d2011=rep(0, 4),\n                                   d2020=rep(0, 4)))\nparima210\n\n     Point Forecast    Lo 95    Hi 95\n2024       9131.695 7602.320 10661.07\n2025       9323.968 6934.030 11713.91\n2026       9479.943 6008.483 12951.40\n2027       9589.161 5142.358 14035.96\n\n\n\nautoplot(parima210, \n         xlab = \"\",\n         ylab = \"Vehículos diarios\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1960, 2028, 4)) \n\n\n\n\n\n\n\nFigura 18: Aforo (1960-2023) y predicción (2024-2027)\n\n\n\n\n\n\n\n\n\nValidación con origen de predicción móvil\nVamos a calcular el error extramuestral según el horizonte temporal de previsión. Asumiremos que se precisan 30 años para estimar el modelo, fijaremos el horizonte temporal en 4 años y calcularemos el error MedAPE, para evitar el efecto de los años atípicos.\n\nk &lt;- 30                  \nh &lt;- 4                  \nT &lt;- length(aforo)     \ns &lt;- T - k - h    \n\nmapeArima &lt;- matrix(NA, s + 1, h)\n\nfor (i in 0:s) {\n  train.set &lt;- subset(aforo, start = i + 1, end = i + k)\n  test.set &lt;-  subset(aforo, start = i + k + 1, end = i + k + h) \n  \n  fit &lt;- Arima(train.set, \n               include.constant = FALSE,\n               order = c(2, 1, 0))\n  \n  fcast &lt;- forecast(fit, h = h)\n\n  mapeArima[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n  \n}\n\nmapeArima &lt;- apply(mapeArima, MARGIN = 2, FUN = median)\nmapeArima\n\n[1]  2.053941  5.644667  9.994919 12.232991\n\n\nEl error de previsión extramuestral crece notablemente con el horizonte temporal. El error de las previsiones a un año vista es del 2%, muy inferior al error intramuestral del 6% por ser un error mediano, pero para tres años vista alcanza el 10%."
  },
  {
    "objectID": "03-04-Tema4.html#consumo-de-alimentos-en-el-hogar-per-cápita",
    "href": "03-04-Tema4.html#consumo-de-alimentos-en-el-hogar-per-cápita",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "6.3 Consumo de alimentos en el hogar per cápita",
    "text": "6.3 Consumo de alimentos en el hogar per cápita\nAnalizaremos el consumo alimentario en hogar per cápita en España. Esta serie está construida a partir de la serie de consumo alimentario en hogar (disponible en el Ministerio de Agricultura, Alimentación y Medio Ambiente), y la serie de población (disponible en el Instituto Nacional de Estadística). Es una serie anual de 1990 a 2023 (34 datos) y la unidad es el Kg per cápita. La Figura 19 muestra que es una serie estacionaria.\n\nalimentospc &lt;- read.csv2(\"./series/Alimentacionpc.csv\",\n                         header = TRUE)\n\nalimentospc &lt;- ts(alimentospc,\n                  start = 1990, \n                  freq = 1)\n    \nautoplot(alimentospc, \n         xlab = \"\", \n         ylab = \"Kg per cápita\",\n         main = \"\",\n         ylim = c(0, 700))\n\n\n\n\n\n\n\nFigura 19: Consumo alimentario en hogar\n\n\n\n\n\nEl pico en el año 2020 se debe al aumento del consumo de alimentos en el hogar causado por el periodo de confinamiento por la Covid-19 (marzo a junio) y el aumento del trabajo desde casa. La aparente caída en 2022 y 2023 se debe a que como efecto rebote, los españoles ahora comemos y cenamos más fuera del hogar.2\n\nTransformación de la serie\nLa Figura 20 indica que la serie original ya es estacionaria y la función ndiffs lo corrobora. Por tanto asumimos que \\(d=0\\) o \\(alimentospc_t \\sim I(0)\\).\n\nautoplot(alimentospc, xlab = \"\", ylab = \"\", main = \"\")\nautoplot(diff(alimentospc), xlab = \"\", ylab = \"\", main = \"\")\nggAcf(alimentospc, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(alimentospc), xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n\n\n\n\n\n\n(b) Dif. de la serie\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) FAC serie original\n\n\n\n\n\n\n\n\n\n\n\n(d) FAC dif. de la serie\n\n\n\n\n\n\n\nFigura 20: Gráfica y FAC para Alimentos\n\n\n\n\n\nndiffs(alimentospc)\n\n[1] 0\n\n\n\n\nIdentificación y Estimación\nPara identificar los valores de \\(p\\) y \\(q\\) veremos que nos sugiere auto.arima :\n\nauto.arima(alimentospc,\n           d = 0)\n\nSeries: alimentospc \nARIMA(1,0,0) with non-zero mean \n\nCoefficients:\n         ar1      mean\n      0.6580  627.8584\ns.e.  0.1552   10.0112\n\nsigma^2 = 438.3:  log likelihood = -150.91\nAIC=307.82   AICc=308.62   BIC=312.39\n\n\nLa identificación automática sugiere un proceso AR(1) con constante. Tanto el coeficiente de la constante (“mean” en la salida) como el coeficiente del proceso autorregresivo son significativos —su valor supera dos veces su error estándar.\nVamos a ver la gráfica de los residuos de este proceso para identificar rápidamente si hay valores extremos (Figura 21).\n\narima100 &lt;- Arima(alimentospc, \n                  order = c(1, 0, 0),\n                  include.constant = TRUE)\n\nerror &lt;- residuals(arima100)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1990, 2024, 2)) \n\nfechas &lt;- format(seq(as.Date(\"1990-01-01\"), as.Date(\"2023-01-01\"), by = \"year\"), \"%Y\")\nfechas[abs(error) &gt; 2.5 * sderror]\n\n[1] \"2020\" \"2022\"\n\n\n\n\n\n\n\n\nFigura 21: Error + Intervención\n\n\n\n\n\nHay dos valores extremos, uno en 2020 asociado al aumento de las comidas en el hogar por el confinamiento durante la pandemia y otro en 2022 asociado a un aumento de las comidas fuera del hogar tras la pandemia. Tras crear las variables ficticias asociadas a los años 2020 y 2022, la autoidentifición sigue mostrando un proceso ARIMA(1, 0, 0) con constante.\n\nd2020 &lt;- 1* (time(alimentospc) == 2020)\nd2022 &lt;- 1* (time(alimentospc) == 2022)\n\nauto.arima(alimentospc, \n           d = 0, \n           xreg = cbind(d2020, d2022))\n\nSeries: alimentospc \nRegression with ARIMA(1,0,0) errors \n\nCoefficients:\n         ar1  intercept    d2020     d2022\n      0.8437   621.3033  56.3963  -25.8095\ns.e.  0.1165    15.9562  11.5793   11.6058\n\nsigma^2 = 260:  log likelihood = -141.27\nAIC=292.54   AICc=294.68   BIC=300.17\n\n\nVamos a estimar el modelo identificado.\n\narima100 &lt;- Arima(alimentospc, \n                  order = c(1, 0, 0),\n                  include.constant = TRUE,\n                  xreg = cbind(d2020, d2022))\narima100\n\nSeries: alimentospc \nRegression with ARIMA(1,0,0) errors \n\nCoefficients:\n         ar1  intercept    d2020     d2022\n      0.8437   621.3033  56.3963  -25.8095\ns.e.  0.1165    15.9562  11.5793   11.6058\n\nsigma^2 = 260:  log likelihood = -141.27\nAIC=292.54   AICc=294.68   BIC=300.17\n\n\nVamos a ver la gráfica de los residuos de este proceso para determinar si hay más valores extremos (Figura 22).\n\nerror &lt;- residuals(arima100)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1990, 2024, 4)) \n\nfechas[abs(error) &gt; 2.5 * sderror]\n\n[1] \"2023\"\n\n\n\n\n\n\n\n\nFigura 22: Error + Intervención\n\n\n\n\n\nSe identifican otro posible valor extremo para el año 2023 (el error supera las 2.5 desviaciones típicas). Parece que, tras la pandemia, los españoles tenemos más ganas de disfrutar de nuestro ocio y salimos más a comer y cenar fuera, reduciendo el consumo de alimentos del hogar. Vamos a crear una variable para 2023. Además, si aplicamos auto.arima añadiendo esta nueva intervención, la identificación se mantiene.\n\nd2023 &lt;- 1* (time(alimentospc) == 2023)\n\narima100 &lt;- Arima(alimentospc, \n                  order = c(1, 0, 0),\n                  include.constant = TRUE,\n                  xreg = cbind(d2020, d2022, d2023))\narima100\n\nSeries: alimentospc \nRegression with ARIMA(1,0,0) errors \n\nCoefficients:\n         ar1  intercept    d2020     d2022     d2023\n      0.6779   633.7288  55.2611  -62.9218  -74.1954\ns.e.  0.1217     6.1392   9.8598   12.0579   14.7748\n\nsigma^2 = 164:  log likelihood = -132.55\nAIC=277.09   AICc=280.2   BIC=286.25\n\n\nSi se repite el análisis de intervención, aparece otro valor extremo en 1999, con un consumo inferior al esperado. Sin embargo, para este año no se identifica ninguna razón para la caída del consumo por lo que damos el modelo previo como definitivo. Toda intervención debe tener detrás una causa identificable, si no puede ser fruto de simple azar.\n\n\nValidación\nCoeficientes significativos\nTanto \\(\\phi_1\\) como el intercepto \\(\\mu\\) y las variables de intervención son significativas.\n\ncoeftest(arima100)\n\n\nz test of coefficients:\n\n           Estimate Std. Error  z value  Pr(&gt;|z|)    \nar1         0.67790    0.12175   5.5680 2.577e-08 ***\nintercept 633.72878    6.13923 103.2262 &lt; 2.2e-16 ***\nd2020      55.26113    9.85985   5.6047 2.087e-08 ***\nd2022     -62.92176   12.05786  -5.2183 1.806e-07 ***\nd2023     -74.19542   14.77481  -5.0218 5.120e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nMedidas de error\nEl error medio es 11.8 kg per cápita (RMSE) y el error porcentual medio (MAPE) es 1.3%. No hay sesgo y los intervalos de confianza de las predicciones son correctos.\n\naccuracy(arima100)\n\n\n\n               ME  RMSE  MAE MPE MAPE MASE ACF1\nTraining set 0.25 11.83 8.33   0 1.32 0.58  0.1\n\n\n\n\nIncorrelación, Homocedasticidad y Normalidad del residuo\nVeamos ahora si el residuo es ruido blanco:\n\nerror &lt;- residuals(arima100)\nBox.test(error, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 0.50419, df = 2, p-value = 0.7772\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\") \n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 0.21893, df = 2, p-value = 0.8963\n\njarque.bera.test(error)\n\n\n    Jarque Bera Test\n\ndata:  error\nX-squared = 1.703, df = 2, p-value = 0.4268\n\n\nLas hipótesis de incorrelación y homocedasticidad se aceptan. También se aceptarían para otros valores de \\(k\\) razonables. La hipótesis de normalidad también se acepta al 5%.\n\n\nInterpretación del modelo\nEl modelo teórico identificado es \\[(1 - \\phi_1 L) alimentospc_t = c +  \\gamma_1 d2020 + \\gamma_2 d2022 + \\gamma_3 d2023 + \\varepsilon_t,\\] que desarrollando queda (ecuación de predicción) \\[alimentospc_t = c + \\phi_1 alimentospc_{t-1} + \\gamma_1 d2020 + \\gamma_2 d2022 + \\gamma_3 d2023 + \\varepsilon_t.\\]\nFinalmente, el modelo estimado es \\[\\widehat{alimentospc}_t = 204.1 + 0.68 \\cdot alimentospc_{t-1} +\\] \\[55.3\\cdot d2020 - 62.9\\cdot d2022 - 74.2\\cdot d2023.\\]\n\n\n\n\n\n\nLa constante del modelo teórico y la media del modelo estimado\n\n\n\nEl término contante \\(\\mu\\) que estima R no es el valor “c” que hemos visto en la teoría. Para convertir la contante estimada por R en “c” hemos de multiplicarla por el polinomio autorregresivo. En este caso, \\[c = (1 - \\phi_1)\\cdot \\mu = (1 - 0.67790) \\cdot 633.72878= 204.124\\]\n\n\nCada año el consumo de alimentos per cápita en el hogar es 204 kilos más un 68% del consumo del año pasado.\nEn 2020, debido al efecto combinado del periodo de confinamiento entre marzo y junio y el incremento del trabajo en casa, se produjo un fuerte aumento del consumo de alimentos en el hogar, estimado en 55 kg per cápita. Por el contrario, en 2022 y 2023 se redujo en 63 y 74 kg, respectivamente, por el aumento del ocio.\nSi el incremento en las salidas a comer y cenar fuera se mantiene, la caída en el consumo de alimentos en el hogar se hará permanente y debemos pensar en un cambio de nivel más que en la presencia de dos intervenciones independientes.\n\n\nPredicciones de la serie\nComo hemos incluido tres variables ficticias en el ajuste, de cara a predecir el consumo de alimentos hemos de indicar cuales serán los valores futuros para estas variables. En el caso de asumir que el consumo de alimentos en el hogar va a volver a sus valores prepandemia, el valor futuro de las variables intervención será cero. Estamos asumiendo que las causas detrás de estas intervenciones no se repitirán en el futuro.\n\nparima100 &lt;- forecast(arima100, \n                      h = 5, \n                      level = 95,\n                      xreg = cbind(rep(0, 5), rep(0, 5), rep(0, 5)))\nparima100\n\n     Point Forecast    Lo 95    Hi 95\n2024       630.9756 605.8746 656.0765\n2025       631.8624 601.5375 662.1873\n2026       632.4635 600.0188 664.9083\n2027       632.8711 599.4973 666.2448\n2028       633.1473 599.3552 666.9395\n\n\nAhora bien, si pensamos que la caída del consumo de alimentos en el hogar por un aumento del ocio es un efecto permanente, podemos actualizar nuestras previsiones poniendo el valor de 1, en lugar de 0, como valores futuros de d2022 o de d2023, según creamos que el efecto va a ser mayor o menor.\n\nparima100b &lt;- forecast(arima100, \n                       h = 5, \n                       level = 95,\n                       xreg = cbind(rep(0, 5), rep(0, 5), rep(1, 5)))\nparima100b\n\n     Point Forecast    Lo 95    Hi 95\n2024       556.7802 531.6792 581.8811\n2025       557.6670 527.3420 587.9919\n2026       558.2681 525.8234 590.7129\n2027       558.6757 525.3019 592.0494\n2028       558.9519 525.1598 592.7441\n\n\nObserva que estas últimas predicciones son menores que las obtenidas previamente. Podemos ver gráficamente el efecto sobre las predicciones de cada supuesto (véase la Figura 23).\n\nautoplot(alimentospc, \n         series = \"Alimentos\",\n         xlab = \"\",\n         ylab = \"Kg per cápita\",\n         main = \"\",\n         PI = FALSE,\n         ylim = c(300, 700)) +\n  autolayer(parima100,  PI = FALSE, series = \"Aumento ocio desaparece\") +\n  autolayer(parima100b, PI = FALSE, series = \"Aumento ocio se mantiene\") +\n  scale_x_continuous(breaks= seq(1990, 2028, 4)) +\n  scale_colour_discrete(limits=c(\"Alimentos\", \"Aumento ocio desaparece\", \n                                 \"Aumento ocio se mantiene\")) +\n  labs(colour=\"Predicciones\") + \n  theme(legend.position=c(0.2,0.2))\n\n\n\n\n\n\n\nFigura 23: Consumo de alimentos y predicción"
  },
  {
    "objectID": "03-04-Tema4.html#comparación-con-alisado-exponencial",
    "href": "03-04-Tema4.html#comparación-con-alisado-exponencial",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "6.4 Comparación con alisado exponencial",
    "text": "6.4 Comparación con alisado exponencial\nVeamos una comparativa, para los tres ejemplos vistos, entre los resultados obtenidos con ARIMA y con Alisado exponencial.\n\nResiduos:\n\nMAPE ARIMA: \\(2.65\\%\\) - ARIMA(1,1,0) sin deriva\nMAPE ETS: \\(2.95\\%\\) - ETS(M,N,N), \\(\\alpha=1\\)\nAmbos métodos presentan similar calidad de ajuste.\n\n\n\nAforo:\n\nMAPE ARIMA: \\(5.99\\%\\) - ARIMA(2,1,0) sin deriva, con intervención\nMAPE ETS: \\(7.42\\%\\) - ETS(M,A,N), \\(\\alpha=0.94\\), \\(\\beta=0.05\\)\nARIMA tiene menor error al incluir tres variables de intervención\n\n\n\nAlimentos per cápita:\n\nMAPE ARIMA: \\(1.32\\%\\) - ARIMA(1,0,0) con constante e intervención\nMAPE ETS: \\(2.24\\%\\) - ETS(A,N,N), \\(\\alpha = 0.95\\)\nARIMA tiene menor error menor y permite capturar la caída del consumo de alimentos en el hogar tras la pandemia"
  },
  {
    "objectID": "03-04-Tema4.html#footnotes",
    "href": "03-04-Tema4.html#footnotes",
    "title": "Series Temporales: Procesos ARIMA",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nMira en la ayuda de la función Arima la diferencia entre los argumentos include.mean, include.drift e include.constant↩︎\nSegún el INE, el gasto monetarios per cápita de los españoles en restauración y hoteles cayó ligeramente en 2018 y 2019, y retrocedió un 40% en 2020 a causa de la pandemia. Desde entonces, el gasto per cápita en esta partida ha crecido año tras año: un 30.7% en el 2021 y 2022 y un 13.6% en el 2023.↩︎"
  },
  {
    "objectID": "04-05-Valores_perdidos_Outliers.html#footnotes",
    "href": "04-05-Valores_perdidos_Outliers.html#footnotes",
    "title": "Valores perdidos y valores atípicos",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nLos métodos sencillos de previsión y los modelos ARIMA funcionan perfectamente con valores perdidos, pero la función ets para Alisado exponencial o las funciones stlf y tbats, para trabajar con series con más de una componente estacional, no funcionan si hay valores perdidos.↩︎\nEl nombre de la función na.interp viene de unir na de not available (valor perdido) e interp de interpolación.↩︎\nPuedes leer más detalles sobre el proceso de identificación de valores atípicos usado por la función tsoutlier pinchando aquí↩︎"
  },
  {
    "objectID": "03-08-Ejemplo3.html",
    "href": "03-08-Ejemplo3.html",
    "title": "Defunciones por Enfermedades Cerebrovasculares",
    "section": "",
    "text": "1 Introducción\nConsideremos la serie temporal correspondiente al número de defunciones causadas por enfermedades cerebrovasculares, Esta serie está disponible en el Instituto Nacional de Estadística desde enero de 1980 hasta diciembre de 2023, un total de 44 años o 528 meses.\nEn la descriptiva vimos que la descomposición revelaba la presencia de varios valores atípicos concentrados al inicio de la serie. Por este motivo, vamos a recortar la serie y considerarla solo desde enero de 1990, 34 años o 408 meses.\nLa serie presenta tendencia decreciente y estacionalidad de orden 12 en un claro esquema multiplicativo (véase Figura 1). Ya vimos que el determinante principal del efecto estacional es la temperatura.\n\nDefEnfCer &lt;- read.csv2(\"./series/Enfermedades cerebrovasculares.csv\", \n                       header = TRUE)\n\nDefEnfCer &lt;- ts(DefEnfCer[,2], \n                start = 1980, \n                frequency = 12)\n\nDefEnfCer &lt;- window(DefEnfCer, \n                    start = 1990)\n\nautoplot(DefEnfCer,\n         xlab = \"\",\n         ylab = \"Defunciones\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1990, 2024, 2)) \n\n\n\n\n\n\n\nFigura 1: Defunciones causadas por enfermedades cerebrovasculares\n\n\n\n\n\nVeamos que transformaciones son necesarias para lograr que la serie sea estacionaria y ergódica.\n\n\n\n\n\n2 Transformación logarítmica\nEl esquema multiplicativo aconseja el uso del logaritmo para el análisis de la serie. Veamos que transformación de Box-Cox nos sugiere R:\n\n(nl &lt;- BoxCox.lambda(DefEnfCer))\n\n[1] -0.5491545\n\nwDefEnfCer &lt;-BoxCox(DefEnfCer, lambda = nl)\n\nEl valor sugerido de \\(\\lambda=-0.55\\) está alejado de 0 y es difícil de interpretar. Afortunadamente la Figura 2 muestra que la transformación logarítmica (panel inferior) genera una serie muy similar a la transformación de Box-Cox óptima (panel medio); y que ambas series transformadas tienen una varianza más constante que la serie original (panel superior).\n\nseries &lt;- cbind(\"Original\" = DefEnfCer,\n                \"Transformación Box-Cox\" = wDefEnfCer,\n                \"Logaritmo\" = log(DefEnfCer))\nautoplot(series, facets = TRUE,\n         xlab = \"\",\n         ylab = \"\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 2: Defunciones causadas por enfermedades cerebrovasculares y algunas transformaciones\n\n\n\n\n\nConcluimos que se usará el logaritmo de las defunciones causadas por enfermedades cerebrovasculares en lugar de la serie original.\n\n\n\n\n\n3 Diferenciaciones\nUna vez decidida la transformación logarítmica, usaremos la FAC para determinar las diferenciaciones necesarias para alcanzar una serie estacionaria en media y ergódica.\n\nggAcf(log(DefEnfCer), lag = 48, ylim = c(-1, 1))\nggAcf(diff(log(DefEnfCer)), lag = 48, ylim = c(-1, 1))\nggAcf(diff(log(DefEnfCer), lag = 12),lag = 48, ylim = c(-1, 1))\nggAcf(diff(diff(log(DefEnfCer), lag=12)), lag = 48, ylim = c(-1, 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n(b) Dif. regular de la serie\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Dif. estacional de la serie\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n(d) Dif. regular y estacional de la serie\n\n\n\n\n\n\n\nFigura 3: FAC para Defunciones (log)\n\n\n\n\nLos dos paneles superiores de la Figura 3 muestran que ni el logaritmo de la serie, ni su tasa de variación mensual \\((\\nabla \\log(y_t))\\) son ergódicas. Obsérvese que en ambos casos ni al cabo de 48 retardos los coeficientes de autocorrelación son nulos.\nClaramente, la doble diferencia del logaritmo de la serie es estacionaria y ergódica porque el panel (d) muestra que sólo unos pocos coeficientes de autocorrelación son no nulos.\nLa tasa de variación anual \\((\\nabla_{12} \\log(y_t))\\) no ofrece resultados tan claros. El panel (c) muestra una rápida caída de los valores de la autocorrelación en la parte regular (primeros valores de retardo), pero siguen observándose valores no nulos para valores de retardo altos.\nPor otro lado, las funciones ndiffsy nsdiffs avalan la doble diferenciación regular y estacional.\n\nndiffs(log(DefEnfCer))\n\n[1] 1\n\nnsdiffs(log(DefEnfCer))\n\n[1] 1\n\n\nConcluimos que para alcanzar la estacionariedad y verificar la hipótesis de ergodicidad es necesario diferenciar tanto en su parte regular como estacional el logaritmo de la serie: \\(log({y_t}) \\sim I_{12}(1)I(1)\\). Es decir, la serie que verifica todas las hipótesis es \\(\\nabla \\nabla_{12} log({y_t})\\).\nPara finalizar, mostramos gráficamente la serie original y la serie transformada (Figura 4), así como la FAC y FACP de la serie transformada (Figura 5).\n\nseries &lt;- cbind(\"Original\" = DefEnfCer,\n                \"Dif reg. y est. de log\" = diff(diff(log(DefEnfCer), lag = 12)))\nautoplot(series, facets = TRUE,\n         xlab = \"\",\n         ylab = \"\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 4: Defunciones causadas por enfermedades cerebrovasculares. Serie original y transformada\n\n\n\n\n\n\nggtsdisplay(diff(diff(log(DefEnfCer)), lag = 12))\n\n\n\n\n\n\n\nFigura 5: Defunciones por enfermedades cerebrovasculares, FAC y FACP de la serie transformada\n\n\n\n\n\n\n\n\n\n\n4 Contraste KPSS\nVamos a analizar la estacionariedad en media a partir del contraste de raíces unitarias. Como la serie original tiene estacionalidad, vamos a realizar la prueba KPSS a partir de la serie anualizada, ya mostrada en la descriptiva (véase Figura 6).\n\nDefEnfCerAnual &lt;- aggregate(DefEnfCer, FUN = sum)\n\nautoplot(DefEnfCerAnual,\n         xlab = \"\",\n         ylab = \"\",\n         main = \"\") \n\n\n\n\n\n\n\nFigura 6: Defunciones anuales causadas por enfermedades cerebrovasculares\n\n\n\n\n\nProcedemos con la prueba de KPSS con y sin tendencia determinista:\n\nsummary(ur.kpss(DefEnfCer, type='tau', lags = 'short'))\n\n\n####################### \n# KPSS Unit Root Test # \n####################### \n\nTest is of type: tau with 5 lags. \n\nValue of test-statistic is: 0.0445 \n\nCritical value for a significance level of: \n                10pct  5pct 2.5pct  1pct\ncritical values 0.119 0.146  0.176 0.216\n\n\nPara un nivel de confianza del 5%, si asumimos la presencia de tendencia determinista (type = tau), entonces no hay tendencia estocástica –el estadístico de contraste 0.0445 es menor que el valor crítico 0.146.\n\nsummary(ur.kpss(DefEnfCer, type='mu', lags = 'short'))\n\n\n####################### \n# KPSS Unit Root Test # \n####################### \n\nTest is of type: mu with 5 lags. \n\nValue of test-statistic is: 6.0744 \n\nCritical value for a significance level of: \n                10pct  5pct 2.5pct  1pct\ncritical values 0.347 0.463  0.574 0.739\n\n\nSi asumimos que no hay tendencia determinista, entonces hay tendencia estocástica –el estadístico de contraste 6.07 es mayor que el valor crítico 0.463.\nEn ambos casos concluimos que la serie no es estacionaria.\nSi repetimos el contraste con la serie diferenciada, esta vez para un modelo sin tendencia determinista (type = mu) no se rechaza la hipótesis nula, la serie diferenciada no tiene raíces unitarias y puede considerarse estacionaria.\n\nsummary(ur.kpss(diff(DefEnfCer), type='mu', lags = 'short'))\n\n\n####################### \n# KPSS Unit Root Test # \n####################### \n\nTest is of type: mu with 5 lags. \n\nValue of test-statistic is: 0.021 \n\nCritical value for a significance level of: \n                10pct  5pct 2.5pct  1pct\ncritical values 0.347 0.463  0.574 0.739\n\n\nLa serie anual de defunciones es integrada de orden uno \\(y_t \\sim I(1)\\)."
  },
  {
    "objectID": "03-03-Tema3.html",
    "href": "03-03-Tema3.html",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "",
    "text": "En este tema vamos a definir una serie de conceptos que permitirán entender mejor una serie temporal como una muestra de un proceso generador de datos (PGD). Veremos también herramientas para realizar una descriptiva de una la serie temporal (muestra) que permitirá estimar el PGD que hay detrás y así poder hacer predicciones (inferencia).\nComo en el estudio de muestras transversales, la hipótesis de normalidad es conveniente, pero a esta hay que añadir las hipótesis de estacionariedad y ergodicidad.\nEn los temas siguientes haremos uso constante de los conceptos aquí definidos."
  },
  {
    "objectID": "03-03-Tema3.html#definición",
    "href": "03-03-Tema3.html#definición",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "2.1 Definición",
    "text": "2.1 Definición\nUn proceso estocástico \\(Y_t\\) es (sin excesiva precisión) una variable aleatoria que corresponde a momentos sucesivos del tiempo.\nComo toda variable aleatoria, su caracterización puede hacerse a través de su función de distribución o a partir de sus momentos.\n\nLa caracterización de un proceso estocástico mediante los momentos de primer y segundo orden (medias y covarianzas) es más incompleta que cuando se hace mediante funciones de distribución.\nBajo la hipótesis de normalidad el proceso estocástico queda completamente caracterizado a través de los dos primeros momentos.\n\nNosotros contamos con una sola realización del proceso estocástico \\(Y_t\\), la serie temporal observada \\(\\{y_t\\}_{t=1}^T\\).\n\nA partir de \\(\\{y_t\\}_{t=1}^T\\) estimaremos los momentos de primer y segundo orden (medias y covarianzas).\nEstos momentos nos permitirán identificar el PGD.\nUna vez identificado, estimaremos el PGD y podremos realizar inferencia (contrastes de hipótesis y predicciones).\n\nPara que esta línea de razonamiento sea válida es necesario que el proceso sea estacionario y ergódico."
  },
  {
    "objectID": "03-03-Tema3.html#proceso-estacionario",
    "href": "03-03-Tema3.html#proceso-estacionario",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "2.2 Proceso estacionario",
    "text": "2.2 Proceso estacionario\n\nProceso estacionario en sentido estricto\nUn proceso es estacionario en sentido estricto cuando la distribución conjunta no varía al realizar un desplazamiento en el tiempo de todas las variables.\n\nSi \\(F(Y_{t_1},..., Y_{t_k})\\) es la función de distribución conjunta y \\(h&gt;0\\), entonces el proceso es estacionario en sentido estricto si \\[F(Y_{t_1},..., Y_{t_k}) = F(Y_{t_1+h},..., Y_{t_k+h})\\]\n\nIntuitivamente, viendo aisladamente algunos los datos de la serie es imposible saber a que periodo temporal corresponden.\nComprobar si un proceso es estacionario en sentido estricto es muy difícil, así que vamos a encontrar condiciones suficientes: estacionariedad en media y en sentido amplio (covarianza).\n\n\nProceso estacionario en media\nUn proceso es estacionario en media (o de primer orden) si su nivel se mantiene en el tiempo: \\[E[Y_t] = \\mu \\; \\; \\forall t\\]\n\n\nProceso estacionario en sentido amplio\nUn proceso (ya estacionario en media) es estacionario en sentido amplio, o de segundo orden, si sus momentos de orden dos no dependen del tiempo:\n\nLa (auto)covarianza entre dos periodos de tiempo es finita y sólo depende del intervalo de tiempo transcurrido entre estos dos periodos: \\[Cov[Y_t, Y_{t+k}] = E[(Y_t - \\mu)(Y_{t+k} - \\mu)] = \\gamma_k,\\,\\,\\,\\forall t\\]\n\nObserva que la varianza será entonces \\(Var[Y_t] = E[(Y_t - \\mu)^2] = \\gamma_0\\).\nSi en el contexto de series temporales la autocovarianza la interpretamos como la información de la serie que se transmite entre dos periodos de tiempo \\(t\\) y \\(t'\\), el supuesto de estacionariedad en sentido amplio nos dice que la información transmitida solo depende de la distancia temporal entre los dos periodos \\(t - t'\\) y no los periodos en si mismos. Por ejemplo, los nacimientos en enero de un año me dan información sobre los nacimientos en enero del año siguiente, y esta información es la misma e independiente del año en consideración. Además, la información transmitida entre dos eneros consecutivos es la misma que entre dos febreros o dos marzos consecutivos porque la distancia es la misma, 12 meses.\n\n\nLa Figura 1 muestra la serie Nacimientos que no es estacionaria ni en media, ni en varianza. No lo es en media por que presenta tendencia y, por tanto, el valor medio de la serie cambia en el tiempo; y no es estacionaria en varianza por que al inicio de la serie los datos presenta más variabilidad que a finales del siglo pasado.\n\n\n\n\n\n\n\n\nFigura 1: Nacimientos mensuales\n\n\n\n\n\n\n\nUn proceso estacionario en sentido estricto también es estacionario en sentido amplio, pero lo contrario no es cierto. Ahora bien, bajo normalidad un proceso estacionario en sentido amplio también lo será en sentido estricto."
  },
  {
    "objectID": "03-03-Tema3.html#proceso-ergódico",
    "href": "03-03-Tema3.html#proceso-ergódico",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "2.3 Proceso ergódico",
    "text": "2.3 Proceso ergódico\nEn el tema siguiente se verá que la estimación de los momentos de primer y segundo orden de la serie temporal permite identificar y estimar el PGD.\nPara que la estimación de los momentos sea consistente el proceso debe ser ergódico: \\[\\lim_{T\\rightarrow \\infty} Var(\\frac{1}{T}\\sum_{t=1}^T Y_t)=0. \\]\nPara que un proceso sea ergódico las observaciones nuevas tienen que aportar suficiente información para que la varianza del valor medio converja a 0. Esto no ocurre si la dependencia entre las variables es muy fuerte.\nUna condición necesaria pero no suficiente para que un proceso estacionario sea ergódico es:\n\\[\\lim_{k\\rightarrow \\infty} \\gamma_k = 0.\\] Es decir, que cuanto más distancia hay entre dos periodos, menos información se transmite. Alternativamente, que el pasado cada vez ayuda menos a entender el presente."
  },
  {
    "objectID": "03-03-Tema3.html#normalidad",
    "href": "03-03-Tema3.html#normalidad",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "2.4 Normalidad",
    "text": "2.4 Normalidad\nAsumiremos que el error del modelo se distribuye como una variable aleatoria normal. Esta hipótesis se puede relajar si la serie tiene suficientes datos."
  },
  {
    "objectID": "03-03-Tema3.html#ideas-generales",
    "href": "03-03-Tema3.html#ideas-generales",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "3.1 Ideas generales",
    "text": "3.1 Ideas generales\nUna serie temporal \\(\\{y_t\\}_{t=1}^T\\) no tiene porque verificar las condiciones de estacionariedad, ergodicidad y normalidad.\nA continuación, veremos una serie de transformaciones que convierten una serie no estacionaria en estacionaria; no ergódica en ergódica; y, de paso, facilitan la verificación de la hipótesis de normalidad, que dejaremos para más adelante.\nEn el panel superior de la Figura 2 vuelves a tener la serie de nacimientos, que denominaremos \\(y_t\\); en el segundo panel la diferencia de la serie, \\(y_t - y_{t-1}\\); y en el panel inferior tienes la diferencia de la transformación logarítmica de la serie, \\(log(y_t) - log(y_{t-1})\\). La serie nacimientos no es estacionaria en media ni en varianza, su diferencia es estacionaria en media, pero no en varianza. Sin embargo, la transformación logarítmica y la diferencia han logrado que sea estacionaria en ambos sentidos.\n\n\n\n\n\n\n\n\nFigura 2: Serie Nacimientos, su diferencia y la diferencia del logaritmo"
  },
  {
    "objectID": "03-03-Tema3.html#diferenciación",
    "href": "03-03-Tema3.html#diferenciación",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "3.2 Diferenciación",
    "text": "3.2 Diferenciación\nLa diferenciación permite transformar una serie no estacionaria en media en estacionaria en media.\nDiferenciar de orden \\(k\\) consiste en restar a la observación de un periodo la de \\(k\\) periodos antes: \\[\\nabla_k y_t = y_t - y_{t-k}.\\]\n\nDiferenciación regular (\\(k=1\\))\nUn caso concreto es la diferenciación regular o diferenciación de orden uno, que consiste en restar a la observación de un periodo la del periodo precedente:\n\\[\\nabla y_t = y_t - y_{t-1}.\\]\nSi \\(\\nabla y_t\\) no fuera estacionaria, se diferenciaría (regularmente) una segunda vez para obtener una doble diferenciación de primer orden:\n\\[\\nabla^{2} y_t = \\nabla(\\nabla y_t) = \\nabla y_t - \\nabla y_{t-1} = (y_t - y_{t-1}) - (y_{t-1} - y_{t-2}) = y_t - 2y_{t-1} + y_{t-2}\\]\nEn la práctica una sola diferenciación suele ser suficiente para obtener la estacionariedad en media; diferenciar dos veces es excepcional; y diferenciar tres o más veces no se da.\nAdemás, en series sin estacionalidad la diferenciación también permite alcanzar la ergodicidad.\n\n\nDiferenciación estacional (\\(k=m\\))\nLa diferencia estacional consiste en restar a la observación de un periodo la observación precedente de la misma estación. Si el orden estacional es \\(m\\), entonces la diferencia estacional de \\(y_t\\) es\n\\[\\nabla_m y_t = y_t - y_{t-m}.\\]\nUna serie no estacionaria en media puede pasar a serlo tras diferenciarla estacionalmente. Es general, cualquiera de las dos diferenciaciones vistas (regular o estacional) o ambas a la vez son alternativas para obtener la estacionariedad.\nAdemás, la diferenciación (regular, estacional o ambas) también permite alcanzar la ergodicidad.\nLa Figura 3 muestra un ejemplo de diferenciación regular y/o estacional. En el primer panel aparece la serie original Nacimientos \\(y_t\\); el segundo panel muestra la serie diferenciada regularmente \\(\\nabla y_t\\); en el tercer panel la serie diferenciada estacionalmente \\(\\nabla_{12} y_t\\); y en el cuarto panel muestra la serie diferenciada regular y estacionalmente \\(\\nabla\\nabla_{12} y_t\\).\n\n\n\n\n\n\n\n\nFigura 3: Nacimientos mensuales y diferenciaciones\n\n\n\n\n\n¿Qué transformación para nacimientos consideras que genera una serie estacionaria, tanto en media como en varianza? Siempre hay un cierto grado de subjetividad en la elección de las diferencias que hay que aplicar a una serie. En la figura 4 podemos considerar que la diferenciación regular (panel 2) es suficiente para lograr la estacionariedad en media y en varianza y terminar el proceso de diferenciación. Pero también podemos considerar que la serie es estacionaria en media pero no en varianza, y optar por la doble diferenciación, regular y estacional (panel 4). Existen contrastes para ayudarnos en esta decisión (véase epígrafe 5), pero la conclusión puede depender el tipo de contraste elegido o de ciertos parámetros técnicos usados en los contrastes. Muchas veces la decisión final se realiza durante el proceso de modelización o simplemente se opta por la que mejores predicciones genere.\n\n\nDiferenciación con R\nR dispone de la función diff para diferenciar una serie:\n\ndiff(x, lag = k) calcula la diferencia de orden \\(k\\), \\(\\nabla_k y_t\\)\ndiff(x) calcula la diferencia regular o de orden \\(1\\), \\(\\nabla y_t\\) (el valor por defecto de lag es 1)\ndiff(x, difference = d) calcula \\(d\\) diferencias regulares, \\(\\nabla^d y_t\\)\ndiff(x, lag = m) calcula una diferencia estacional, \\(\\nabla_m y_t\\)\n\nSi necesitas calcular una diferencia regular y otra estacional, \\(\\nabla\\nabla_m y_t\\), debes usar diff(diff(x, lag = m)). El orden de las diferenciaciones no cambia el resultado.\nAdemás, en forecast están disponibles las funciones ndiffs y nsdiffs que estiman, respectivamente, el número de diferencias regulares y estacionales necesarias. En el primer caso se usa un contraste de raíces unitarias (epígrafe 5) y en el segundo un criterio ad-hoc.\n\nndiffs(nacimientos)\n\n[1] 1\n\nnsdiffs(nacimientos)\n\n[1] 1\n\n\nPara nacimientos estas dos funciones sugieren la doble diferenciación regular y estacional. La doble diferenciación es muy usual."
  },
  {
    "objectID": "03-03-Tema3.html#transformación-de-box-cox",
    "href": "03-03-Tema3.html#transformación-de-box-cox",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "3.3 Transformación de Box-Cox",
    "text": "3.3 Transformación de Box-Cox\nEn el tema 2 vimos el argumento lambda, que fijado a 0 indicaba que había que transformar la serie logarítmicamente. Veamos en detalle que hay detrás de este argumento.\n\nTransformación logarítmica\nSi la serie original no es estacionaria en varianza porque los datos crecen con el nivel de la serie, es posible obtener la estacionariedad por medio de transformaciones simples.\nLa transformación logarítmica de una serie es una alternativa. La Figura 4 muestra la serie Nacimientos y su logaritmo. La variabilidad estacional con la transformación logarítmica (panel segundo) es menor que en la serie original (panel superior).\n\n\n\n\n\n\n\n\nFigura 4: Serie Nacimientos y algunas transformaciones Box-Cox\n\n\n\n\n\n\n\nBox-Cox\nLa transformación logarítmica es un caso concreto de otra más general, la transformación de Box-Cox: \\[\nz_t =\n    \\begin{cases}\n      (y_t^{\\lambda}-1)/\\lambda & \\,\\,\\,\\lambda \\neq 0 \\\\\n      \\log(y_t) & \\,\\,\\, \\lambda = 0\n    \\end{cases}\n\\]\nSe puede demostrar que \\(\\lim_{\\lambda \\rightarrow 0} \\;\\; (y_t^{\\lambda}-1)/\\lambda = log(y_t)\\).\n\n\nTransformación de Box-Cox con R\nR dispone de una serie de funciones en el paquete forecast que nos facilitan el uso de la transformación de Box-Cox:\n\nBoxCox(y, lambda) realiza la transformación Box-Cox para un valor de \\(\\lambda\\) determinado.\nInvBoxCox(z, lambda) realiza la transformación inversa\nBoxCox.lambda(y) calcula el valor de \\(\\lambda\\) más adecuado. Usa help para saber más sobre los métodos de estimación de \\(\\lambda\\).\n\nPara la serie Nacimientos el valor óptimo de \\(\\lambda\\) es:\n\nBoxCox.lambda(nacimientos) \n\n[1] -0.08823508\n\n\nEn la Figura 4, el panel inferior muestra la transformación óptima de Box-Cox para Nacimientos usado el valor \\(\\lambda= -0.09\\). Por un lado, el valor obtenido es muy cercano a cero. Por otro lado, no hay grandes diferencias (al menos visuales) entre el resultado de la transformación logarítmica y el resultado de la transformación de Box-Cox con \\(\\lambda= -0.09\\). Finalmente, ¿qué interpretación tiene \\((nacimientos_t^{-0.09}-1)/(-0.09)\\)? En general, y con independencia del resultado de la transformación óptima, se opta por la transformación logarítmica por ser más sencilla y sobre todo más interpretable.\nPor último, ten presente que si se estima y predice una serie transformada, luego hay que deshacer la transformación para obtener la predicción de la serie original.\nEl argumento lambda que hemos usado en algunas funciones de la librería forecast hace referencia al parámetro \\(\\lambda\\) de la transformación Box-Cox. Siempre lo hemos fijado a cero, indicando la transformación logarítmica."
  },
  {
    "objectID": "03-03-Tema3.html#diferencia-logaritmo-y-tasa-de-variación",
    "href": "03-03-Tema3.html#diferencia-logaritmo-y-tasa-de-variación",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "3.4 Diferencia, Logaritmo y Tasa de variación",
    "text": "3.4 Diferencia, Logaritmo y Tasa de variación\nLa transformación \\(\\nabla y_t\\) se puede interpretar como variaciones en nivel. Sin embargo, cuando una serie tiene que ser diferenciada para conseguir su estacionariedad, vale la pena probar una transformación alternativa que también es interpretable: \\(\\nabla \\log(y_t)\\).\nPara la diferencia regular se tiene que, \\[\\nabla \\log(y_t) = \\log(y_t) - \\log(y_{t-1}) = \\log\\big(\\frac{y_t}{y_{t-1}} \\big) \\approx \\frac{y_t}{y_{t-1}} - 1 = \\frac{y_t - y_{t-1}}{y_{t-1}} =TV y_t.\\]\nEs decir, la diferencia regular del logaritmo (natural) es la Tasa de Variación de la serie, que tiene una clara interpretación como variación porcentual. Por ejemplo, para una serie anual la diferencia regular del logaritmo (natural) es la Tasa de Variación Anual de la serie \\((\\nabla \\log(y_t)=TVA y_t)\\); y para una serie mensual la diferencia regular del logaritmo (natural) es la Tasa de Variación Mensual de la serie \\((\\nabla \\log(y_t)=TVM y_t)\\).\nPara la diferencia estacional se tiene que, \\[\\nabla_m \\log(y_t) \\approx \\frac{y_t - y_{t-m}}{y_{t-m}} =TV_m y_t.\\]\nEs decir, para una serie mensual la diferencia estacional del logaritmo es la Tasa de Variación Anual de la serie \\((\\nabla_{12} \\log(y_t)=TVA y_t)\\); y para una serie diaria la diferencia estacional del logaritmo es la Tasa de Variación Semanal de la serie \\((\\nabla_{7} \\log(y_t)=TVS y_t)\\).\n\n\nCuando una serie tiene que ser diferenciada tanto regular como estacionalmente para conseguir su estacionariedad también vale la pena usar la transformación logarítmica para ganar en interpretabilidad. Es decir, frente a \\(\\nabla \\nabla_m y_t\\) es preferible usar \\(\\nabla \\nabla_m \\log(y_t)\\). Así, podemos escribir\n\\[\\nabla_m \\nabla \\log(y_t) = \\nabla_m TV y_t = TV y_t - TV y_{t-m},\\] que para una serie mensual se puede interpretar como una diferencia estacional de tasas mensuales \\(TVM y_t - TVM y_{t-12}\\). Es decir, como cambia de año en año la tasa de variación mensual.\nTambién podemos escribir\n\\[\\nabla \\nabla_m \\log(y_t) = \\nabla TV_m y_t = TV_m y_t - TV_m y_{t-1},\\]\nque para una serie mensual se puede interpretar como una diferencia regular de tasas anuales \\(TVA y_t - TVA y_{t-1}\\). Es decir, Es decir, como cambia de mes en mes la tasa de variación anual.\nLa Figura 5 muestra para la serie Nacimientos la serie original (panel superior), las tasas de variación mensual y anual (paneles dos y tres, respectivamente) y la doble diferencia regular y estacional del logaritmo de nacimientos (panel inferior). Parece que la tasa de variación mensual de los nacimientos y la doble diferencia son, de todas las transformaciones probadas en este epígrafe, las series más estacionarias en media y varianza.\n\n\n\n\n\n\n\n\nFigura 5: Serie Nacimientos y diversas transformaciones\n\n\n\n\n\n\n\n\n\n\n\n\n\nLa diferenciacion y el logaritmo\n\n\n\n\nSi se tiene una serie sin estacionalidad y no estacionaria, bastará diferenciarla regularmente una o, a lo sumo, dos veces para que sea estacionaria en media, en sentido amplio y ergódica.\nSi se tiene una serie con estacionalidad y no estacionaria, lo usual es tener que diferenciarla una vez (regular o estacionalmente) o aplicar ambas diferenciaciones para que sea estacionaria en media, en sentido amplio y ergódica.\nEn ambos casos, la transformación logarítmica se puede usar para ganar en interpretabilidad o para intentar mejorar las predicciones.\nLa transformación logarítmica no es necesaria para alcanzar la estacionariedad de la serie."
  },
  {
    "objectID": "03-03-Tema3.html#función-de-autocorrelación",
    "href": "03-03-Tema3.html#función-de-autocorrelación",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "4.1 Función de autocorrelación",
    "text": "4.1 Función de autocorrelación\nYa hemos indicado que bajo ciertas hipótesis los momentos primero y segundo de la serie caracterizan perfectamente el proceso estocástico. En el contexto de series temporales, si se da la estacionariedad en media, el primer momento de la serie es constante y, por tanto, no informativo. Son los segundos momentos de la serie (covarianzas) los que caracterizan el proceso estocástico.\nRecordemos que \\(\\gamma_k=Cov(y_t,y_{t-k})\\) es la autocovarianza de orden k. Por tanto \\(\\gamma_0\\) es la varianza de la serie \\(y_t\\). Sea \\(\\rho_k\\) la autocorrelación se orden \\(k\\). Se puede verificar que: \\[\\rho_k = cor(y_t, y_{t-k}) =\\frac{\\gamma_k}{\\gamma_0}.\\]\n\n\\(\\rho_1\\) mide la información que se transmite de un periodo al siguiente periodo.\n\\(\\rho_k\\) mide la información que se transmite k periodos hacia adelante.\n\nLas autocorrelaciones caracterizan el proceso estocástico, y la función de autocorrelación o correlograma (FAC, o ACF en inglés) es el gráfico de \\(r_k\\) contra \\(k\\), donde \\(r_k\\) es la estimación de \\(\\rho_k\\) obtenida con las observaciones.\nLa Figura 6 muestra la FAC para la serie Nacimientos y algunas de sus transformaciones. Observa el uso del argumento lag, que en la función ggAcf indica el orden máximo de la autocorrelación mostrada en el gráfico. La primera columna muestra la FAC para Nacimientos y varias diferenciaciones, mientras que la segunda columna muestra la FAC para el logaritmo de los nacimientos y sus diferenciaciones. Se puede observar que:\n\nla FAC de una serie y su transformación logarítmica es muy similar.\nEn los paneles de la primera y tercera fila las autocorrelaciones decrecen muy lentamente. Este es un claro indicativo de que la serie analizada no es estacionaria ni ergódica.\nEn los paneles de la segunda fila las autocorrelaciones de orden estacional (12, 24,…) también decrecen lentamente, indicando que la serie analizada no es ergódica.\nSolo la doble diferenciación regular y estacional de la serie (original o su logaritmo) muestran un rápido descenso en los coeficiente de autocorrelación (paneles de la última fila), indicando que la serie transformada es estacionaria en media y ergódica.\n\n\nggAcf(nacimientos, lag = 48)\nggAcf(log(nacimientos), lag = 48)\nggAcf(diff(nacimientos), lag = 48)\nggAcf(diff(log(nacimientos)), lag = 48)\nggAcf(diff(nacimientos, lag = 12),lag = 48)\nggAcf(diff(log(nacimientos), lag = 12), lag = 48)\nggAcf(diff(diff(nacimientos, lag=12)), lag = 48)\nggAcf(diff(diff(log(nacimientos), lag=12)), lag = 48)\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n(b) Logaritmo de la serie\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Dif. regular de la serie\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n(d) Dif. regular del logaritmo la serie\n\n\n\n\n\n\n\n\n\n\n\n\n\n(e) Dif. estacional de la serie\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n(f) Dif. estacional del logaritmo la serie\n\n\n\n\n\n\n\n\n\n\n\n\n\n(g) Dif. regular y estacional de la serie\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n(h) Dif. regular y estacional del logaritmo la serie\n\n\n\n\n\n\n\nFigura 6: FAC para Nacimientos\n\n\n\n\nLas bandas azules de la FAC muestran el intervalo de confianza al 95% (IC95). Si \\(\\rho_k = 0\\), la distribución del estimador \\(r_k\\) se distribuye aproximadamente como una normal de media \\(-1/T\\) y varianza \\(1/T\\). Las líneas punteadas de la FAC están dibujadas en las posiciones \\(\\frac{-1}{T} \\pm \\frac{1.96}{\\sqrt{T}}\\).\n\nSi un \\(r_k\\) cae fuera del IC95 hay evidencia para rechazar la hipótesis nula de que \\(\\rho_k = 0\\) a un nivel del 5%. Recordemos que incluso si todos los \\(\\rho_k\\) son cero, cabe esperar que un 5% de sus estimaciones \\(r_k\\) caigan fuera del IC95.\nLos \\(\\rho_k\\) no son independientes. Si uno cae fuera del IC95, es más probable que los valores vecinos caigan también fuera.\n\nSi queremos ver los valores numéricos de las autocorrelaciones debemos añadir a la función ggAfc el argumento plot = FALSE. Para la serie doblemente diferenciada vemos que la autocorrelación más elevada se da para el primer retardo (\\(r_{1}=-0.338\\)). El segundo valor más alto es \\(r_{12} = - 0.311\\).\n\nggAcf(diff(diff(nacimientos, lag=12)), \n      lag = 24, \n      plot = FALSE)\n\n\nAutocorrelations of series 'diff(diff(nacimientos, lag = 12))', by lag\n\n     0      1      2      3      4      5      6      7      8      9     10 \n 1.000 -0.338 -0.038 -0.005 -0.118 -0.016  0.069 -0.056  0.058  0.102 -0.060 \n    11     12     13     14     15     16     17     18     19     20     21 \n 0.081 -0.311  0.060  0.052  0.053 -0.060  0.114 -0.040 -0.076  0.066 -0.061 \n    22     23     24 \n 0.008  0.157 -0.151"
  },
  {
    "objectID": "03-03-Tema3.html#función-de-autocorrelación-parcial",
    "href": "03-03-Tema3.html#función-de-autocorrelación-parcial",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "4.2 Función de autocorrelación parcial",
    "text": "4.2 Función de autocorrelación parcial\nLa autocorrelación parcial de orden k, \\(\\phi_k\\), mide la información que se transmite directamente \\(k\\) periodos adelante, eliminada la información que se transmite a través de los periodos intermedios.\n\n\\(\\phi_1\\) mide la información que de un periodo se trasmite directamente al siguiente periodo. Por tanto \\(\\phi_1=\\rho_1\\).\n\\(\\phi_2\\) mide la información que de un periodo se trasmite 2 periodos adelante, eliminando la información que se trasmite a través del periodo intermedio.\n\nLa función de autocorrelación parcial (FACP, o PACF en inglés) es el gráfico de \\(r_{k.1,2,k-1}\\) contra \\(k\\), donde \\(r_{k.1,2,k-1}\\) es la estimación de \\(\\phi_k\\) realizada con las observaciones.\nLa Figura 7 muestra la FACP para la serie Nacimientos y su transformación para que sean estacionarias. La FACP no permite conocer si una serie es estacionaria o ergódica.\n\nggPacf(nacimientos, lag = 36)\nggPacf(diff(diff(nacimientos, lag=12)), lag = 36)\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n\n\n\n\n\n\n(b) Serie diff. regular y estacionalmente\n\n\n\n\n\n\n\nFigura 7: FACP para Nacimientos\n\n\n\n\nTambién puedes obtener directamente los valores numéricos de la FACP:\n\nggPacf(diff(diff(nacimientos), lag = 12), lag = 24, plot = FALSE)\n\n\nPartial autocorrelations of series 'diff(diff(nacimientos), lag = 12)', by lag\n\n     1      2      3      4      5      6      7      8      9     10     11 \n-0.338 -0.172 -0.091 -0.187 -0.168 -0.049 -0.100 -0.032  0.104  0.043  0.133 \n    12     13     14     15     16     17     18     19     20     21     22 \n-0.263 -0.149 -0.069  0.018 -0.132 -0.001  0.024 -0.097  0.003  0.035  0.017 \n    23     24 \n 0.197 -0.150 \n\n\nLas funciones tsdisplay y ggtsdisplay muestran la serie temporal, su FAC y su FACP en un único gráfico (véase Figura 8).\n\nggtsdisplay(diff(diff(nacimientos), lag = 12), main = \"\")\n\n\n\n\n\n\n\nFigura 8: FAC y FACP para la Nacimientos doblemente diferenciada"
  },
  {
    "objectID": "03-03-Tema3.html#tipos-de-tendencia",
    "href": "03-03-Tema3.html#tipos-de-tendencia",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "5.1 Tipos de tendencia",
    "text": "5.1 Tipos de tendencia\nLa Figura 9 muestra tres posibles tipos de PGD (el residuo \\(\\varepsilon_t\\) es siempre ruido blanco):\n\nPGD con tendencia estocástica, por ejemplo Paseo aleatorio puro,\n\n\\[y_t = y_{t-1} + \\varepsilon_t = y_0 + \\sum_{s=1}^t \\varepsilon_s.\\]\n\nPGD con tendencia determinista, por ejemplo Modelo lineal\n\n\\[y_t = \\alpha + \\mu t + \\varepsilon_t.\\]\n\nPGD con tendencia estocástica y determinista, por ejemplo Paseo aleatorio con deriva\n\n\\[y_t = \\mu + y_{t-1} + \\varepsilon_t = y_0 + \\mu t + \\sum_{s=1}^t \\varepsilon_s.\\]\n\n\n\n\n\n\n\n\nFigura 9: Ejemplos de procesos generadores\n\n\n\n\n\nEn los tres casos la serie no es estacionaria, pero es la presencia de tendencia estocástica lo que determina que el proceso tenga una raíz unitaria. Así, el paseo aleatorio puro y el paseo aleatorio con deriva presentan una raíz unitaria, pero los tres modelos tienen tendencia y deben ser diferenciados una vez para transformarlos en procesos estacionarios.\nContrastar la tendencia estocástica no es algo trivial, y la prueba es que existen múltiples contrastes para ello: Dickey-Fuller aumentado (ADF), Phillips-Perron (PP), Elliot-Rothemberg-Stock (ERS), Schmidt-Phillips (SP), Kwiatkowski-Phillips-Schmidt-Shin (KPSS), entre otros (véase Pfaff (2008)).\nEn muchas de las pruebas la hipótesis nula es que la serie tiene raíces unitarias (tendencia estocástica), cuando lo habitual es que la hipótesis nula sea la conservadora (en este caso que la serie no tenga tendencia estocástica). En este curso veremos la prueba de Kwiatkowski-Phillips-Schmidt-Shin que usa un contraste de Multiplicadores de Lagrange para contrastar la estacionariedad de una serie en torno a una tendencia determinista, frente a la hipótesis alternativa de existencia de una raíz unitaria. Es decir, la prueba KPSS tiene como hipótesis nula que la serie no tiene tendencia estocástica y por tanto es una prueba más conservadora que la mayoría de ellas. Sin embargo, en la prueba KPSS la ausencia de raíz unitaria no es una prueba de estacionariedad, sino de estacionariedad en torno a una tendencia determinista. Por ejemplo, el Modelo lineal no tiene una raíz unitaria (no tiene tendencia estocástica) pero no es estacionario.\nTambién existen procesos con estacionalidad estocástica del tipo \\(y_t = y_{t-m} + \\varepsilon_t\\), donde m es el orden estacional. Contrastar la existencia de raíces unitarias estacionales es complicado y no lo veremos en este curso (véase Ghysels, Lee, and Noh (1994)).\nEn lo que queda de exposición asumiremos que la serie no presenta estacionalidad."
  },
  {
    "objectID": "03-03-Tema3.html#contraste-de-raíz-unitaria-kpss",
    "href": "03-03-Tema3.html#contraste-de-raíz-unitaria-kpss",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "5.2 Contraste de raíz unitaria KPSS",
    "text": "5.2 Contraste de raíz unitaria KPSS\n\nTeoría\nSea \\(y_t\\) la serie para la que queremos contrastar la existencia de raíces unitarias. Asumimos que podemos descomponer la serie en la suma de una tendencia determinista, un paseo aleatorio y una perturbación aleatoria estacionaria: \\[y_t = \\xi t + r_t + \\varepsilon_t.\\] Aquí \\(r_t\\) es el paseo aleatorio, \\[r_t = r_{t-1} + u_t,\\] donde \\(u_t\\) son i.i.d. \\((0,\\sigma_u^2)\\) y el valor inicial \\(r_0\\) se asume fijo y tiene el papel de un intercepto o constante del modelo.\nSi se cumple la hipótesis \\(H_0: \\sigma_u^2=0\\), entonces \\(u_t=0\\) y \\(r_t=r_0\\) para todo \\(t\\) y la componente estocástica desaparece, quedando solo la tendencia determinista. Como el parámetro de interés es una varianza, \\(H_1: \\sigma_u^2&gt;0\\), es decir, es un contraste de una cola por la derecha.\n\nSi \\(\\xi=0\\), entonces bajo la hipótesis nula \\(y_t = r_0 + \\varepsilon_t\\), es decir \\(y_t\\) no tiene tendencia estocástica ni determinista: es estacionaria en nivel alrededor de \\(r_0\\) (recuerda que por hipótesis \\(\\varepsilon_t\\) es estacionario).\nSi \\(\\xi \\neq 0\\), entonces bajo la hipótesis nula \\(y_t = \\xi t + r_0 + \\varepsilon_t\\), es decir \\(y_t\\) no tiene tendencia estocástica pero si determinista: es estacionaria alrededor de una tendencia determinista \\(\\xi t + r_0\\).\nEn ambos casos, si se rechaza la hipótesis nula es porque la serie tiene una raíz unitaria (tendencia estocástica) y habría que diferenciarla.\n\nNo hay que olvidar que esta prueba descansa bajo los supuestos de \\(\\varepsilon_t\\) es estacionario y \\(u_t\\) i.i.d. \\((0,\\sigma_u^2)\\).\n\n\nProcedimiento de contraste\nPaso 1: Se estima la ecuación \\(y_t = \\xi t + r_0 + \\varepsilon_t\\) para obtener los residuos estimados \\(\\widehat{\\varepsilon}_t\\).\nObserva que este vector de residuos se puede estimar fijando \\(\\xi = 0\\), es decir, regresando la serie \\(y_t\\) simplemente sobre una constante; o bajo es supuesto de que \\(\\xi \\neq 0\\), es decir, regresando la serie sobre una contante y una tendencia lineal.\nPaso 2: Se definen las sumas parciales \\(S_t = \\sum_{i=1}^t \\widehat{\\varepsilon}_i\\), con \\(t=1,2,\\ldots,T\\) y se calcula \\(\\widehat{\\sigma}^2_{\\varepsilon}\\).\nLa forma más sencilla de calcular \\(\\widehat{\\sigma}^2_{\\varepsilon}\\) es \\(\\widehat{\\sigma}^2_{\\varepsilon}= \\sum \\widehat{\\varepsilon}_t^2/T\\), pero una fórmula alternativa es \\(\\widehat{\\sigma}^2_{\\varepsilon}(l) = T^{-1}\\sum_{t = 1}^T \\widehat{\\varepsilon}_t^2 + 2T^{-1}\\sum_{s=1}^l \\Big[ \\Big( 1 - \\frac{s}{l+1} \\Big) \\sum_{t=s+1}^T \\widehat{\\varepsilon}_t \\widehat{\\varepsilon}_{t-s}  \\Big]\\), que dependen el parámetro \\(l\\).\nPaso 3: El estadístico de contraste es \\(LM = \\sum_{t=1}^T S_t^2/\\widehat{\\sigma}^2_{\\varepsilon}\\).\nPaso 4: Fijado un nivel de significatividad, el estadístico de contraste LM es comparado con el valor crítico. Si LM es mayor que el valor crítico, se rechaza la hipótesis nula, la serie tiene raíces unitarias (tendencia estocástica) y es, por tanto, no estacionaria. Si no se rechaza la hipótesis nula, entonces la serie es estacionaria en torno a un nivel (caso \\(\\xi = 0\\)) o a una tendencia determinista (caso \\(\\xi \\neq 0\\)).\nPuedes encontrar los detalles de este contraste en Kwiatkowski et al. (1992).\n\n\nContraste KPSS en R\nR proporciona dos implementaciones de esta prueba, ur.kpss en el paquete urca (que será la que usaremos) y kpss.test en el paquete tseries. En ambos casos el usuario debe decidir el valor adecuado del parámetro \\(l\\) para el cálculo de \\(\\widehat{\\sigma}^2_{\\varepsilon}(l)\\). Como los resultados pueden depender de este parámetro, es conveniente repetir el contraste para diferentes valores.\nAdemás, en forecast está disponible la función ndiffs que estima el número de diferencias necesarias para que una serie sea estacionaria. Por defecto la función ndiffs emplea el contraste KPSS, pero también están disponibles Dickey-Fuller y Phillips-Perron.\nLos principales argumentos de la función ur.kpss son:\n\ntype, puede ser type = \"mu\" para contrastar la presencia de tendencia estocástica en torno a un nivel (\\(\\xi = 0\\)); o type = \"tau\" para contrastar la presencia de tendencia estocástica en torno a una tendencia determinista (\\(\\xi \\neq 0\\)).\nlags, el valor del parámetro \\(l\\) en \\(\\widehat{\\sigma}^2_{\\varepsilon}(l)\\). Puede ser ‘’nil’’ cuando no hay corrección (\\(l=0\\)); ‘’short’’ usa el valor \\((4T/100)^{0.25}\\); y ‘’long’’ para \\((12T/100)^{0.25}\\).\nuse.lag fija un valor numérico para \\(l\\). (La función ndiffs fija este valor a \\(3\\sqrt{T/13}\\).)"
  },
  {
    "objectID": "03-03-Tema3.html#ejemplos",
    "href": "03-03-Tema3.html#ejemplos",
    "title": "Series Temporales: Procesos Estocásticos",
    "section": "5.3 Ejemplos",
    "text": "5.3 Ejemplos\n\nEjemplo con Residuos\n\nsummary(ur.kpss(residuos, \n                type = \"tau\", \n                lags = \"short\"))\n\n\n####################### \n# KPSS Unit Root Test # \n####################### \n\nTest is of type: tau with 2 lags. \n\nValue of test-statistic is: 0.1384 \n\nCritical value for a significance level of: \n                10pct  5pct 2.5pct  1pct\ncritical values 0.119 0.146  0.176 0.216\n\n\nEn el caso en que se asume tendencia determinista, y para \\(l=2\\), el estadístico de contraste vale 0.138 y el valor crítico al 5% vale 0.146. Como el estadístico de contraste es menor que el valor crítico, se acepta la hipótesis nula, la serie no tiene una raíz unitaria, es decir tiene tendencia determinista, pero no tendencia determinista. Observa que al 1% no se rechaza la hipótesis nula.\n\nsummary(ur.kpss(residuos, \n                type = \"mu\", \n                lags = \"short\"))\n\n\n####################### \n# KPSS Unit Root Test # \n####################### \n\nTest is of type: mu with 2 lags. \n\nValue of test-statistic is: 0.6834 \n\nCritical value for a significance level of: \n                10pct  5pct 2.5pct  1pct\ncritical values 0.347 0.463  0.574 0.739\n\n\nAhora, bajo el supuesto de que no hay tendencia determinista, el estadístico de contraste vale 0.683 y el valor crítico al 5% vale 0.463. Se rechaza la hipótesis nula, la serie tiene tendencia estocástica alrededor de un nivel.\nEn cualquiera de los dos casos, la serie tiene tendencia, sea determinista o estocástica, así que hay que diferenciarla.\n\n\nSi aplicamos el primer contraste (\\(\\xi \\neq 0\\)) para diferentes valores de \\(l\\) desde 1 hasta 5, los estadísticos de contraste valen:\n\n\n    1     2     3     4     5 \n0.187 0.138 0.116 0.106 0.102 \n\n\nEn todos los casos el valor crítico al 5% sigue siendo \\(0.146\\). Se observa siempre se acepta la hipótesis nula, si la serie tiene tendencia determinista, no la tiene estocástica.\nSi se repite este ejercicio fijando tau = \"mu\" (\\(\\xi = 0\\)), se rechaza la hipótesis nula sólo para \\(l \\leq 3\\). Ahora el estadístico de contraste es \\(0.463\\).\n\n\n    1     2     3     4     5 \n0.989 0.683 0.534 0.448 0.393 \n\n\nSi optamos por aceptar que la serie Residuos no es estacionaria y la diferenciamos una vez, debemos repetir el contraste para la serie diferenciada a fin de determinar si una diferencia es suficiente para alcanzar la estacionariedad. Esta vez, lo más conveniente es considerar que la tendencia determinista ya ha sido eliminada y fijar tau = \"mu\".\n\nsummary(ur.kpss(diff(residuos), \n                type = \"mu\", \n                lags = \"short\"))\n\n\n####################### \n# KPSS Unit Root Test # \n####################### \n\nTest is of type: mu with 2 lags. \n\nValue of test-statistic is: 0.2761 \n\nCritical value for a significance level of: \n                10pct  5pct 2.5pct  1pct\ncritical values 0.347 0.463  0.574 0.739\n\n\nOtra opción es usar la función ndiffs que aplica el contraste KPSS reiteradamente para identificar el número adecuado de diferenciaciones. Esta función permite fijar el nivel de significatividad, el tipo de contraste y el tipo de tendencia determinista.\n\nndiffs(residuos, alpha = 0.05, test = \"kpss\")\n\n[1] 1\n\n\nTambién existe la función nsdiffs que identifica el número de diferenciaciones estacionales adecuado. En este caso se basa de una regla de decisión empírica, sin soporte teórico.\n\n\nEjemplo con Nacimientos (anual)\n\nnacimientosAnual&lt;-aggregate(nacimientos, \n                            FUN = sum)\n\nsummary(ur.kpss(nacimientosAnual, \n                type = \"tau\", \n                lags = \"short\"))\n\n\n####################### \n# KPSS Unit Root Test # \n####################### \n\nTest is of type: tau with 3 lags. \n\nValue of test-statistic is: 0.1998 \n\nCritical value for a significance level of: \n                10pct  5pct 2.5pct  1pct\ncritical values 0.119 0.146  0.176 0.216\n\n\nEl estadístico de contraste vale 0.1998 y el valor crítico al 5% vale 0.146. Como el estadístico de contraste es mayor que el valor crítico, se rechaza la hipótesis nula, la serie tiene tendencia estocástica alrededor de una tendencia determinista, no es estacionaria.\nDe nuevo, aplicando el contraste para diferentes valores de \\(l\\) se tiene que para todos los valores de \\(l\\) se rechaza la hipótesis nula.\n\n\n    1     2     3     4     5 \n0.371 0.256 0.200 0.167 0.147 \n\n\nSi aplicamos ndiffs obtenemos que hay que diferenciar la serie dos veces para que sea estacionaria.\n\nndiffs(nacimientosAnual, \n       alpha = 0.05, \n       test = \"kpss\")\n\n[1] 2\n\n\n\n\nPruebas alternativas para contraste de raíces unitarias\n\n\n\nPrueba\nFunción\nPackage\n\n\n\n\nKPSS\nur.kpss\nurca\n\n\nKPSS\nkpss.test\ntseries\n\n\nADF\nur.df\nurca\n\n\nADF\nadf.test\ntseries\n\n\nADF\nadftest\nfUnitRoots\n\n\nADF\nADF.test\nuroot\n\n\nPP\nur.pp\nurca\n\n\nPP\npp.test\ntseries\n\n\nERS\nur.ers\nurca\n\n\nSP\nur.sp\nurca"
  },
  {
    "objectID": "03-10-Ejemplo5.html",
    "href": "03-10-Ejemplo5.html",
    "title": "Defunciones por Enfermedades Cerebrovasculares",
    "section": "",
    "text": "1 Introducción\nConsideremos la serie temporal correspondiente al número de defunciones causadas por enfermedades cerebrovasculares, Esta serie está disponible en el Instituto Nacional de Estadística desde enero de 1980 hasta diciembre de 2023, un total de 44 años o 528 meses.\nEn la descriptiva vimos que la descomposición revelaba la presencia de varios valores atípicos concentrados al inicio de la serie. Por este motivo, para su análisis por modelos Arima vamos a recortar la serie, que empezará el enero de 1990 (véase Figura 1).\nTambién hemos visto que para alcanzar la estacionariedad y verificar la hipótesis de ergodicidad es necesario diferenciar la serie tanto en la parte regular como estacional y decidimos usar la transformación logarítmica para linealizar la serie y ganar en interpretabilidad.\n\nDefEnfCer &lt;- read.csv2(\"./series/Enfermedades cerebrovasculares.csv\", \n                       header = TRUE)\n\nDefEnfCer &lt;- ts(DefEnfCer[,2], \n                start = 1980, \n                freq = 12)\n\nDefEnfCer &lt;- window(DefEnfCer, \n                    start = 1990)\n\nautoplot(DefEnfCer,\n         xlab = \"\",\n         ylab = \"\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 1: Defunciones causadas por enfermedades cerebrovasculares\n\n\n\n\n\n\n\n\n\n\n2 Identificación\nVamos a identificar los valores de \\(p\\), \\(q\\), \\(P\\) y \\(Q\\). Para ello, analizaremos la FAC y la FACP, y solicitaremos con auto.arima y seas una identificación automática.\n\nggtsdisplay(diff(diff(log(DefEnfCer), lag = 12)), lag = 48)\n\n\n\n\n\n\n\nFigura 2: Defunciones anuales por enfermedades cerebrovasculares, FAC y FACP de la serie transformada\n\n\n\n\n\nEn la parte regular, la FAC muestra que la primera autocorrelación está por encima del IC95 y en la FACP se observa decrecimiento. En la parte estacional, la FAC muestra una autocorrelación significativa en el orden 12 y la FACP muestra decrecimiento. Así, podemos identificar el proceso como \\(log(DefEnfCer_t) \\sim ARIMA_{12}(0,1,1)(0,1,1)\\).\nVeamos ahora auto.arima, al que incluiremos variables ficticias para los cuatro valores atípicos ya identificados cuando aplicamos Alisado exponencial: febrero de 1999, junio de 2003, enero de 2005, y febrero de 2012.\n\nd0299 &lt;- 1*(cycle(DefEnfCer) == 2 & trunc(time(DefEnfCer)) == 1999)\nd0603 &lt;- 1*(cycle(DefEnfCer) == 6 & trunc(time(DefEnfCer)) == 2003)\nd0105 &lt;- 1*(cycle(DefEnfCer) == 1 & trunc(time(DefEnfCer)) == 2005)\nd0212 &lt;- 1*(cycle(DefEnfCer) == 2 & trunc(time(DefEnfCer)) == 2012)\n\nauto.arima(DefEnfCer, \n           d = 1, \n           D = 1,\n           lambda = 0,\n           xreg = cbind(d0299, d0603, d0105, d0212))\n\nSeries: DefEnfCer \nRegression with ARIMA(2,1,2)(1,1,2)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ar1     ar2      ma1      ma2     sar1     sma1     sma2   d0299\n      -0.5928  0.1726  -0.0758  -0.8288  -0.1477  -0.8370  -0.0051  0.1869\ns.e.   0.0975  0.0676   0.0813   0.0802   0.2612   0.2615   0.2322  0.0416\n       d0603   d0105   d0212\n      0.1701  0.1213  0.2241\ns.e.  0.0425  0.0414  0.0415\n\nsigma^2 = 0.002116:  log likelihood = 650.9\nAIC=-1277.81   AICc=-1276.99   BIC=-1230.06\n\n\nLa función auto.arima identifica un complejo proceso \\(ARIMA_{12}(2,1,2)(1,1,2)\\). Por otro lado, la función seas identifica un proceso \\(ARIMA_{12}(1,0,1)(0,1,1)\\). El resultado muestra la conveniencia de la transformación logarítmica y una intervenciones en febrero de 2012.\n\nsummary(seas(DefEnfCer))\n\n\nCall:\nseas(x = DefEnfCer)\n\nCoefficients:\n                   Estimate Std. Error z value Pr(&gt;|z|)    \nConstant          -0.018517   0.000669 -27.680  &lt; 2e-16 ***\nAO2012.Feb         0.212421   0.044011   4.827 1.39e-06 ***\nAR-Nonseasonal-01  0.597751   0.101751   5.875 4.24e-09 ***\nMA-Nonseasonal-01  0.287974   0.120484   2.390   0.0168 *  \nMA-Seasonal-12     0.880698   0.024858  35.428  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSEATS adj.  ARIMA: (1 0 1)(0 1 1)  Obs.: 408  Transform: log\nAICc:  4993, BIC:  5017  QS (no seasonality in final):    0  \nBox-Ljung (no autocorr.): 17.12   Shapiro (normality): 0.9829 ***\n\n\nVamos a descartar ambas identificaciones y considerar el modelo de las aerolíneas. El AICc para este modelo es solo algo superior al de los modelos sugeridos por auto.arima o seas. Es decir, \\(\\log(DefEnfCer) \\sim ARIMA_{12}(0, 1, 1)(0, 1, 1) + AI\\) donde \\(AI\\) recoge las cuatro variables ficticias que afectan un único mes.\n\n\n\n\n\n3 Estimación\nLa siguiente salida muestra el modelo estimado y la Figura 3 permite analizar la presencia de más valores extremos.\n\nDefEnfCerArima1 &lt;- Arima(DefEnfCer, \n                         order = c(0, 1, 1),  \n                         seasonal = c(0, 1, 1),\n                         lambda = 0,\n                         cbind(d0299, d0603, d0105, d0212))\nDefEnfCerArima1\n\nSeries: DefEnfCer \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1   d0299   d0603   d0105   d0212\n      -0.8900  -0.8855  0.2069  0.1578  0.1583  0.2500\ns.e.   0.0522   0.0290  0.0450  0.0457  0.0448  0.0447\n\nsigma^2 = 0.002274:  log likelihood = 634.55\nAIC=-1255.1   AICc=-1254.81   BIC=-1227.25\n\n\n\nerror &lt;- residuals(DefEnfCerArima1)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(1990, 2024, 2))\n\nfechas &lt;- format(seq(as.Date(\"1990-01-01\"), as.Date(\"2023-12-01\"), \"month\"), \"%Y-%m\")\nfechas[abs(error) &gt; 3 * sderror]\n\n[1] \"2001-05\" \"2003-08\" \"2015-02\"\n\natipicos &lt;- tsoutliers(error)\nfechas[atipicos$index]\n\ncharacter(0)\n\n\n\n\n\n\n\n\nFigura 3: Error + Intervención\n\n\n\n\n\nSe observan tres valores claramente atípicos en mayo de 2001, agosto de 2003 y febrero de 2015. Además, hay otros candidatos a valor extremo, entre los que destacan febrero de 2005, enero de 2015 y julio de 2022. Procederemos a incluirlos en el modelo.\n\nd0501 &lt;- 1*(cycle(DefEnfCer) == 5 & trunc(time(DefEnfCer)) == 2001)\nd0803 &lt;- 1*(cycle(DefEnfCer) == 8 & trunc(time(DefEnfCer)) == 2003)\nd0205 &lt;- 1*(cycle(DefEnfCer) == 2 & trunc(time(DefEnfCer)) == 2005)\nd0115 &lt;- 1*(cycle(DefEnfCer) == 1 & trunc(time(DefEnfCer)) == 2015)\nd0215 &lt;- 1*(cycle(DefEnfCer) == 2 & trunc(time(DefEnfCer)) == 2015)\nd0722 &lt;- 1*(cycle(DefEnfCer) == 7 & trunc(time(DefEnfCer)) == 2022)\n\n\nDefEnfCerArima2 &lt;- Arima(DefEnfCer, \n                         order = c(0, 1, 1),  \n                         seasonal = c(0, 1, 1),\n                         lambda = 0,\n                         xreg = cbind(d0299, d0501, d0603, \n                                      d0803, d0105, d0205, \n                                      d0212, d0115, d0215, d0722))\nDefEnfCerArima2\n\nSeries: DefEnfCer \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1   d0299   d0501   d0603   d0803   d0105   d0205   d0212\n      -0.9086  -0.8603  0.2131  0.1107  0.1673  0.1799  0.1700  0.1487  0.2627\ns.e.   0.0331   0.0284  0.0409  0.0407  0.0410  0.0411  0.0407  0.0408  0.0408\n       d0115   d0215   d0722\n      0.1323  0.1801  0.1510\ns.e.  0.0409  0.0409  0.0418\n\nsigma^2 = 0.001927:  log likelihood = 671.3\nAIC=-1316.59   AICc=-1315.64   BIC=-1264.87\n\n\nAparentemente las variables de intervención incluidas son significativas.\nEl análisis gráfico del residuo indica que aún hay candidatos a valores atípicos (véase Figura 4). Sin embargo, vamos a dar por concluido este proceso.\n\nerror &lt;- residuals(DefEnfCerArima2)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(1990, 2024, 2)) \n\nfechas[abs(error) &gt; 3 * sderror]\n\n[1] \"1991-12\"\n\n\n\n\n\n\n\n\nFigura 4: Error + Intervención\n\n\n\n\n\nCuatro de los valores atípicos corresponden al mes de febrero y sus coeficientes estimados toman valores parecidos. También hay dos meses de enero atípicos con similar efecto. Vamos a asumir que la causa que hay detrás del valor anómalo en los meses de febrero es la misma, posiblemente un invierno más frío de lo usual. Lo mismo asumiremos para los valores atípicos en enero. Esto nos permite agrupar variables de intervención y simplificar el modelo.\n\nd01aa &lt;- d0105 + d0115\nd02aa &lt;- d0299 + d0205 + d0212 + d0215\n\nDefEnfCerArima3 &lt;- Arima(DefEnfCer, \n                         order = c(0, 1, 1),  \n                         seasonal = c(0, 1, 1),\n                         lambda = 0,\n                         xreg = cbind(d01aa, d02aa, \n                                      d0501, d0603, d0803, d0722))\nDefEnfCerArima3\n\nSeries: DefEnfCer \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1   d01aa   d02aa   d0501   d0603   d0803   d0722\n      -0.9102  -0.8613  0.1528  0.2011  0.1106  0.1677  0.1803  0.1511\ns.e.   0.0337   0.0283  0.0293  0.0214  0.0410  0.0414  0.0414  0.0421\n\nsigma^2 = 0.00193:  log likelihood = 668.84\nAIC=-1319.67   AICc=-1319.2   BIC=-1283.86\n\n\nPor último, vemos que todos los coeficientes del modelo son significativos.\n\ncoeftest(DefEnfCerArima3)\n\n\nz test of coefficients:\n\n       Estimate Std. Error  z value  Pr(&gt;|z|)    \nma1   -0.910152   0.033749 -26.9681 &lt; 2.2e-16 ***\nsma1  -0.861271   0.028323 -30.4086 &lt; 2.2e-16 ***\nd01aa  0.152841   0.029345   5.2084 1.904e-07 ***\nd02aa  0.201070   0.021361   9.4127 &lt; 2.2e-16 ***\nd0501  0.110607   0.041000   2.6977 0.0069811 ** \nd0603  0.167738   0.041355   4.0561 4.991e-05 ***\nd0803  0.180340   0.041361   4.3601 1.300e-05 ***\nd0722  0.151102   0.042118   3.5876 0.0003338 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\n4 Validación\n\nCalidad de ajuste\nAnalizando los criterios de bondad de ajuste se tiene que el error medio (ME), igual a -7.13, defunciones es prácticamente cero por lo que no parece que haya sesgo en las predicciones; en media nos equivocamos en 127 defunciones (RMSE); y el error porcentual medio es 3.3%, bajo. Sin embargo, los intervalos de las predicciones no están correctamente calculados.\n\naccuracy(DefEnfCerArima3)\n\n\n\n                ME   RMSE   MAE   MPE MAPE MASE ACF1\nTraining set -7.13 126.54 92.61 -0.32 3.31 0.58 0.13\n\n\n\n\n\n\nIncorrelación, Homocedasticidad y Normalidad\nVeamos ahora si el residuo es ruido blanco.\n\nerror &lt;- residuals(DefEnfCerArima3)\nBox.test(error, lag = 2,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 8.6032, df = 2, p-value = 0.01355\n\nBox.test(error, lag = 24,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 20.816, df = 24, p-value = 0.6496\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 1.5849, df = 2, p-value = 0.4527\n\nBox.test(error^2, lag = 24, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 29.082, df = 24, p-value = 0.2171\n\njarque.bera.test(error) \n\n\n    Jarque Bera Test\n\ndata:  error\nX-squared = 0.6299, df = 2, p-value = 0.7298\n\n\nEl error muestra ser incorrelado (al 1%), homocedástico y seguir una distribución normal.\n\n\n\n\n\n\n5 Ecuación del modelo identificado\nEl modelo estimado es el de las aerolíneas con intervención: \\[(1-L)(1-L^{12})log(DefEnfCer_t) =(1+\\theta_1 L)(1 + \\theta_{12}L^{12})\\varepsilon_t +AI.\\] Como la interpretación de la parte estructural del modelo es ya conocida, vamos a centrar la interpretación en la intervención:\n\nEn los dos meses de enero atípicos, posiblemente por ser más frios, la defunciones fueron 15.3% mayores que las observadas en otros meses de enero.\nDe la misma forma, en los tres meses de febrero atípicos, la defunciones fueron un 20.1% mayores que las observadas en otros meses de febrero.\nEn mayo de 2001 hubo un aumento en las defunciones del 11.1% respecto de lo esperado; en junio de 2003 del 16.8%; en agosto de 2003 del 18.0%; y en julio de 2022 del 15.1%.\n\n\n\n\n\n\n6 Predicción de las defunciones por enfermedad cerebrovascular\nUna vez dado por válido el modelo, podemos pasar a realizar predicciones para los próximos años (véase Figura 5). Como la variables de intervención no son efectos calendario, sus valores previstos serán cero. En concreto, estamos asumiendo que la temperatura en los eneros y febreros de los próximos años no será inusualmente baja.\n\npDefEnfCerArima3 &lt;- forecast(DefEnfCerArima3, \n                             h = 60,\n                             xreg = cbind(rep(0, 60), rep(0, 60), rep(0 ,60), \n                                          rep(0 ,60), rep(0, 60), rep(0, 60)), \n                             level = 95)\n\nautoplot(pDefEnfCerArima3, \n         xlab = \"\",\n         ylab = \"Defunciones\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1990, 2028, 4)) \n\n\n\n\n\n\n\nFigura 5: Defunciones (1990-2023) y predicción (2023-2028)\n\n\n\n\n\nA partir de 2026 se espera que el número de defunciones por enfermedad cerebrovascular caiga por debajo de los 22000 casos.\n\naggregate(pDefEnfCerArima3$mean, FUN = sum)\n\nTime Series:\nStart = 2024 \nEnd = 2028 \nFrequency = 1 \n[1] 22848.18 22360.50 21883.22 21416.13 20959.01\n\n\n\n\n\n\n\n7 Comparación con Alisado Exponencial\nEl método de Alisado exponencial, aplicado sobre el logaritmo de las defunciones identifica un proceso (A,A,A) con \\(\\alpha=0.301\\) y \\(\\beta = \\gamma = 0\\). La raíz del error cuadrático medio (RMSE) es de 150 defunciones y el error porcentual (MAPE) del 3.8%. Estos valores son superiores a los obtenidos con el modelo Arima (127 defunciones y 3.3%, respectivamente).\n\nsummary(ets(DefEnfCer, lambda = 0))\n\nETS(A,A,A) \n\nCall:\nets(y = DefEnfCer, lambda = 0)\n\n  Box-Cox transformation: lambda= 0 \n\n  Smoothing parameters:\n    alpha = 0.3099 \n    beta  = 1e-04 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 8.1992 \n    b = -0.0013 \n    s = 0.128 -0.0059 -0.0405 -0.1581 -0.0847 -0.0515\n           -0.0996 -0.0346 -0.0216 0.0907 0.0756 0.2022\n\n  sigma:  0.0512\n\n      AIC      AICc       BIC \n 44.66073  46.22996 112.85227 \n\nTraining set error measures:\n                   ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set 1.145279 150.3302 108.6739 -0.2250519 3.815447 0.6770746\n                   ACF1\nTraining set 0.09013257\n\n\nVamos a determinar si la aplicación de modelos Arima mejora la calidad de las predicciones lo suficiente como para justificar su uso –frente a los métodos de Alisado, mucho más sencillos. Para ello, aplicaremos la metodología de origen de predicción móvil para estimar la capacidad predictiva del modelo Arima y compararla con el modelo de Alisado.\n\nk &lt;- 120                   \nh &lt;- 12                    \nT &lt;- length(DefEnfCer)     \ns &lt;- T - k - h               \n\nmapeArima &lt;- matrix(NA, s + 1, h)\nmapeAlisado &lt;- matrix(NA, s + 1, h)\n\nfor (i in 0:s) {\n  train.set &lt;- subset(DefEnfCer, start = i + 1, end = i + k)\n  test.set &lt;-  subset(DefEnfCer, start = i + k + 1, end = i + k + h) \n  \n  fit &lt;- Arima(train.set, \n               order = c(0, 1, 1),\n               seasonal = c(0, 1, 1), \n               lambda = 0)\n  \n  fcast &lt;- forecast(fit, h = h)\n  mapeArima[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n  \n  fit &lt;- ets(train.set, lambda = 0, model = \"AAA\", damped = FALSE)\n  \n  fcast&lt;-forecast(fit, h = h)\n  mapeAlisado[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n}\n\nCalculamos los errores medianos para eliminar el impacto de los meses atípicos sobre la precisión en las predicciones.\n\nerrorArima &lt;- apply(mapeArima, MARGIN = 2, FUN = median)\nerrorArima\n\n [1] 2.934029 3.234929 3.437823 3.520236 3.501047 3.732833 3.872356 3.798441\n [9] 3.619692 3.210470 3.274263 3.292135\n\nerrorAlisado &lt;- apply(mapeAlisado, MARGIN = 2, FUN = median)\nerrorAlisado\n\n [1] 3.188317 3.326366 3.475992 3.623668 3.673432 3.922262 4.152185 3.960744\n [9] 3.930313 3.243128 3.343446 3.497692\n\n\n\ndatos &lt;- data.frame(\n  factor = c(rep(\"Arima\", 12), rep(\"Alisado\", 12)),\n  x = c(1:12,1:12),\n  y = c(errorArima, errorAlisado)\n)\n\nggplot(datos, aes(x = x, y = y,  colour= factor)) + \n  geom_line() +\n  ggtitle(\"\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"%\") +\n  scale_x_continuous(breaks= 1:12) +\n  labs(colour = \"Métodos\") + \n  theme(legend.position=c(0.1,0.8)) \n\n\n\n\n\n\n\nFigura 6: Error de predicción (MAPE) según horizonte temporal\n\n\n\n\n\nLa Figura 6 revela que Arima siempre es algo superior a Alisado en calidad de predicciones, pero con un error inferior en promedio de 0.16 puntos porcentuales. Por tanto, la mejora en la precisión no parece justificar la complejidad de los modelos Arima frente a la sencillez de los modelos de Alidado.\nLa ventaja de Arima reside en su capacidad para estimar el efecto de inviernos más crudos sobre las defunciones por enfermedad cerebrovascular y mejorar las predicciones en estos meses."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#análisis-de-la-tendencia",
    "href": "03-11-Ejemplo-Pasajeros.html#análisis-de-la-tendencia",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "2.1 Análisis de la tendencia",
    "text": "2.1 Análisis de la tendencia\nSi anualizamos la serie podemos, por un lado, identificar mejor en que años se producen los cambios en la tendencia y, por otro lado, poner cifras al volumen de pasajeros en transporte urbano.\n\nPasajerosAnual &lt;- aggregate(Pasajeros, FUN = sum)\n\nautoplot(PasajerosAnual, colour = \"darkblue\",\n         xlab = \"\",\n         ylab = \"Millones de pasajeros\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\n\n\n\n\n\n\nFigura 2: Pasajeros en transporte urbano (datos anuales)\n\n\n\n\n\nLa Figura 2 muestra el volumen anual de pasajeros en transporte urbano. El crecimiento continuado, posiblemente iniciado antes de 1996 y que permitió superar los 3000 millones de pasajeros en 2007, se ve interrumpido con el inicio de la Gran Recesión. La caída en el número de pasajeros se interrumpe en 2014, año que marca la salida de esta crisis en España y el inicio de la recuperación en el serie. En 2019 se superaron los 3100 millones de pasajeros.\nEl incremento en el uso del transporte urbano observado antes y después de la crisis puede tener distintas causas: un uso más intensivo del transporte urbano en detrimento de otros medios de transporte, una reorganización de los servicios de transporte urbano que haya mejorado la conectividad dentro de los municipios, o un aumento en el número de líneas de autobús, tranvía o metro en determinadas ciudades.\nLa causa del repunte aislado observado el año 2011, en plena crisis, fue una ligera recuperación de la economía que tuvo lugar a finales de 2010 y principios de 2011."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#análisis-de-la-estacionalidad",
    "href": "03-11-Ejemplo-Pasajeros.html#análisis-de-la-estacionalidad",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "2.2 Análisis de la estacionalidad",
    "text": "2.2 Análisis de la estacionalidad\nLa principal causa de la estacionalidad observada en la serie es la estructura vacacional de la sociedad, especialmente caracterizada por las vacaciones de verano (julio a septiembre) y las vacaciones de Semana Santa (en marzo y/o abril, según el año). Además, debido a que el transporte urbano se usa principalmente para ir a trabajar o al centro de educación, también influye el número de días laborables del mes. Por ejemplo, en 2017 el mes de junio tuvo 22 días laborables, mientras que en 2019 tuvo 20 días laborables. Esta diferencia de dos días tendrá un efecto sobre el volumen de pasajeros.\nEl número de días laborables de un mes viene marcado por los fines de semana del mes y por las festividades nacionales. Es cierto que el sábado se trabaja en diversos sectores (comercio, ocio, distribución) pero la caída en el número de trabajadores respecto de los días entre semana (lunes a viernes) es muy notable. También es cierto que, además de las festividades nacionales, hay muchas festividades autonómicas o municipales que podrían afectar al volumen de pasajeros en transporte urbano. Por ejemplo, las festividades regionales en comunidades como Madrid o Cataluña pueden tener un efecto significativo sobre la serie Pasajeros. Sin embargo, las festividades no nacionales no se van a tener en cuenta.\nPor tanto, para realizar un análisis detallado de la estacionalidad, es necesario crear una serie con el número de días laborables de cada mes. Además, esta serie se usará más adelante para modelizar y predecir la serie Pasajeros.\n\nDías laborables de cada mes\nLa librería timeData proporciona una serie de funciones que permiten definir un calendario de festividades, identificar los fines de semana y, a partir de aquí, crear la serie de días laborables (véase código más abajo).\n\nCon timeCalendar se definen las festividades nacionales que vamos a considerar: Año nuevo (1 de enero), Reyes (6 de enero), Viernes Santo (fecha variable), Día del Trabajo (1 de mayo), Día de la Asunción (15 de agosto), Día de la Hispanidad (12 de octubre), Día de Todos los Santos (1 de noviembre), la Constitución (6 de diciembre) la Inmaculada Concepción (8 de diciembre) y Navidad (25 de diciembre).\nPor claridad, cada festivo se ha definido de forma independiente para después crear una variable con todas las festividades (FestivosNacionales).\nEl rango para todos los cálculos va desde 1996 hasta 2024, que incluye el rango de la serie Pasajeros más cinco años de predicción.\nLa función utilizada Easter de la librería timeDate difiere de la función easter de forecast.\n\n\nAnoNuevo &lt;- timeCalendar(d = 1, m = 1, y = 1996:2024)\nReyes &lt;- timeCalendar(d = 6, m = 1, y = 1996:2024)\nViernesSanto &lt;- Easter(1996:2024, shift = -2)\nDiaTrabajo &lt;- timeCalendar(d = 1, m = 5, y = 1996:2024)\nAsuncion &lt;- timeCalendar(d = 15, m = 8, y = 1996:2024)\nHispanidad &lt;- timeCalendar(d = 12, m = 10, y = 1996:2024)\nTodoSantos &lt;- timeCalendar(d = 1, m = 11, y = 1996:2024)\nConstitucion &lt;- timeCalendar(d = 6, m = 12, y = 1996:2024)\nInmaculada &lt;- timeCalendar(d = 8, m = 12, y = 1996:2024)\nNavidad &lt;- timeCalendar(d = 25, m = 12, y = 1996:2024)\n\nFestivosNacionales &lt;- c(AnoNuevo, Reyes, ViernesSanto,\n                        DiaTrabajo, Asuncion,  Hispanidad, TodoSantos, \n                        Constitucion, Inmaculada, Navidad)\n\n\nA continuación, con timeSequence se crea una serie diaria desde el 1 de enero de 1996 hasta el 31 de diciembre de 2024.\n\n\nfechaDiaria &lt;- timeSequence(from = \"1996-01-01\", to = \"2024-12-31\")\n\n\nLas siguientes líneas eliminan de la serie diaria los festivos y los fines de semana, (función isBizday), para después dar a esta nueva serie el formato año-mes eliminando el día. De esta forma, la serie de días laborales tendrá el mismo identificador para todos los días del mismo mes.\n\n\nbiz &lt;- fechaDiaria[isBizday(fechaDiaria, holidays = FestivosNacionales)]\nbizdays &lt;- format(biz, format = \"%Y-%m\")\n\n\nAhora se crea una tabla que, por la naturaleza de la serie de días laborales, tendrá para cada año-mes el numero de días laborables. Por último fechamos la tabla, que es nuestra serie de días laborables y mostramos algunos datos.\n\n\nDiasLaborables &lt;- table(bizdays)\n\n\nLas últimas líneas de código dividen la serie en el periodo muestral y el de predicción.\n\n\nDiasLaborables &lt;- ts(DiasLaborables, start = 1996, frequency = 12)\n\nsubset(DiasLaborables, start = 289) #Mostramos solo los 5 últimos años\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2020  21  20  22  21  20  22  23  21  22  21  21  21\n2021  19  20  23  21  21  22  22  22  22  20  21  21\n2022  20  20  23  20  22  22  21  22  22  20  21  20\n2023  21  20  23  19  22  22  21  22  21  21  21  18\n2024  22  21  20  22  22  20  23  21  21  23  20  20\n\npDiasLaborables &lt;- subset(DiasLaborables, start = length(DiasLaborables) - 59)\nDiasLaborables &lt;- subset(DiasLaborables, end = length(DiasLaborables) - 60)\n\nEs conveniente indicar que la identificación de las festividades nacionales dista de ser perfecta por varios motivos:\n\nalgunos festivos nacionales si caen en domingo, se pasan a lunes (por ejemplo Reyes y la Inmaculada de 2019), aspecto que no se ha tenido en cuenta.\nalgunos festivos nacionales pueden ser sustituidos por otros días por las Comunidades Autónomas, por ejemplo Reyes o Jueves Santo.\n\n\n\n\n\nAnálisis gráfico de la estacionalidad\nVeamos ahora una descriptiva detallada de la estacionalidad de la serie Pasajeros, haciendo especial hincapié en el efecto de las vacaciones (verano y Semana Santa) y el número de días laborables. Para ello, mostraremos gráficamente las subseries definidas por el mes tanto para Pasajeros como para Pasajeros por día laborable, esta segunda resultado de dividir Pasajeros por DiasLaborables.\n\nPasajerosDL &lt;- Pasajeros/DiasLaborables\n\nggsubseriesplot(Pasajeros) +\n  ylab(\"Millones de pasajeros\") +\n  xlab(\"\") +\n  ggtitle(\"\")\n\nggsubseriesplot(PasajerosDL) +\n  ylab(\"Millones de pasajeros\") +\n  xlab(\"\") +\n  ggtitle(\"\")\n\n\n\n\n\n\n\n\n\n\n\n(a) Pasajeros\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Pasajeros por día laborable\n\n\n\n\n\n\n\nFigura 3: Estacionalidad de la serie Pasajeros\n\n\n\n\nLa Figura 3 muestra para cada mes la serie de pasajeros (total o por día laborable) y el valor medio (línea azul horizontal). En ambos paneles se identifica perfectamente el efecto de los periodos vacacionales sobre el transporte urbano de pasajeros. En las vacaciones de verano se observa una fuerte caída en el número de pasajeros, especialmente en agosto y, en menor medida, en julio y septiembre. Por otro lado, las subseries de marzo y abril muestran mucha más irregularidad que las de otros meses debido a que el volumen de pasajeros depende de cómo haya caído la Semana Santa. Cada año el mes en que caiga la Semana Santa presentará un volumen de pasajeros inferior al esperado. Diciembre, para ser un mes de 31 días, presenta también un reducido número de pasajeros debido a las vacaciones navideñas.\nLa Figura 3 a) muestra el efecto estacional total debido al número de días del mes y de días laborales. Por ejemplo, en febrero, el mes con menos días y por tanto con menos días laborales, en media se transportan menos pasajeros, comparado con enero o marzo. Octubre, un mes con 31 días, muestra un volumen medio de pasajeros mayor que noviembre de 30 días.\nEn la Figura 3 b) se ha eliminado el efecto de los días laborables al trabajar con la serie de pasajeros transportados por día laborable. Si la comparamos con la Figura 3 a), destaca que las diferencias entre las medias (lineas azules) se han reducido: prácticamente no hay diferencias entre los meses de enero a junio, o entre los meses de octubre a diciembre.\nCabría pensar que al excluir de la serie de días laborables la Semana Santa, en la Figura 3 b) las subseries de marzo y abril serían tan suaves como las observadas para otro meses, pero no es así. Claramente la simple exclusión de los festivos nacionales de Semana Santa no es suficiente para recoger bien su efecto sobre el transporte urbano. La razón hay que buscarla en las vacaciones escolares de este periodo, que en algunas comunidades autónomas tiene lugar durante la propia semana de Semana Santa, mientras que en otras comunidades tiene lugar en la semana posterior. De esta forma, el efecto sobre el transporte urbano de Semana Santa no es homogéneo en el territorio nacional y resulta difícil incluirlo en el análisis de la serie Pasajeros.\n\n\n\n\nDescomposición y estimación de la estacionalidad\nPodemos obtener la componente estacional para poder valorarla numéricamente y ver que efecto tiene el número de días laborables. Previamente, debemos determinar el esquema, aditivo o multiplicativo, de la serie.\nLa gráfica media-varianza (Figura 4) refuerza la impresión que se obtenía de la gráfica de la serie (Figura 1), que el esquema es aditivo.\n\nMediaAnual &lt;- aggregate(Pasajeros, FUN = sum)\nDesviacionAnual &lt;- aggregate(Pasajeros, FUN = sd)\n\nggplot() +\n  geom_point(aes(x = MediaAnual, y = DesviacionAnual), size = 2) +\n  xlab(\"Total pasajeros por año\") + \n  ylab(\"Desviación típica intraanual de pasajeros\") + \n  ggtitle(\"\")\n\n\n\n\n\n\n\nFigura 4: Identificación del tipo de esquema\n\n\n\n\n\nAhora vamos a proceder a descomponer tanto la serie original como la serie de pasajeros por día laboral. Dado que la serie presenta un esquema aditivo, usaremos el método de descomposición por regresiones locales ponderadas, asumiendo una componente estacional constante y considerando la presencia de posibles valores extremos.\nLa Tabla 1 pone en cifras el efecto estacional sobre los Pasajeros (primera columna): en agosto la caída en el número de pasajeros, respecto de la media anual, se cifra en 72 millones de pasajeros. En julio, septiembre y en menor medida abril también el uso del transporte urbano es inferior a la media anual, en el caso de los dos primeros meses por las vacaciones de verano y en abril debido a ser el mes en que con más frecuencia cae la Semana Santa. Por otro lado, destaca el elevado número de pasajeros en los meses de marzo, mayo y octubre, por tener 31 días.\n\nPasajerosStl &lt;- stl(Pasajeros, \n                    s.window = \"periodic\", \n                    robust = TRUE)\n\nPasajerosDLStl &lt;- stl(PasajerosDL, \n                    s.window = \"periodic\", \n                    robust = TRUE)\n\ndatos &lt;- cbind(seasonal(PasajerosStl)[1:12], seasonal(PasajerosDLStl)[1:12])\ncolnames(datos) &lt;- c(\"Pasajeros\", \"Pasajeros por día laborable\")\nrownames(datos) &lt;- meses\n\nkable(datos, \n      digits = 2)\n\n\n\nTabla 1: Efecto estacional\n\n\n\n\n\n\n\nPasajeros\nPasajeros por día laborable\n\n\n\n\nEne\n4.70\n0.41\n\n\nFeb\n0.34\n0.53\n\n\nMar\n24.02\n0.53\n\n\nAbr\n-2.17\n0.39\n\n\nMay\n19.67\n0.69\n\n\nJun\n6.45\n0.18\n\n\nJul\n-15.30\n-1.21\n\n\nAgo\n-71.82\n-3.52\n\n\nSep\n-8.31\n-0.53\n\n\nOct\n26.79\n1.02\n\n\nNov\n14.70\n0.94\n\n\nDic\n0.93\n0.55\n\n\n\n\n\n\n\n\nTras la corrección por el número de días laborales, el efecto estacional es más suave (véase la segunda columna en la Tabla 1). Ahora, los meses de febrero y marzo tienen un efecto similar, al igual que octubre y noviembre. También se observa que las diferencias entre marzo y abril se han reducido.\n\n\nAnálisis de la intervención\nYa hemos realizado una descripción detallada de las principales componentes de la serie, tendencia y estacionalidad. Ahora vamos a analizar, aunque sea de forma gráfica, el error y tener ya una primera impresión sobre la relevancia de la componente de intervención en Pasajeros.\n\nerror &lt;- remainder(PasajerosStl)\nsderror &lt;- sd(error)\n\nautoplot(error,\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\",\n         colour = \"darkblue\") +\n  geom_hline(yintercept = c(3, 2, -2, -3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"),\n             lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\nfechasMes &lt;- format(seq(from = as.Date(\"1996-01-01\"), \n                        to = as.Date(\"2019-12-01\"), \n                        \"month\"), \n                    \"%Y-%m\")\nfechasMes[abs(error) &gt; 3 * sderror]\n\n[1] \"1997-03\" \"1997-04\" \"2002-03\" \"2002-04\" \"2005-04\" \"2008-03\" \"2008-04\"\n[8] \"2013-03\" \"2013-04\"\n\n\n\n\n\n\n\n\nFigura 5: Error + Intervención. Descomposición de Pasajeros\n\n\n\n\n\nLa Figura 5 muestra el error de la descomposición y los intervalos de confianza al 95% (líneas verdes) y el 99.7% (líneas rojas). Se aprecian claramente múltiples valores extremos (superan las tres desviaciones típicas) en forma de compensación (dos errores extremos consecutivos de signo opuesto) que corresponden a los meses de marzo y abril de 1997, 2002, 2008 y 2013, y otro valor extremo en abril de 2005. Además, en marzo y abril de 2016 hay dos valores atípicos. Todos los valores identificados corresponden a los meses de marzo y abril, y en todos los casos el error negativo tiene lugar en marzo y el positivo en abril. Si miramos un calendario, veremos que tienen lugar en los años en que la Semana Santa cayó en marzo.\nLa prueba de Tukey solo identifica como meses atípicos los marzo de 2002 y 2008.\n\natipicos &lt;- tsoutliers(error)\nfechasMes[atipicos$index]\n\n[1] \"2002-03\" \"2008-03\"\n\n\nSi repetimos este análisis para la serie de Pasajeros por día laborable, los resultados son bien diferentes (véase Figura 6). Ahora solo se detectan dos valores extremos en diciembre de 2000 y 2006. También destaca el error de diciembre de 2017. Los errores en diciembre se dan cuando Navidad cae en lunes, de forma que la caída en el transporte urbano debida a la nochebuena coincide con la de cualquier domingo. Así, estos meses de diciembre presentan más transporte urbano que los meses de diciembre donde la nochebuena cae entre semana.\n\nerror &lt;- remainder(PasajerosDLStl)\nsderror &lt;- sd(error)\n\nautoplot(error,\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\",\n         colour = \"darkblue\") +\n  geom_hline(yintercept = c(3, 2, -2, -3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"),\n             lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\nfechasMes[abs(error) &gt; 3 * sderror]\n\n[1] \"2000-12\" \"2006-12\"\n\n\n\n\n\n\n\n\nFigura 6: Error + Intervención. Descomposición de Pasajeros por día laborable"
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#conclusión",
    "href": "03-11-Ejemplo-Pasajeros.html#conclusión",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "2.3 Conclusión",
    "text": "2.3 Conclusión\nLa serie de pasajeros en transporte urbano muestra una tendencia creciente solo interrumpida entre 2008 y 2014 debido a la Gran Recesión.\nLos principales determinantes de la estacionalidad de la serie Pasajeros son los grandes periodos vacacionales en España (Semana Santa y verano) y el número de días laborales del mes. Así, en la serie Pasajeros corregida por días laborables la componente estacional se ha suavizado y prácticamente queda determinada por las vacaciones.\nLa intervención tiene lugar en los meses de marzo y abril debido al carácter móvil de la Semana Santa, y en diciembre cuando el día de Navidad cae en lunes, de forma que la caída de pasajeros de nochebuena se solapa con la de cualquier domingo."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#análisis-de-la-serie-pasajeros",
    "href": "03-11-Ejemplo-Pasajeros.html#análisis-de-la-serie-pasajeros",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "4.1 Análisis de la serie Pasajeros",
    "text": "4.1 Análisis de la serie Pasajeros\n\n\n\nEstimación e interpretación\nEl modelo óptimo, estimado con la función ets sin imponer ninguna restricción, es ETS(M,Ad,A): pendiente aditiva con amortiguamiento, estacionalidad aditiva y residuo multiplicativo. \\[y_{t+1} = (l_t + \\phi b_t + s_{t+1-m}) \\cdot (1 + \\varepsilon_{t+1}).\\]\n\nPasajerosEts &lt;- ets(Pasajeros)\nsummary(PasajerosEts) \n\nETS(M,Ad,A) \n\nCall:\nets(y = Pasajeros)\n\n  Smoothing parameters:\n    alpha = 0.1374 \n    beta  = 0.017 \n    gamma = 1e-04 \n    phi   = 0.9438 \n\n  Initial states:\n    l = 203.1964 \n    b = -0.4508 \n    s = 2.0753 14.0423 27.0229 -8.7953 -72.369 -15.0625\n           6.6935 19.5129 4.2863 18.0168 0.373 4.2039\n\n  sigma:  0.0333\n\n     AIC     AICc      BIC \n2823.866 2826.408 2889.799 \n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE     MAPE      MASE\nTraining set 0.5929553 7.492818 5.654414 0.1765693 2.447442 0.6844865\n                   ACF1\nTraining set -0.1434247\n\n\nEl valor de \\(\\phi=\\) 0.94 indica que la inclusión de amortiguamiento en el modelo mejora sensiblemente su ajuste a los datos. Por otro lado, \\(\\gamma\\) es técnicamente cero, indicando que el efecto estacional se mantiene constante en el tiempo. Sin embargo, el valor de \\(\\beta\\), reducido pero no nulo, indica que la pendiente cambia en el tiempo de forma muy lenta.\nLa calidad del ajuste es bastante buena, con un error porcentual del 2.4% o un error de 7.5 millones de pasajeros (RMSE). La aplicación del método de Alisado supone una reducción de un punto en el error porcentual respecto del método ingenuo, o una reducción del RMSE de 3.5 millones de pasajeros. Es decir, el modelo de Alisado exponencial supone una mejora en la calidad del ajuste del 32% respecto del método ingenuo con estacionalidad visto en el epígrafe previo (MASE). El indicador ACF1 revela que las fórmulas usadas para el intervalo de confianza no son válidas.\nEl efecto estacional, que recordemos se mantiene constante en el tiempo, es prácticamente idéntico al estimado en la descriptiva y viene determinado por los periodos vacacionales y el número de días laborables. Véase la Figura 8.\nEn verano (julio a septiembre) el uso del transporte urbano es inferior a la media anual, destacando agosto con un descenso de 72 millones de pasajeros. Por el contrario, octubre destaca por ser el mes con mayor incremento en el volumen de pasajeros (27 millones) respecto de la media anual.\n\nPasajerosEtsEst &lt;- PasajerosEts$states[nrow(PasajerosEts$states), 14:3]\nnames(PasajerosEtsEst) &lt;- meses\n\nround(PasajerosEtsEst, 2)\n\n   Ene    Feb    Mar    Abr    May    Jun    Jul    Ago    Sep    Oct    Nov \n  4.21   0.37  18.02   4.29  19.51   6.69 -15.06 -72.37  -8.79  27.02  14.04 \n   Dic \n  2.07 \n\nggplot() +\n  geom_line(aes(x = 1:12, y = PasajerosEtsEst), colour = \"darkblue\") + \n  geom_hline(yintercept = 0, colour = \"black\", lty = 2) +\n  ggtitle(\"\") +\n  xlab(\"\") +\n  ylab(\"Efecto estacional\") +\n  scale_x_continuous(breaks= 1:12, \n                     labels = meses)\n\n\n\n\n\n\n\nFigura 8: Componente estacional estimada con Alisado exponencial\n\n\n\n\n\n\n\n\n\nPredicción\nPodemos ahora pedir los valores de predicción para los próximos cinco años. No mostramos los resultados numéricos, pero si gráficos (Figura 9). Las predicciones muestran una tendencia creciente amortiguada y, por tanto, no tan acusada como la observada en los años precedentes.\n\nPasajerosEtsPre &lt;- forecast(PasajerosEts, \n                            h = 60)\n\nautoplot(PasajerosEtsPre,\n         xlab = \"\",\n         ylab = \"Millones de pasajeros\",\n         main = \"\") \n\n\n\n\n\n\n\nFigura 9: Pasajeros (1996-2019) y predicción (2020-2024). Método de Alisado exponencial\n\n\n\n\n\nEn el año 2020 se esperan 3153 millones de pasajeros, un 1.6% más que en 2019.2\n\n\n\n\nAnálisis del error\nEl residuo del modelo (Figura 10) muestra varios valores que pueden ser considerados como atípicos y que se dan siempre en los meses de marzo y abril para los años donde la Semana Santa recayó en marzo.\n\nerror &lt;- residuals(PasajerosEts)\nsderror &lt;- sd(error)\n\nautoplot(error,\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\",\n         colour = \"darkblue\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\nfechasMes[abs(error) &gt; 3 * sderror]\n\n[1] \"2008-03\"\n\n\n\n\n\n\n\n\nFigura 10: Error + Intervención. Método de Alisado exponencial"
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#otras-alternativas-de-análisis",
    "href": "03-11-Ejemplo-Pasajeros.html#otras-alternativas-de-análisis",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "4.2 Otras alternativas de análisis",
    "text": "4.2 Otras alternativas de análisis\nEn la descriptiva se ha visto que la serie de pasajeros por día laborable tiene un comportamiento más suave (la componente estacional era más plana) y presentaba un menor número de valores atípicos que la serie original Pasajeros. Cabe esperar, por tanto, que esta serie presente un mejor ajuste con el método de Alisado exponencial y ofrezca mejores predicciones.\nPor otro lado, siempre vale la pena analizar la transformación logarítmica de la serie y ver si ofrece mejores resultados que la serie original. La transformación logarítmica es especialmente eficaz para series no lineales, así que para Pasajeros posiblemente no suponga ningún mejora.\nLas transformaciones indicadas en los dos párrafos precedentes son solo dos de las posibles. También se pude analizar la serie de pasajeros por día del mes o la transformación óptima de Box-Cox. La idea es no quedarse con lo inmediato –la serie tal cual nos la han ofrecido–, sino probar otras alternativas. Por ejemplo, la serie de Pasajeros es el agregado del número de pasajeros que viajan en transporte urbano según el tipo de transporte (autobús, metro, tranvía…). Se podría proceder a analizar cada serie por separado (pasajeros en autobús, pasajeros en metro, etc.), para luego agregar los resultados y ver si este enfoque da mejores resultados que el análisis directo de la serie agregada Pasajeros.\nEn este epígrafe se analizarán tres de las transformaciones indicadas: la transformación logarítmica, los pasajeros por día laborable y los pasajeros por día del mes. El objetivo es ver si es posible mejorar la calidad de las predicciones obtenidas para Pasajeros. Se usará como criterio de bondad el error de las predicciones extramuestrales según el horizonte temporal, obtenido con el procedimiento origen de predicción móvil. Asumiremos que son necesarios 12 años para obtener una buena estimación del modelo y el horizonte temporal se fijará en 12 meses (\\(k = 144, h = 12\\)). Previamente, hay que crear la serie Pasajeros por día del mes, e identificar el mejor modelo para las series transformadas. Además, para evitar el efecto de meses atípicos sobre el cálculo de la precisión de las previsiones, usaremos como medida de calidad la mediana del error porcentual absoluto.\n\nPasajerosDM &lt;- Pasajeros/monthdays(Pasajeros)\n\nets(Pasajeros, lambda = 0)$method\n\n[1] \"ETS(A,Ad,A)\"\n\nets(PasajerosDL)$method\n\n[1] \"ETS(M,Ad,A)\"\n\nets(PasajerosDM)$method\n\n[1] \"ETS(A,Ad,A)\"\n\n\n\n\n\nk &lt;- 144                 \nh &lt;- 12                  \nTT &lt;- length(Pasajeros)  \ns &lt;- TT - k - h          \n\nmapeAlisadoPas &lt;- matrix(NA, s + 1, h)\nmapeAlisadoLogPas &lt;- matrix(NA, s + 1, h)\nmapeAlisadoPasDL &lt;- matrix(NA, s + 1, h)\nmapeAlisadoPasDM &lt;- matrix(NA, s + 1, h)\n\nfor (i in 0:s) {\n  train.set &lt;- subset(Pasajeros, start = i + 1, end = i + k)\n  test.set &lt;-  subset(Pasajeros, start = i + k + 1, end = i + k + h)\n  \n  trainDL.set &lt;- subset(PasajerosDL, start = i + 1, end = i + k)\n  testDL.set &lt;-  subset(PasajerosDL, start = i + k + 1, end = i + k + h)\n  \n  trainDM.set &lt;- subset(PasajerosDM, start = i + 1, end = i + k)\n  testDM.set &lt;-  subset(PasajerosDM, start = i + k + 1, end = i + k + h)\n  \n  fit &lt;- ets(train.set, model = \"MAA\", damped = TRUE)\n  fcast &lt;- forecast(fit, h = h)\n  mapeAlisadoPas[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n  \n  fit &lt;- ets(train.set, model = \"AAA\", damped = TRUE, lambda = 0)\n  fcast &lt;- forecast(fit, h = h)\n  mapeAlisadoLogPas[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n  \n  fit &lt;- ets(trainDL.set, model = \"MAA\", damped = TRUE)\n  fcast &lt;- forecast(fit, h = h)\n  mapeAlisadoPasDL[i + 1,] &lt;- 100*abs(testDL.set - fcast$mean)/testDL.set\n  \n  fit &lt;- ets(trainDM.set, model = \"AAA\", damped = TRUE)\n  fcast &lt;- forecast(fit, h = h)\n  mapeAlisadoPasDM[i + 1,] &lt;- 100*abs(testDM.set - fcast$mean)/testDM.set\n}\n\nerrorAlisadoPas &lt;- apply(mapeAlisadoPas, MARGIN = 2, FUN = median)\nerrorAlisadoLogPas &lt;- apply(mapeAlisadoLogPas, MARGIN = 2, FUN = median)\nerrorAlisadoPasDL &lt;- apply(mapeAlisadoPasDL, MARGIN = 2, FUN = median)\nerrorAlisadoPasDM &lt;- apply(mapeAlisadoPasDM, MARGIN = 2, FUN = median)\n\ndatos &lt;- data.frame(\n  factor = c(rep(\"Pasajeros\", 12), \n             rep(\"Pasajeros por día laborable\", 12), \n             rep(\"Pasajeros por día del mes\", 12), \n             rep(\"Pasajeros (log)\", 12)),\n  x = c(1:12, 1:12, 1:12, 1:12),\n  y = c(errorAlisadoPas, errorAlisadoPasDL, errorAlisadoPasDM, errorAlisadoLogPas)\n)\n\n\nggplot(datos, aes(x = x, y = y,  colour= factor)) + \n  geom_line() +\n  ggtitle(\"\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"%\") +\n  scale_x_continuous(breaks= 1:12) +\n  scale_y_continuous(breaks= seq(2, 4, .2)) +\n  labs(colour = \"Métodos\") + \n  theme(legend.position=c(0.15, 0.7))\n\n\n\n\n\n\n\nFigura 11: Error de predicción (MedAPE) según horizonte temporal y enfoque. Método de Alisado exponencial\n\n\n\n\n\nAntes de pasar al análisis de los resultados, indicar que en las predicciones sobre el logaritmo no se ha pedido corrección por sesgo, y que al trabajar con errores porcentuales no es necesario pasar la predicción de pasajeros por día (laborable o del mes) a predicción de pasajeros.\nLa Figura 11 muestra los errores de predicción según el horizonte temporal para las cuatro aproximaciones. En todos los casos el error aumenta con el horizonte temporal de predicción, de forma que las predicciones a doce meses vista tienen un error un punto porcentual superior a las predicciones a un mes vista.\nPor otro lado, para horizontes temporales de hasta 9 meses vista las predicciones realizadas sobre el logaritmo de la serie original Pasajeros son de las más precisas, seguidas de las predicciones realizadas con Pasajeros por día del mes. Para predicciones de 10 a 12 meses, en general las mejores predicciones se obtienen con Pasajeros. En contra de lo esperado, las predicciones a partir de la serie de pasajeros por día laborable son de las que mayor error porcentual presentan."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#conclusión-1",
    "href": "03-11-Ejemplo-Pasajeros.html#conclusión-1",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "4.3 Conclusión",
    "text": "4.3 Conclusión\nLos modelos de Alisado exponencial resultan excelentes para predecir la serie Pasajeros. El error de ajuste, del 2.4%, es un punto inferior al error obtenido con el método ingenuo con estacionalidad. Además, en las predicciones extramuestrales a 12 meses vista el error porcentual sigue manteniéndose bajo, no superando el 4%.\nLa transformación logarítmica de la serie pasajeros y la serie Pasajeros por día del mes han dado mejores predicciones por Alisado exponencial que el análisis directo de la serie."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#transformación-de-la-serie-pasajeros",
    "href": "03-11-Ejemplo-Pasajeros.html#transformación-de-la-serie-pasajeros",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.1 Transformación de la serie Pasajeros",
    "text": "5.1 Transformación de la serie Pasajeros\nPor un lado, el análisis por Alisado exponencial ha puesto de relieve el carácter lineal de Pasajeros y la efectividad que podría tener usar la transformación logarítmica para mejorar la calidad de las predicciones.\nPor otro lado, tras un análisis preliminar por modelos Arima se puede ver que la transformación logarítmica mejora la identificación del modelo y facilitaba su interpretación.\nAsí, optamos por aplicar la transformación logarítmica a Pasajeros.\nLas FAC del logaritmo de la serie y algunas de sus diferenciaciones (Figura 12) indican que es necesaria la doble diferenciación regular y estacional para alcanzar las hipótesis de estacionariedad y ergodicidad: \\(\\log(Pasajeros) \\sim I(1)I_{12}(1)\\). Los resultados ofrecidos por las funciones ndiffs y nsdiffs apoyan esta conclusión.\n\nggAcf(log(Pasajeros), lag = 48, ylim = c(-1, 1), \n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(log(Pasajeros)), lag = 48, ylim = c(-1, 1), \n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(log(Pasajeros), lag = 12), lag = 48, ylim = c(-1, 1), \n      xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(diff(log(Pasajeros), lag=12)), lag = 48, ylim = c(-1, 1), \n      xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n\n\n\n(a) Log serie\n\n\n\n\n\n\n\n\n\n\n\n(b) Dif. regular log serie\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Dif. estacional log serie\n\n\n\n\n\n\n\n\n\n\n\n(d) Dif. regular y estacional log serie\n\n\n\n\n\n\n\nFigura 12: FAC para Pasajeros\n\n\n\n\n\nndiffs(log(Pasajeros))\n\n[1] 1\n\nnsdiffs(log(Pasajeros))\n\n[1] 1\n\n\nLa Figura 13 muestra la serie original \\(y_t\\) y la serie transformada \\(\\nabla \\nabla_{12} \\log(y_t)\\). En la serie transformada destacan las compensaciones asociadas a la intervención de Semana Santa.\n\nseries &lt;- cbind(\"Original\" = Pasajeros,\n                \"Dif reg. y est. de log\" = diff(diff(log(Pasajeros), lag = 12)))\n\nautoplot(series, facets = TRUE,\n         xlab = \"\",\n         ylab = \"\",\n         main = \"\")\n\n\n\n\n\n\n\nFigura 13: Serie original de Pasajeros y su transformación"
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#identificación-de-la-serie-pasajeros",
    "href": "03-11-Ejemplo-Pasajeros.html#identificación-de-la-serie-pasajeros",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.2 Identificación de la serie Pasajeros",
    "text": "5.2 Identificación de la serie Pasajeros\nVamos a identificar los valores de \\(p\\), \\(q\\), \\(P\\) y \\(Q\\) del proceso Arima. Para ello, solicitaremos con auto.arima y seas una identificación automática, en el primer caso incluyendo todos los efectos calendario ya identificados.\n\n\n\nIdentificación automática con auto.arima\nPara ayudar a la función auto.arima en el proceso de identificación vamos a definir previamente todas las variables de intervención que en el desarrollo del análisis de la serie hemos ido identificando: días del mes, días laborables del mes, meses de diciembre con el día de Navidad en lunes y Semana Santa:\n\nLa variable Días laborables del mes ya ha sido definida previamente como DiasLaborables.\nLa variable Días del mes se puede definir directamente con la función monthdays de la librería forecast. En lugar de días del mes, consideraremos la variable días no laborables del mes, resultante de restar a los días del mes los días laborables.\nLos meses de diciembre en que el día de Navidad cae en lunes requiere un poco más de trabajo. La idea general es generar un rango de fechas diarias que cubra todo el periodo de análisis (variable fechas), identificar los lunes de Navidad (variable dicotómica lunesNavidad), eliminar el identificador del día del rango de fechas con la función format y, por último, con tapply sumar para cada mes-año los lunes de Navidad, que lógicamente solo tendrán lugar algunos meses de diciembre y una sola vez. En los objetos definidos con la función as.POSIXlt los meses van de 0 a 11 (enero a diciembre) y los días de la semana de 0 a 6 (domingo a sábado).\nLa creación de las variables de intervención que estiman el efecto de la Semana Santa es aún más complejo. El efecto del viernes de Semana Santa ya queda recogido en la variable DiasNoLaborables. Lo que vamos a hacer ahora es crear una variable que permita estimar el efecto de las vacaciones escolares (y de muchos padres y madres) de lunes a Jueves Santo en aquellas comunidades donde así es; y otra variable para estimar el efecto de las vacaciones escolares que tienen lugar la semana posterior al Domingo de Resurrección, de lunes a viernes tras Semana Santa. Estas nuevas variables (DiasPreSanta y DiasPascua) para marzo y abril valdrán la proporción de días vacacionales que recaen en el correspondiente mes, y valdrán cero para los demás meses del año.\n\nDías no laborables\nGeneramos la variables para DiasNoLaborables y se muestra su valor para los últimos 5 años.\n\nDiasNoLaborables &lt;- monthdays(DiasLaborables) - DiasLaborables\npDiasNoLaborables &lt;- monthdays(pDiasLaborables) - pDiasLaborables\ntail(DiasNoLaborables, n = 60)\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2015  11   8   9   9  11   8   8  10   8  10   9  10\n2016  12   8   9   9   9   8  10   9   8  11   9  11\n2017  10   8   8  11   9   8  10   9   9  10   9  13\n2018   9   8  10   9   9   9   9   9  10   9   9  12\n2019   9   8  10   9   9  10   8  10   9   8  10  11\n\n\nNavidad cae en lunes\nGeneramos la variable que identifica los mes de diciembre en los que la Navidad cayó en lunes.\n\nfechas &lt;- as.POSIXlt(seq(from = as.Date(\"1996-1-1\"), \n                         to = as.Date(\"2024-12-31\"), \n                         by = \"day\"))\nLunesNavidad &lt;- 1*(fechas$wday == 1 & fechas$mon == 11 & fechas$mday == 25)\nfechas &lt;- format(fechas, format = \"%Y-%m\")\nLunesNavidad &lt;- tapply(LunesNavidad, fechas, sum)\nLunesNavidad &lt;- ts(LunesNavidad, start = 1996, frequency = 12)\npLunesNavidad &lt;- subset(LunesNavidad, start = length(LunesNavidad) - 59)\nLunesNavidad &lt;- subset(LunesNavidad, end = length(LunesNavidad) - 60)\n\nLunesNavidad[LunesNavidad == 1]\n\n2000-12 2006-12 2017-12 \n      1       1       1 \n\n\nSemana Santa\nSe generan las variables DiasPreSanta y DiasPascua y se muestra su valor para los últimos 5 años.\n\nLunSanto &lt;- Easter(1996:2024, shift = -6)\nMarSanto &lt;- Easter(1996:2024, shift = -5)\nMieSanto &lt;- Easter(1996:2024, shift = -4)\nJueSanto &lt;- Easter(1996:2024, shift = -3)\n\nPreSanta &lt;- c(LunSanto, MarSanto, MieSanto, JueSanto)\nbiz &lt;- fechaDiaria[isBizday(fechaDiaria, holidays = PreSanta, wday = 0:6)]\nbizdays &lt;- format(biz, format = \"%Y-%m\")\n\nDiasPreSanta &lt;- table(bizdays)\nDiasPreSanta &lt;- ts(DiasPreSanta, start = 1996, frequency = 12)\nDiasPreSanta &lt;- (monthdays(DiasPreSanta) - DiasPreSanta)/4\n\npDiasPreSanta &lt;- subset(DiasPreSanta, start = length(DiasPreSanta) - 59)\nDiasPreSanta &lt;- subset(DiasPreSanta, end = length(DiasPreSanta) - 60)\n\nLunPascua &lt;- Easter(1996:2024, shift = 1)\nMarPascua &lt;- Easter(1996:2024, shift = 2)\nMiePascua &lt;- Easter(1996:2024, shift = 3)\nJuePascua &lt;- Easter(1996:2024, shift = 4)\nViePascua &lt;- Easter(1996:2024, shift = 5)\n\nPascua &lt;- c(LunPascua, MarPascua, MiePascua, JuePascua, ViePascua)\nbiz &lt;- fechaDiaria[isBizday(fechaDiaria, holidays = Pascua, wday = 0:6)]\nbizdays &lt;- format(biz, format = \"%Y-%m\")\n\nDiasPascua &lt;- table(bizdays)\nDiasPascua &lt;- ts(DiasPascua, start = 1996, frequency = 12)\nDiasPascua &lt;- (monthdays(DiasPascua) - DiasPascua)/5\n\npDiasPascua &lt;- subset(DiasPascua, start = length(DiasPascua) - 59)\nDiasPascua &lt;- subset(DiasPascua, end = length(DiasPascua) - 60)\n\ntail(DiasPreSanta, n = 60)\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2015 0.0 0.0 0.5 0.5 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2016 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2017 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2018 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2019 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n\ntail(DiasPascua, n = 60)\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2015 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2016 0.0 0.0 0.8 0.2 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2017 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2018 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2019 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n\n\nAhora tenemos todos los elementos para pedir la identificación automática con auto.arima.\n\nauto.arima(Pasajeros, \n           lambda = 0,\n           d = 1, \n           D = 1,\n           xreg = cbind(DiasLaborables, DiasNoLaborables, \n                        LunesNavidad, DiasPreSanta, DiasPascua))\n\nSeries: Pasajeros \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasLaborables  DiasNoLaborables  LunesNavidad\n      -0.5775  -0.4194          0.0352            0.0159         0.028\ns.e.   0.0496   0.0531          0.0057            0.0057         0.008\n      DiasPreSanta  DiasPascua\n           -0.0577     -0.0248\ns.e.        0.0042      0.0070\n\nsigma^2 = 0.0003214:  log likelihood = 718.25\nAIC=-1420.51   AICc=-1419.97   BIC=-1391.58\n\n\nLa identificación automática muestra el proceso de las aerolíneas. Además, parece que todas las variables de intervención son significativas.\n\n\n\n\nIdentificación automática con seas\nLa función seas de seasonal incluye automáticamente durante la identificación las variables de intervención necesarias.\n\nsummary(seas(Pasajeros, transform.function = \"log\"))\n\n\nCall:\nseas(x = Pasajeros, transform.function = \"log\")\n\nCoefficients:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \nWeekday            0.0053245  0.0002834  18.787  &lt; 2e-16 ***\nEaster[1]         -0.0863100  0.0034777 -24.818  &lt; 2e-16 ***\nAR-Nonseasonal-01 -0.9566747  0.2791436  -3.427  0.00061 ***\nAR-Nonseasonal-02 -0.5939742  0.1383640  -4.293 1.76e-05 ***\nAR-Nonseasonal-03 -0.2879049  0.0881848  -3.265  0.00110 ** \nMA-Nonseasonal-01 -0.4666487  0.2885044  -1.617  0.10578    \nMA-Seasonal-12     0.3907450  0.0555134   7.039 1.94e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSEATS adj.  ARIMA: (3 1 1)(0 1 1)  Obs.: 288  Transform: log\nAICc:  1635, BIC:  1663  QS (no seasonality in final):    0  \nBox-Ljung (no autocorr.): 52.54 *** Shapiro (normality): 0.9846 **\n\n\nEn este caso el proceso identificado en la parte regular es más complejo que el obtenido con auto.arima, ARIMA(3,1,1)(0,1,1). Además, se han incluido variables de intervención asociadas a la Semana Santa y días laborables. Conjuntamente estas variables de intervención recogen los mismos efectos considerados por nosotros.\nConcluimos que el modelo de partida para Pasajeros será \\(\\log(Pasajeros) \\sim ARIMA_{12}(0, 1, 1)(0, 1, 1) + AI\\)."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#estimación-del-modelo-e-identificación-de-otras-componentes-de-intervención",
    "href": "03-11-Ejemplo-Pasajeros.html#estimación-del-modelo-e-identificación-de-otras-componentes-de-intervención",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.3 Estimación del modelo e identificación de otras componentes de intervención",
    "text": "5.3 Estimación del modelo e identificación de otras componentes de intervención\nVamos a estimar el modelo identificado y a analizar la presencia de otros valores atípicos en el residuo.\n\nPasajerosAri &lt;- Arima(Pasajeros, \n                      lambda = 0,\n                      order = c(0, 1, 1),  \n                      seasonal = c(0, 1, 1),\n                      xreg = cbind(DiasLaborables, DiasNoLaborables, \n                                   LunesNavidad, DiasPreSanta, DiasPascua))\nPasajerosAri\n\nSeries: Pasajeros \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasLaborables  DiasNoLaborables  LunesNavidad\n      -0.5775  -0.4194          0.0352            0.0159         0.028\ns.e.   0.0496   0.0531          0.0057            0.0057         0.008\n      DiasPreSanta  DiasPascua\n           -0.0577     -0.0248\ns.e.        0.0042      0.0070\n\nsigma^2 = 0.0003214:  log likelihood = 718.25\nAIC=-1420.51   AICc=-1419.97   BIC=-1391.58\n\n\n\nerror &lt;- residuals(PasajerosAri)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 0, 2, 3)*sderror, \n             colour = c(\"red\", \"blue\", \"black\", \"blue\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\nfechasMes[abs(error) &gt; 3 * sderror]\n\n[1] \"2005-08\"\n\n\n\n\n\n\n\n\nFigura 14: Error + Intervención. Modelo Arima\n\n\n\n\n\nEn la Figura 14 identificamos claramente agosto de 2005 como atípico, con un error que supera las cinco desviaciones típicas.\nTras incluir la correspondiente variable artificial en el modelo y estimarlo, identificamos otros valores extremos, por superar las 3 desviaciones típicas, en agosto de 2006, abril de 2002 y marzo de 2010. Procedemos a incluir las variables artificiales en el modelo y repetir el análisis. En esta ocasión ya no identificamos más valores atípicos (véase Figura 15).\n\nd0402 &lt;- 1*(trunc(time(Pasajeros)) == 2002 & cycle(Pasajeros) == 4)\nd0805 &lt;- 1*(trunc(time(Pasajeros)) == 2005 & cycle(Pasajeros) == 8)\nd0806 &lt;- 1*(trunc(time(Pasajeros)) == 2006 & cycle(Pasajeros) == 8)\nd0310 &lt;- 1*(trunc(time(Pasajeros)) == 2010 & cycle(Pasajeros) == 3)\n\nPasajerosAri &lt;- Arima(Pasajeros,\n                      lambda = 0,\n                      order = c(0, 1, 1),  \n                      seasonal =  c(0, 1, 1),\n                      xreg = cbind(DiasLaborables, DiasNoLaborables, \n                                   LunesNavidad, DiasPreSanta, DiasPascua,\n                                   d0402, d0805, d0806, d0310))\nPasajerosAri\n\nSeries: Pasajeros \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasLaborables  DiasNoLaborables  LunesNavidad\n      -0.5276  -0.3752          0.0343            0.0158        0.0259\ns.e.   0.0539   0.0591          0.0051            0.0052        0.0072\n      DiasPreSanta  DiasPascua   d0402   d0805   d0806   d0310\n           -0.0579     -0.0253  0.0333  0.0644  0.0284  0.0377\ns.e.        0.0042      0.0067  0.0130  0.0126  0.0126  0.0126\n\nsigma^2 = 0.0002842:  log likelihood = 737.61\nAIC=-1451.23   AICc=-1450.03   BIC=-1407.82\n\n\n\nerror &lt;- residuals(PasajerosAri)\nsderror &lt;- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 0, 2, 3)*sderror, \n             colour = c(\"red\", \"blue\", \"black\", \"blue\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\nfechasMes[abs(error) &gt; 2.8 * sderror]\n\ncharacter(0)\n\n\n\n\n\n\n\n\nFigura 15: Error + Intervención. Modelo Arima\n\n\n\n\n\nAntes de finalizar el proceso de identificación vamos a confirmar la significatividad de todos los parámetros estimados.\n\ncoeftest(PasajerosAri)\n\n\nz test of coefficients:\n\n                   Estimate Std. Error  z value  Pr(&gt;|z|)    \nma1              -0.5275620  0.0538773  -9.7919 &lt; 2.2e-16 ***\nsma1             -0.3751743  0.0591070  -6.3474 2.190e-10 ***\nDiasLaborables    0.0342656  0.0051246   6.6865 2.285e-11 ***\nDiasNoLaborables  0.0157855  0.0051814   3.0466 0.0023146 ** \nLunesNavidad      0.0258983  0.0072072   3.5934 0.0003264 ***\nDiasPreSanta     -0.0579159  0.0041802 -13.8548 &lt; 2.2e-16 ***\nDiasPascua       -0.0252714  0.0066643  -3.7921 0.0001494 ***\nd0402             0.0332966  0.0130224   2.5569 0.0105619 *  \nd0805             0.0644211  0.0126345   5.0988 3.418e-07 ***\nd0806             0.0283617  0.0126198   2.2474 0.0246149 *  \nd0310             0.0377276  0.0126289   2.9874 0.0028135 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#validación-del-modelo",
    "href": "03-11-Ejemplo-Pasajeros.html#validación-del-modelo",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.4 Validación del modelo",
    "text": "5.4 Validación del modelo\nEn el proceso de validación verificaremos si se cumplen las hipótesis básicas sobre el vector de residuos y analizaremos la calidad de ajuste y predicción del modelo estimado.\n\n\n\nIncorrelación, Homocedasticidad y Normalidad\nVeamos si el residuo es ruido blanco.\n\nBox.test(error, lag = 2,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 0.020802, df = 2, p-value = 0.9897\n\nBox.test(error, lag = 24,type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error\nX-squared = 25.067, df = 24, p-value = 0.4021\n\nBox.test(error^2, lag = 2, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 3.5249, df = 2, p-value = 0.1716\n\nBox.test(error^2, lag = 24, type = \"Ljung-Box\")\n\n\n    Box-Ljung test\n\ndata:  error^2\nX-squared = 25.854, df = 24, p-value = 0.3606\n\njarque.bera.test(error) \n\n\n    Jarque Bera Test\n\ndata:  error\nX-squared = 0.40002, df = 2, p-value = 0.8187\n\n\nEl error muestra ser incorrelado, homocedástico y seguir una distribución normal.\n\n\n\n\nCalidad del ajuste\nAnalizando los criterios de bondad de ajuste (sobre el error de predicción intramuestral a un periodo vista) se tiene un error medio (ME) de -0.05 millones de pasajeros, prácticamente cero por lo que no parece que haya sesgo en las predicciones; en media nos equivocamos 3.7 millones de pasajeros (RMSE) y el error porcentual medio (MAPE) es 1.3%, muy bajo. Para ambos indicadores de bondad de ajuste el error obtenido es la mitad que el visto con Alisado exponencial. Al contrario que para Alisado, el ajuste con modelos Arima generará predicciones por intervalo válidas.\n\n\n                ME RMSE  MAE  MPE MAPE MASE ACF1\nTraining set -0.05 3.72 2.92 0.01 1.26 0.35 0.02\n\n\n\n\n\n\nCalidad de las predicciones\nSe completará el proceso de validación estimado el error de predicción extramuestral según el horizonte temporal. Se considerarán 12 años para el periodo de estimación y un año para el de predicción.\n\nk &lt;- 144                  \nh &lt;- 12                   \nT &lt;- length(Pasajeros)    \ns&lt;-T - k - h            \n\nmapeArima &lt;- matrix(NA, s + 1, h)\n\nX &lt;- data.frame(cbind(DiasLaborables, DiasNoLaborables, \n                      LunesNavidad, DiasPreSanta, DiasPascua))\n\nfor (i in 0:s) {\n  train.set &lt;- subset(Pasajeros, start = i + 1, end = i + k)\n  test.set &lt;-  subset(Pasajeros, start = i + k + 1, end = i + k + h) \n  \n  X.train &lt;- as.matrix(X[(i + 1):(i + k),])\n  X.test &lt;- as.matrix(X[(i + k + 1):(i + k + h),])\n  \n  fit &lt;- try(Arima(train.set, \n                   lambda = 0,\n                   order = c(0, 1, 1),\n                   seasonal = c(0, 1, 1),\n                   xreg=X.train), \n             silent = TRUE)\n  \n  if (!is.element(\"try-error\", class(fit))) {\n    fcast &lt;- forecast(fit, h = h, xreg = X.test)\n    mapeArima[i + 1,] &lt;- 100*abs(test.set - fcast$mean)/test.set\n  }\n}\n\nerrorArima &lt;- apply(mapeArima, MARGIN = 2, FUN = median, na.rm = TRUE)\nround(errorArima, 2)\n\n [1] 1.09 1.12 1.32 1.52 1.51 1.46 1.66 1.87 2.12 2.02 2.21 2.59\n\n\nEl error es creciente en el horizonte temporal de predicción. Para predicciones extramuestrales a un periodo vista vale 1.1%, algo superior al error de estimación, pero realmente bajo. Incluso para predicciones a doce meses vista, el error sigue siendo reducido, 2.6%. Recordemos que para Alisado exponencial el error a 12 meses vista era de 2.9%, muy similar."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#interpretación-del-modelo-estimado",
    "href": "03-11-Ejemplo-Pasajeros.html#interpretación-del-modelo-estimado",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.5 Interpretación del modelo estimado",
    "text": "5.5 Interpretación del modelo estimado\nEl modelo estimado y validado corresponde al modelo de las aerolíneas con intervención: \\(ARIMA_{12}(0,1,1)(0,1,1) + AI\\). La ecuación teórica completa del modelo es:\n\\[(1-L)(1-L^{12})\\log(Pasajeros) = (1+\\theta_1 L)(1 + \\theta_{12} L^{12})\\varepsilon_t+\\]\n\\[\\gamma_1 DiasLaborables +\\gamma_2 DiasNoLaborables +\\gamma_3 LunesNavidad+\\]\n\\[\\gamma_4 DiasPreSanta + \\gamma_5 DiasPascua +\\]\n\\[\\gamma_6 d0402 +\\gamma_7 d0805 +\\gamma_8 d0806 +\\gamma_9 d0310.\\]\nSi se desarrolla el modelo y se deja en función de la tasa de variación anual del número de pasajero, queda (la parte de intervención no cambia):\n\\[TVAPasajeros_t = TVAPasajeros_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\theta_{12} \\varepsilon_{t-12}+ \\theta_1 \\theta_{12} \\varepsilon_{t-13}+\\varepsilon_t + AI.\\]\nFinalmente, el modelo estimado es:\n\\[\\widehat{TVAPasajeros}_t = TVAPasajeros_{t-1} -0.53 \\varepsilon_{t-1} -0.37 \\varepsilon_{t-12}+ 0.20 \\varepsilon_{t-13} +\\]\n\\[0.034\\cdot DiasLaborables +0.016\\cdot DiasNoLaborables+ 0.026\\cdot LunesNavidad\\]\n\\[- 0.058\\cdot DiasPreSanta - 0.025\\cdot DiasPascua +\\]\n\\[0.033\\cdot d0402 +0.064\\cdot d0805 +0.028\\cdot d0806 +0.038\\cdot d0310.\\] Interpretación:\n\nLa tasa de variación anual del número de pasajeros en transporte urbano para un mes dado es la misma que la observada en el mes previo.\nSi hace uno, doce o trece meses se observó un número atípico de pasajeros, se debe tener en cuenta para corregir la predicción.\nCada día laborable adicional en un mes supone un incremento en el número de pasajeros del 3.4% y cada día no laborable un incremento adicional del 1.6%.\nSi la Navidad cae en lunes y por tanto Nochebuena en domingo, ese mes de diciembre el número de pasajeros será un 2.6% superior al de un mes de diciembre donde la Navidad no cae en lunes.\nEl mes (marzo o abril) en que caigan los días laborables (lunes a jueves) de la Semana Santa el número de pasajeros se reducirá un 5.8% respecto de lo esperado.\nDe la misma forma, el mes (marzo o abril) en que caigan los días laborables (lunes a viernes) de la semana posterior a Domingo de Resurrección el número de pasajeros se reducirá un 2.5% respecto de lo esperado.\nAdemas, para cuatro meses se observó una tasa de variación anual atípicamente superior a la esperada."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#predicción-del-número-de-pasajeros-en-transporte-urbano",
    "href": "03-11-Ejemplo-Pasajeros.html#predicción-del-número-de-pasajeros-en-transporte-urbano",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.6 Predicción del número de pasajeros en transporte urbano",
    "text": "5.6 Predicción del número de pasajeros en transporte urbano\nUna vez dado por válido el modelo, podemos pasar a realizar predicciones para los próximos años. Para las variables de intervención sujetas a fecha de calendario ya hemos ido creando sus valores previstos, para las demás los fijaremos a cero.\n\npPasajerosAri &lt;- forecast(PasajerosAri, \n                          h = 60,\n                          xreg = cbind(pDiasLaborables, pDiasNoLaborables, \n                                       pLunesNavidad, pDiasPreSanta, pDiasPascua,\n                                       rep(0, 60), rep(0, 60), \n                                       rep(0 ,60), rep(0, 60)), \n                          level = 95)\nautoplot(pPasajerosAri, \n         xlab = \"\",\n         ylab = \"\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1996, 2024, 4))\n\n\n\n\n\n\n\nFigura 16: Pasajeros (1996-2019) y predicción (2020-2024). Modelo Arima\n\n\n\n\n\nAsí, en 2020 se esperan 3180 millones de pasajeros y para 2021 un total de 3247 millones de pasajeros."
  },
  {
    "objectID": "03-11-Ejemplo-Pasajeros.html#footnotes",
    "href": "03-11-Ejemplo-Pasajeros.html#footnotes",
    "title": "Series Temporales: Análisis de la serie Pasajeros en transporte urbano",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nRecordemos que hemos recortado la serie hasta 2019 y vivimos en un mundo donde nada sabemos de la Covid-19.↩︎\nRealmente en 2020 el número de Pasajeros fue de 1682 millones, un 45% menos que en 2019.↩︎"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Iván Arribas",
    "section": "",
    "text": "Iván Arribas es licenciado en Ciencias Matemáticas con la especialidad de Estadística e Investigación Operativa, y doctor en Ciencias Económicas. Actualmente es Profesor Titular en el Departamento de Análisis Económico de la Universitat de València, donde lleva más de 25 años como docente e investigador."
  },
  {
    "objectID": "04-02-Multiples_CS.html#descomposición",
    "href": "04-02-Multiples_CS.html#descomposición",
    "title": "Múltiples componentes estacionales",
    "section": "Descomposición",
    "text": "Descomposición\nPodemos descomponer la serie de forma análoga a como se hacia para series con una componente estacional usando la función mstl.\n\ndescomposicion &lt;- mstl(electricidad)\nautoplot(descomposicion) \n\n\n\n\n\n\n\nFigura 2: Descomposición de Consumo eléctrico por hora\n\n\n\n\n\nEn la Figura 2 aparecen los mismos paneles que has visto en el Tema 2 –datos originales, tendencia y residuo–, más los dos paneles correspondientes a las dos componentes estacionales, de orden 24 y 168 (Seasonal24 y Seasonal168).\nPara poder interpretar adecuadamente cada serie hay que fijarse en la escala de los ejes verticales. La tendencia apenas cambia en el periodo de análisis. Las dos componentes estacionales oscilan sobre un rango de valores mayor. Dentro de cada día el consumo de electricidad oscila aproximadamente 20 GW entre las horas pico y las valle (Seasonal24): en los picos se consumen unos 7.5 GW más que la media diaria, y en los valles unos 12.5 GW menos que la media diaria. Por otro lado, el rango de variación semanal en el consumo también es de aproximadamente 20 GW (Seasonal168): de lunes a viernes se consumen como máximo unos 5 GW más que la media semanal y los domingo unos 15 GW menos.\nVamos a mostrar un detalle de la componente estacional diaria, semanal y su composición para la primera semana de la serie (véase Figura 3).\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Componente estacional diaria\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Componente estacional semanal\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Componente estacional diaria + semanal\n\n\n\n\n\n\n\nFigura 3: Componentes estacionales para Consumo eléctrico"
  },
  {
    "objectID": "04-02-Multiples_CS.html#predicción-a-partir-de-la-descomposición-y-alisado-exponencial",
    "href": "04-02-Multiples_CS.html#predicción-a-partir-de-la-descomposición-y-alisado-exponencial",
    "title": "Múltiples componentes estacionales",
    "section": "Predicción a partir de la descomposición y Alisado exponencial",
    "text": "Predicción a partir de la descomposición y Alisado exponencial\nExisten varios métodos para poder estimar series con estacionalidad múltiple. Uno de los más sencillos consiste en descomponer de la serie. Después, predecir las componentes estacionales por simple repetición y predecir la componente de la tendencia usando Alisado exponencial. En último lugar, se combinan la predicción de la tendencia con las predicciones de las estacionalidades para obtener una predicción de la serie.\nLa función stlf hace todas estas operaciones de forma automática. Por defecto la tendencia se predice usando Alisado exponencial (“ets”), pero con el argumento method se pueden especificar otros modelos alternativos, “arima”, “naive” o “rwdrift”.\nEn la Figura 4 se muestra el resultado de aplicar stlf a la serie de consumo eléctrica. La línea negra representa la serie y la línea azul su predicción para las dos semanas siguientes (dos primeras semanas de marzo de 2021). El título por defecto de la figura indica que la tendencia de la serie se ha ajustado usando la función ets y presenta una pendiente aditiva amortiguada y error multiplicativo.\n\npdatos_stfl &lt;- stlf(electricidad)\n\nautoplot(pdatos_stfl, PI = FALSE) + \n  ylab(\"GW\") + \n  xlab(\"Semanas\") + \n  scale_x_continuous(breaks = seq(1, 7, by = 1))\n\n\n\n\n\n\n\nFigura 4: Consumo eléctrico y predicción. Descomposición + Alisado"
  },
  {
    "objectID": "04-02-Multiples_CS.html#predicción-a-partir-de-asilado-exponencial-y-series-de-furier",
    "href": "04-02-Multiples_CS.html#predicción-a-partir-de-asilado-exponencial-y-series-de-furier",
    "title": "Múltiples componentes estacionales",
    "section": "Predicción a partir de Asilado Exponencial y series de Furier",
    "text": "Predicción a partir de Asilado Exponencial y series de Furier\nUno de los inconvenientes del método visto es que estima todos los elementos de cada componente estacional (\\(24 + 168\\) elementos en nuestro ejemplo) como si fueran independientes, sin tener en cuenta que, por lo general, evolucionan siguiendo una suave curva. Véase en el panel (a) de la Figura 3 la curva que sigue la estacionalidad diaria, donde la componente de una hora determinada está muy relacionada con la componente de la hora precedente y posterior.\nAlgunos métodos alternativos de predicción usan la dependencia observada entre los elementos de una componente estacional para ajustarlos a una curva paramétrica, por ejemplo funciones trigonométricas o series de Fourier.\nEntre los métodos que usan funciones trigonométricas está el implementado en Livera, Hyndman, and Snyder (2011). El método de estimación que emplean estos autores es complejo, requiere tiempo de computación y no siempre el ajuste obtenido es el más adecuado, así que los resultados pueden ser en ocasiones elevados.\nVeamos un ejemplo de la implementación de este método con la función tbats. La Figura 5 muestra la predicción para dos semanas.\n\ntmp &lt;- Sys.time()\n\ndatos_tbats &lt;- tbats(electricidad)\n\npdatos_tbats &lt;- forecast(datos_tbats, \n                         h = 14 * 24,\n                         level = 95)\n\nautoplot(pdatos_tbats, PI = FALSE) + \n  ylab(\"GW\") + \n  xlab(\"Semanas\") + \n  scale_x_continuous(breaks = seq(1, 7, by = 1))\n\n(tiempo &lt;- Sys.time() - tmp)\n\nTime difference of 33.25712 secs\n\n\n\n\n\n\n\n\nFigura 5: Consumo eléctrico y predicción. Ajuste de las componentes estacionales por funciones trigonométricas\n\n\n\n\n\n\n\nEl título de la figura indica el modelo TBATS estimado. Su interpretación precisa la podéis encontrar en Livera, Hyndman, and Snyder (2011). Observa que la estimación del modelo ha requerido de 33 segundos.\nEntre los métodos que involucran series de Fourier una propuesta reciente es el modelo Prophet, disponible a través del paquete fable.prophet. Este modelo fue introducido por Facebook (Taylor and Letham (2018)) originalmente para pronosticar datos diarios con estacionalidad semanal y anual, además de efectos calendario. Posteriormente se amplió para cubrir más tipos de datos estacionales."
  },
  {
    "objectID": "04-04-Series_acotadas.html#predicciones-positivas",
    "href": "04-04-Series_acotadas.html#predicciones-positivas",
    "title": "Series acotadas",
    "section": "Predicciones positivas",
    "text": "Predicciones positivas\nPara imponer que las predicciones sean positivas basta trabajar con la transformación logarítmica. Por ejemplo, consideremos la serie anual de nacimientos. Vamos ha realizar predicciones a muy largo plazo (30 años) usando Alisado de Holt con y sin transformación logarítmica.\nEn el panel superior de la Figura 1, donde se ha usado la transformación logarítmica, no solo la predicción, sino también el intervalo es siempre positivo. Por el contrario, en el panel inferior de la Figura 1, donde no se ha usado la transformación logarítmica, las predicciones a partir de 2042 ya son negativas y el extremo inferior del intervalo de confianza es negativo desde el año 2028.\n\nConLog &lt;- forecast(ets(nacimientos,\n                       model = \"AAN\", \n                       damped = FALSE, \n                       lambda = 0),\n                   h = 30,\n                   level = 95)\n\nSinLog &lt;- forecast(ets(nacimientos, \n                       model = \"AAN\", \n                       damped = FALSE),\n                   h = 30,\n                   level = 95)\n\nautoplot(ConLog, main = \"\", xlab = \"\", ylab = \"Nacimientos (miles)\")\n\nautoplot(SinLog, main = \"\", xlab = \"\", ylab = \"Nacimientos (miles)\") + \n  geom_hline(yintercept=0, size = .3, linetype = 2)\n\n\n\n\n\n\n\n\n\n\n\n(a) Con transformación logarítmica\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Sin transformación logarítmica\n\n\n\n\n\n\n\nFigura 1: Ajuste y predicción de Nacimientos con Holt"
  },
  {
    "objectID": "04-04-Series_acotadas.html#predicciones-dentro-de-un-intervalo",
    "href": "04-04-Series_acotadas.html#predicciones-dentro-de-un-intervalo",
    "title": "Series acotadas",
    "section": "Predicciones dentro de un intervalo",
    "text": "Predicciones dentro de un intervalo\nSupongamos que el valor de la serie es un porcentaje y que debe estar comprendido entre \\(a = 0\\) y \\(b = 100\\), como por ejemplo la serie anual consistente en el porcentaje de nacimientos de mujeres con nacionalidad española. La transformación que garantiza que las predicciones se mantendrán dentro del intervalo \\([a,\\;b]\\) es\n\\[z_t = \\log\\Big(\\frac{y_t - a}{b - y_t}\\Big),\\] donde \\(y_t\\) es la serie original y \\(z_t\\) la serie transformada. Una vez tenemos las predicciones de la serie \\(z_t\\), tenemos que deshacer la transformación con\n\\[y_t = \\frac{a +b\\, e^{z_t}}{1 + e^{z_t}}.\\]\nEn este caso no hay un argumento lambda que nos facilite el trabajo y hay que escribir más código.\n\na &lt;- 0\nb &lt;- 100\n\nz &lt;- log((serie - a) / (b - serie))\n\nmodelo &lt;- ets(z, \n              model = \"AAN\", \n              damped = FALSE)\n\npz &lt;- forecast(modelo, \n               h = 30,\n               level = 95)\n\npz[[\"mean\"]] &lt;-  (a + b * exp(pz[[\"mean\"]]) ) / (1 + exp(pz[[\"mean\"]]))\npz[[\"lower\"]] &lt;- (a + b * exp(pz[[\"lower\"]])) / (1 + exp(pz[[\"lower\"]]))\npz[[\"upper\"]] &lt;- (a + b * exp(pz[[\"upper\"]])) / (1 + exp(pz[[\"upper\"]]))\npz[[\"x\"]] &lt;- serie\n\nautoplot(pz, \n         main = \"\",\n         xlab = \"\",\n         ylab = \"Nacimientos de mujeres españolas (%)\")\n\n\n\n\n\n\n\nFigura 2: Predicción con Holt. Valores acotados entre 0% y 100%\n\n\n\n\n\nHemos solicitado una previsión a 30 años vista para poder ver mejor el efecto de acotar la serie. En la Figura 2 se observa que no solo la predicción, sino también el intervalo está siempre entre 0% y 100%."
  },
  {
    "objectID": "05-Recursos-R.html",
    "href": "05-Recursos-R.html",
    "title": "Series Temporales",
    "section": "",
    "text": "Durante el curso usaremos diferentes ficheros para los datos de los ejemplos y para el código en R. Desde esta página puedes descargarte todo el material\n\n\n\n\nFicheros de datos\n\nResiduos recogidos: Residuos recogidos por o en nombre de las autoridades municipales y eliminados a través del sistema de gestión de residuos (fuente Instituto Nacional de Estadística). Es una serie anual de 1995 a 2022.\nNacimientos: Nacimientos en España (fuente Instituto Nacional de Estadística). Serie mensual de enero de 1975 a diciembre de 2023.\nConsumo eléctrico: Consumo eléctrico en España en GW (fuente Red Eléctrica de España). Es una serie horaria desde las 00:00 horas del 1 de febrero de 2021 hasta las 23:00 horas del 28 de febrero de 2021.\nConsumo eléctrico por hora: Consumo eléctrico en España en GWh (fuente Red Eléctrica de España). Es una serie diaria desde el 1 de enero de 2023 hasta el 31 de diciembre de 2023.\nAforo de vehículos en Oropesa: Aforo de vehículos por Oropesa (número medio de vehículos por día), carretera N-340, km. 996,48 (fuente Ministerio de Fomento). La serie es anual de 1960 a 2022.\nConsumo de alimentos per cápita: Consumo alimentario en hogar per cápita en España. Esta serie está construida a partir de la serie de consumo alimentario en hogar (fuente Ministerio de Agricultura, Alimentación y Medio Ambiente), y la serie de población (fuente Instituto Nacional de Estadística). Es una serie anual de 1990 a 2023 y la unidad es el kg per cápita.\nExportaciones de España a la UE-27: volumen de exportaciones de bienes, en millones de euros, desde España hacía la UE-27 (conjunto de 27 países de la Unión Europea), desde enero de 1999 hasta diciembre de 2023 (fuente Eurostat).\nExportaciones de España a la UE-27 de productos químicos: volumen de exportaciones de productos químicos, en millones de euros, desde España hacía la UE-27 (conjunto de 27 países de la Unión Europea), desde enero de 1999 hasta diciembre de 2020 (fuente Eurostat).\nTemperatura: Temperatura media diaria en España medida en el aeropuerto de Madrid (fuente Agencia Estatal de Meteorología, AEMET). Serie diaria del 1 enero de 2023 al 31 de diciembre de 2023.\nDefunciones por enfermedades cerebrovasculares: Número de defunciones causadas por enfermedades cerebrovasculares (fuente Instituto Nacional de Estadística). Es una serie mensual de enero de 1980 a diciembre de 2023.\nPasajeros en transporte urbano: Número de pasajeros en transporte urbano en España (fuente Instituto Nacional de Estadística). Serie mensual de enero 1996 a diciembre de 2023.\nPernoctaciones: Número de pernoctaciones que los turistas extranjeros realizan en España en alojamientos turísticos autorizados (fuente Eurostat). Es una serie mensual de enero de 2000 a diciembre de 2023.\n\n\n\n\nTodos los ficheros de datos en un único fichero comprimido\n\n\n\n\n\n\nCódigo R\nTienes el código para los temas de teoría aquí:\n\nCódigo para el tema 1\nCódigo para el tema 2\nCódigo para el tema 3\nCódigo para el tema 4\nCódigo para el tema 5\n\n\n\nPara el ejemplo de Defunciones por enfermedades cerebrovasculares tienes el código aquí:\n\nCódigo para el ejemplo del tema 1\nCódigo para el ejemplo del tema 2\nCódigo para el ejemplo del tema 3\nCódigo para el ejemplo del tema 4\nCódigo para el ejemplo del tema 5\n\nY para el ejemplo de Pasajeros en transporte urbano aquí.\n\n\n\nTodos los ficheros de código en un único fichero comprimido"
  },
  {
    "objectID": "04-03-Redes_neuronales.html",
    "href": "04-03-Redes_neuronales.html",
    "title": "Autorregresión con redes neuronales",
    "section": "",
    "text": "1 Antecedentes\nEn las dos grandes familias de modelos que permiten ajustar y predecir series temporales –Alisado exponencial y modelos Arima– se ajusta un modelo a una serie temporal y el resultado del ajuste nos permite no solo predecir, sino aprender y entender el comportamiento de la serie. Por ejemplo, el resultado del ajuste por alisado nos permite saber si la pendiente de la serie cambia en el tiempo (parámetro \\(\\beta\\) del ajuste) o el tipo de esquema de la serie según que la estacionalidad sea aditiva o multiplicativa. Con los modelos Arima podemos estimar el impacto en la serie de un efecto calendario (Semana Santa, días laborables…).\nOtra familia de modelos muy versátiles que permiten predecir con todo tipo de datos –transversales, series temporales, imágenes, espacio-temporales…– son las redes neuronales. Estos modelos son el embrión del Deep Learning y el motor de muchas AI y los estudiaréis en detalle el próximo año en la asignatura Técnicas Avanzadas de Predicción en Negocios.\nVamos a ver muy, pero que muy por encima en que consisten las redes neuronales y como se pueden aplicar para predecir series temporales. Esto es una pequeña píldora.\n\n\n2 Arquitectura de una red neuronal de una capa\nUna red neuronal puede ser entendida como una red de neuronas dispuestas en capas. Siempre hay una capa de entrada de los datos y una capa de salida de la respuesta. Entre estas dos capas se puede disponer de tantas capas intermedias (ocultas) como se considere necesario.\nCada capa está formada por un número determinado y potencialmente diferente de neuronas o nodos. Los nodos de una capa están conectadas a los nodos de la siguiente. Por simplicidad asumiremos que todos los nodos de una capa se conectan con los nodos de la capa siguiente.\nAquí vamos a considerar solo redes neuronales con una capa intermedia y donde la capa de salida tiene solo una neurona. La Figura 1 es un ejemplo de este tipo de redes neuronales.\n\n\n\n\n\n\n\n\nFigura 1: Red neuronal con una sola capa intermedia\n\n\n\nEn esta red cada nodo de una capa recibe entradas de los nodos de la capa previa. Dicho de otra forma, las salidas de los nodos de una capa son las entradas de los nodos de la siguiente capa. Es lo que se denomina una multilayer feed-forward network.\nLas entradas que recibe cada nodo se combinan usando una función lineal ponderada. Por ejemplo, un nodo \\(j\\) de la capa intermedia recibe las dos entradas \\(x_1\\) y \\(x_2\\) de los nodos de la capa de entrada y los combina linealmente\n\\[z_j = b_j + \\sum_{i=1}^2 w_{i,j}x_i\\] Para los nodos de la capa intermedia el valor \\(z_j\\) se transforma usando una función no lineal, por ejemplo la sigmoidea:\n\\[s_j = \\frac{1}{1 + e^{-z_j}}\\] y este valor \\(s_j\\) es la salida del nodo \\(j\\) que va al nodo de la capa de salida.\nLos valores de los pesos \\(b_1\\), \\(b_2\\), \\(w_{1,1}\\), \\(w_{1,2}\\)…\\(w_{2,5}\\) se deben ajustar a partir de los datos. Estos valores suelen estar restringidos para evitar que sean demasiado grandes. El parámetro que restringe las ponderaciones se conoce como parámetro de decaimiento, y suele ser igual a \\(0.1\\).\nLos pesos toman valores aleatorios al principio y luego se actualizan con los datos observados en un proceso de aprendizaje. Por lo tanto, hay un elemento de aleatoriedad en las predicciones producidas por una red neuronal. Por este motivo, la red suele entrenarse varias veces utilizando diferentes puntos de partida aleatorios, y los resultados se promedian.\n\n\n3 Autoregresión de redes neuronales\nEn el contexto de series temporales, los valores de entrada pueden ser valores retardados de la serie y el valor de salida deseado el valor contemporáneo. De la misma forma que en un modelo AR usamos los datos pasados para predecir el futuro.\n\n\n\n\n\n\nFigura 2: Red neuronal para predecir una serie temporal. El dato del periodo \\(t\\) se predice a partir de los dos datos previos.\n\n\n\nVamos a extender estas ideas e ir añadiendo algo de notación.\nComo hemos indicado vamos a considerar solo redes simples con una capa intermedia y una capa de salida de un solo nodo, que denominaremos \\(NNAR\\). La notación \\(NNAR(p, k)\\) indica que hay \\(p\\) valores desfasados en la capa de entrada y \\(k\\) nodos en la capa intermedia. Por ejemplo, la red de la Figura 2 es modelo \\(NNAR(2,5)\\), donde \\(y_{t-1}\\) e \\(y_{t-2}\\) son usados para predecir \\(y_t\\). Así, un modelo \\(NNAR(p, 0)\\) sería equivalente a un modelo \\(ARIMA(p,0,0)\\).\nSi la serie tiene estacionalidad es conveniente que entre los datos de entrada estén las observaciones pasadas de la misma estación que se desea predecir. Por ejemplo, para la serie diaria de consumo eléctrico un modelo \\(NNAR(2, 1, k)\\) usaría como datos de entrada \\(y_{t-1}\\), \\(y_{t-2}\\) e \\(y_{t-7}\\) para predecir \\(y_t\\). En general, \\(NNAR(p,P,k)_m\\) usa como datos de entrada \\(y_{t-1}\\),\\(y_{t-2}\\),…,\\(y_{t-p}\\),\\(y_{t-m}\\), \\(y_{t-2m}\\),…,\\(y_{t-Pm}\\) y una capa intermedia de \\(k\\) neuronas. Por lo tanto, \\(NNAR(p,P,0)_m\\) es equivalente a \\(ARIMA(p,0,0)(P,0,0)_m\\).\n\n\n4 Aplicación\nLa función nnetar de la librería forecast permite estimar modelos \\(NNAR(p,P,k)_m\\). En su forma más sencilla el usuario no tiene que especificar los valor de los parámetros \\(p\\), \\(P\\) y \\(k\\) ya que la función los identifica según ciertos criterios.\nLa siguiente gráfica muestra el consumo eléctrico en España en GWh para 17 semanas desde febrero hasta mayo de 2023. Hay una fuerte componente estacional diaria de orden \\(7\\), donde el consumo es alto de lunes a viernes, algo mas reducido el sábado y aún menor el domingo.\n\nelectricidad &lt;- read.csv(\"./series/Consumo electrico.csv\", \n                         header = TRUE)\n\nelectricidad &lt;- ts(electricidad[, 1], \n                   start = c(1, 7),\n                   frequency = 7)\n\nelectricidad &lt;- window(electricidad,\n                       start = c(7, 1),\n                       end = c(23, 7))\n\nautoplot(electricidad) + \n  ggtitle(\"\") +\n  ylab(\"GWh\") + \n  xlab(\"Semana\")\n\n\n\n\n\n\n\nFigura 3: Consumo eléctrico (febrero a mayo de 2023)\n\n\n\n\n\nLa Figura 4 muestra la serie y su predicción para los siguientes 14 días. El modelo ajustado es \\(NNAR(1,1,2)_7\\). Es decir, la capa de entrada tiene 2 nodos porque para predecir el consumo del día \\(t\\), \\(y_t\\), se usa el consumo del día previo \\(y_{t-1}\\) y el consumo de hace una semana \\(y_{t-7}\\). La capa intermedia tiene dos nodos.\n\nfit &lt;- nnetar(electricidad)\n\naccuracy(fit)\n\n                      ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -0.05953972 30.88941 21.63649 -0.2778238 3.483857 0.7778686\n                  ACF1\nTraining set 0.4850203\n\n\nEl error de ajuste es de 3.5% o 31 GWh y el ajuste no presenta sesgo.\nPor otro lado, el ACF1 muestra una elevada autocorrelación de orden 1. Sin embargo, esto no afecta a la calidad de la predicción por intervalos porque con redes neuronales no se utiliza una fórmula cerrada que precise de la hipótesis de incorrelación. Se utiliza un proceso complejo y costoso temporalmente.\n\ntiempo &lt;- Sys.time()\n\npfit &lt;- forecast(fit, \n                 h = 14,\n                 level = 95,\n                 PI = TRUE)\n\nSys.time() - tiempo\n\nTime difference of 12.05069 secs\n\nautoplot(pfit) +\n  ylab(\"GWh\") + \n  xlab(\"Semana\")\n\n\n\n\n\n\n\nFigura 4: Consumo eléctrico (febrero a mayo de 2023) y predicción\n\n\n\n\n\n\npfit\n\n         Point Forecast    Lo 95    Hi 95\n24.00000       582.9172 523.3322 642.4020\n24.14286       609.0955 549.3072 675.2243\n24.28571       617.6091 557.9956 685.3703\n24.42857       629.3987 561.6617 692.4236\n24.57143       626.7577 561.3905 688.3724\n24.71429       579.3309 515.9972 643.2282\n24.85714       552.6261 492.6672 619.5387\n25.00000       564.0973 499.1233 642.2345\n25.14286       583.3758 511.2586 673.9035\n25.28571       594.4224 526.9285 683.5920\n25.42857       606.9388 527.7148 695.5337\n25.57143       608.2460 534.0465 687.8312\n25.71429       576.6597 510.5295 672.8452\n25.85714       557.3140 495.3543 634.8729\n\n\nLa función nnetar admite la inclusión de variables de intervención de la forma usual a través del argumento xreg."
  }
]